openapi: 3.1.0
info:
  title: Smartsheet API Reference
  version: 2.0.0
  x-logo:
    url: /images/smartsheet-horizontal-logo.png
    href: https://developers.smartsheet.com
    altText: Smartsheet logo
  description: based on 2024-07-12 JSON version; see https://smartsheet.redoc.ly/ for docs, examples, etc
servers:
  - url: https://api.smartsheet.com/2.0
    description: US Smartsheet API root URL
  - url: https://api.smartsheet.eu/2.0
    description: EU Smartsheet API root URL
  - url: https://api.smartsheetgov.com/2.0/
    description: Gov-US Smartsheet API root URL
tags:
  - name: alternateEmailAddress
    x-displayName: Methods
  - name: alternateEmailAddressDescription
    x-displayName: Alternate Email Addresses Basics
    description: >
      A User in Smartsheet must have a primary email address associated with
      their user account (User.email) and may optionally have one or more
      alternate email addresses associated with their account
      (User.alternateEmails). The following operations must be performed using
      an user's primary email address:


      * Add Group Members

      * Add User

      * Create Update Request

      * Share Report

      * Share Sheet

      * Share Workspace


      Attempting to specify a user's alternate email address for any of the
      above operations results in an error.
  - name: alternateEmailAddressObjects
    x-displayName: Objects
    description: |
      # AlternateEmail Object
        <SchemaDefinition schemaRef="#/components/schemas/AlternateEmail" />
  - name: attachments
    x-displayName: Methods
  - name: attachmentsDescription
    x-displayName: Attachments Basics
    description: >
      Attachments can exist on a [comment](../../tag/commentsDescription/) (that
      is, within a discussion), on a [row](../../tag/rowsDescription), or on a
      [sheet](../../tag/sheetsDescription).


      # Post an Attachment


      Like the Smartsheet app, the Smartsheet API allows uploading files to
      sheets, rows, and comments.

      You can upload a file by performing either a simple upload or a multipart
      upload.


      A [simple upload](#section/Post-an-Attachment/Simple-Uploads) allows you
      to add a single file attachment to the specified object.

      For example, you can perform a simple upload to [attach a file to a
      sheet](../../tag/attachments#operation/attachments-attachToSheet), [attach
      a file to a
      row](../../tag/attachments#operation/row-attachments-attachFile), or
      [attach a file to a
      comment](../../tag/attachments#operation/attachments-attachToComment).


      A [multipart upload](#section/Post-an-Attachment/Multipart-Uploads) allows
      you to add a single file attachment to the specified object (that is,
      attach a file to a sheet, row, or comment), or to create an object and
      attach a file using a single request.

      For example, you can perform a multipart upload to [add a new
      comment](../../tag/comments#operation/comments-create) that contains a
      single file attachment or to [add a new discussion to a
      sheet](../../tag/discussions#operation/discussions-create) that contains a
      single file attachment.


      The max file size for uploads through the API is limited to 30mb.


      NOTE: This is a resource-intensive operation. If you encounter an error,
      see [Rate Limiting](#section/Work-at-Scale/Rate-Limiting).


      ## Multipart Uploads


      A multipart upload request must include the following HTTP headers:


      Header | Description |

      -----|-----|

      **Content-Length** | The length of the request payload.

      **Content-Type** | Must be set to **multipart/form-data**, and include the
      boundary string that separates the parts in the request payload.


      The request body of a multipart upload request contains one or more parts,
      each part containing either JSON or a file to upload.

      The request body must contain at least one part.

      Each part must start with the boundary string specified in the
      **Content-Type** request header, and must contain the following part
      headers:


      Header | Description |

      -----|-----|

      **Content-Disposition** | Contains the following semicolon-delimited
      items:<ul><li>**form-data**</li><li>**name="*partname*"**</li><li>**filename="*filename*"**
      (only required for file parts)</li></ul>NOTE: Values specified in the
      Content-Disposition header must be URL-encoded.

      **Content-Type** | The content type of the part: **application/json** for
      JSON objects, or the applicable MIME type for file parts


      The last part in the request must be followed by the boundary string,
      followed by two hyphens.


      The documentation for each operation that supports multipart uploads
      specifies the number and names of parts that are expected for the
      operation.

      File parts must have the part name "file", and documentation for
      operations which allow for JSON object parts specify the required part
      name for the JSON part.


      The following example shows a multipart upload request that creates a
      comment containing the specified text and file attachment:


      `POST
      https://api.smartsheet.com/2.0/sheets/4509093797881732/discussions/2889925487028100/comments`

      `Authorization: Bearer JKlMNOpQ12RStUVwxYZAbcde3F5g6hijklM789`

      `Content-Length: 29008`

      `Content-Type: multipart/form-data; boundary=----gU8h01zAAp3LagBr`


      `------gU8h01zAAp3LagBr`

      `Content-Disposition: form-data; name="comment"`

      `Content-Type: application/json`


      `{ "text": "Please review the attached image." }`

      `------gU8h01zAAp3LagBr`

      `Content-Disposition: form-data; name="file"; filename="picture.jpg"`

      `Content-Type: image/jpeg`


      *< Binary content for file >*

      `------gU8h01zAAp3LagBr--`


      NOTE: Most programming languages have libraries that can be used to
      assemble multipart requests.


      ## Simple Uploads


      To perform this kind of upload, you must set specific headers to tell
      Smartsheet about the file. The following three headers are required:


      Header | Description |

      -----|-----|

      **Content-Disposition** | **attachment** to tell the API that a file is in
      the body of the `POST` request, followed by a semicolon, followed by
      **filename=** and the URL-encoded filename in quotes

      **Content-Length** | Must be set to the size of the file, in bytes. For
      example to determine file size using in UNIX: <p>`$ ls -l
      ProgressReport.docx`<br/>`5463 ProgressReport.docx`</p>

      **Content-Type** | Can be left blank if it is not known (but must be
      present); Smartsheet makes its best guess based on the extension of the
      file.


      The following example request shows a simple upload that adds a file
      attachment to a sheet:


      `POST https://api.smartsheet.com/2.0/sheets/4509093797881732/attachments`

      `Authorization: Bearer JKlMNOpQ12RStUVwxYZAbcde3F5g6hijklM789`

      `Content-Disposition: attachment; filename="ProgressReport.docx"`

      `Content-Type: application/msword`

      `Content-Length: 5463`


      *< Binary content for file >*


      As shown in this example, the contents of the file is included in the body
      of the `POST` request. In most programming languages, this is done by
      reading the file from an input stream and writing it out to the output
      stream of the HTTP request.
  - name: attachmentsObjects
    x-displayName: Objects
    description: |
      # Attachment Object
        <SchemaDefinition schemaRef="#/components/schemas/Attachment"/>

      # URLAttachmentRequest Object
        <SchemaDefinition schemaRef="#/components/schemas/URLAttachmentRequest"/>
  - name: automationRules
    x-displayName: Methods
  - name: automationRulesDescription
    x-displayName: Automation Rules Basics
    description: >
      Automation is a catch-all term for approvals, notifications, and update
      requests. You can delete, update, or retrieve various automation settings
      through the API. You cannot create new automation rules programmatically.
  - name: automationRulesObjects
    x-displayName: Objects
    description: |
      # AutomationRule Object
        <SchemaDefinition schemaRef="#/components/schemas/AutomationRule"/>

      # AutomationAction Object
        <SchemaDefinition schemaRef="#/components/schemas/AutomationAction"/>
  - name: automationRulesRelated
    x-displayName: Related Items
    description: >
      # Disabled Reasons for Automation Rules


      Reason | Description |

      -----|-----|

      **APPROVAL_COLUMN_MISSING** | This rule's approval status column has been
      deleted.

      **APPROVAL_COLUMN_WRONG_TYPE** | The approval column must be a dropdown
      column.

      **AUTOMATION_NOT_ENABLED_FOR_ORG** | To create or edit automated actions,
      you need to upgrade your organization account to a Business or Enterprise
      plan.

      **COLUMN_MISSING** | A column referenced by this rule has been deleted.

      **COLUMN_TYPE_INCOMPATIBLE** | A column referenced by this rule has been
      changed to an incompatible column type.

      **NO_POTENTIAL_RECIPIENTS** | This rule has no recipients that will be
      able to receive notifications based on this sheet's permission settings or
      this account's approved domain sharing list.

      **NO_VALID_SELECTED_COLUMNS** | All selected columns for this rule have
      been deleted.
  - name: cellImages
    x-displayName: Methods
  - name: cellImagesDescription
    x-displayName: Cell Images Basics
    description: |
      A cell image is an image that has been uploaded to a cell within a sheet.
  - name: cellImagesObjects
    x-displayName: Objects
    description: |
      # Image Object
        <SchemaDefinition schemaRef="#/components/schemas/Image"/>

      # Image Url Object
        <SchemaDefinition schemaRef="#/components/schemas/ImageUrl"/>

      # Image Url Map Object
        <SchemaDefinition schemaRef="#/components/schemas/ImageUrlMap"/>
  - name: cells
    x-displayName: Methods
  - name: cellsDescription
    x-displayName: Cells Basics
    description: |
      A collection of cells comprises each row in a sheet.
  - name: cellsObjects
    x-displayName: Objects
    description: |
      #  Cell Object
        <SchemaDefinition schemaRef="#/components/schemas/Cell"/>

      #  CellHistory Object
        <SchemaDefinition schemaRef="#/components/schemas/CellHistory"/>

      #  CellLink Object
        <SchemaDefinition schemaRef="#/components/schemas/CellLink"/>

      #  Duration Object
        <SchemaDefinition schemaRef="#/components/schemas/Duration"/>

      #  Hyperlink Object
        <SchemaDefinition schemaRef="#/components/schemas/Hyperlink"/>

      #  ObjectValue Object
        <SchemaDefinition schemaRef="#/components/schemas/ObjectValue"/>

      #  Predecessor Object
        <SchemaDefinition schemaRef="#/components/schemas/Predecessor"/>

      #  PredecessorList Object
        <SchemaDefinition schemaRef="#/components/schemas/PredecessorList"/>
  - name: cellsRelated
    x-displayName: Related Items
    description: "# Cell Links\n\nCreating or updating cell links via the **cell.linkInFromCell** attribute is a special operation.\nA given row or cell update operation may contain only link updates, or no link updates.\nAttempting to mix row/cell updates with cell link updates results in error code 1115.\nAdditionally, a [CellLink object](../../tag/cellsObjects#section/CellLink-Object) can only be added to an existing cell, so the **cell.linkInFromCell** attribute is not allowed when POSTing a new row to a sheet.\n\nWhen creating a cell link, **cell.value** must be null (the data is pulled from the linked cell).\n\nA cell may not contain both a hyperlink and a cell link, so **hyperlink** and **linkInFromCell** may never both be non-null at the same time.\n\n# Cell Reference\n\n## Cell Value Representation\n\n[Cell objects](../../tag/cellsObjects#section/Cell-Object) retrieved through the Smartsheet APIs have two main attributes representing cell values: **Cell.value**, and\n**Cell.displayValue**. A third attribute, **Cell.objectValue** is currently used only for adding and updating predecessors, or for multi-contact or multi-picklist details, such as email addresses or values in a multi-picklist. An empty cell returns no value.\n\n**Cell.displayValue** is always a string and is only returned for certain column types (see below).  It represents the formatted value as it should\nbe displayed to an end-user.  For example, if a TEXT_NUMBER column is formatted as a US Dollar currency, its **value** may be a number\nlike 1234.5678, but its **displayValue** is \"$1,234.57\".\n\n**Cell.value** represents a cell's raw value and can be one of the following primitive JSON types: string, number, or Boolean,\ndepending on the column type.  An empty cell returns no value. Complex types are represented as strings, formatted as described below:\n\n[Help with Project Columns](https://help.smartsheet.com/articles/765737-project-sheet-columns-start-date-end-date-duration-complete-and-predecessors)\n\nColumn Type | Possible Types for Cell.value | Returns Cell.displayValue?\n------------|-------------------------------|---------------------------\nABSTRACT_DATETIME | string: a project date and time in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format, or a free-form text value.<br/>number: see [Dates and Times](../../#section/API-Basics/Dates-and-Times) for how to request dates to be returned as numbers. | No.\nCHECKBOX | Boolean: **true** if the checkbox is checked, **false** if unchecked, no value if the cell hasn't been touched yet.<br/>string: a free-form text value. | No.\nCONTACT_LIST | string: an email address representing a contact, or a free-form text value. | Yes: same as **value** for free-form strings; for contacts, the contact's name if any, else their email address.\nDATE | string: a date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format, or a free-form text value.<br/>number: see [Dates and Times](../../#section/API-Basics/Dates-and-Times) for how to request dates to be returned as numbers. | No.\nDURATION | string: a duration value such as \"4d 6h 30m\" in the user's locale, or a free-form text value.<br/>See the [Help Center](<%= PROJECT_COLUMN_HELP_URL %>) for more information on durations. | Yes: same as **value**\nMULTI_CONTACT_LIST | string: only visible when using a query parameter of **level** and the value appropriate to the dashboard, report, or sheet that you are querying, otherwise the column type is TEXT_NUMBER. | Yes: same as **value**; to see actual email addresses, see below.\nMULTI_PICKLIST | string: only visible when using a query parameter of **level** and the value appropriate to the dashboard, report, or sheet that you are querying, otherwise the column type is TEXT_NUMBER. | Yes: same as **value**; to see objectValue, see below.\nPICKLIST | string: one of the picklist's column options, or a free-form text value.<br/>number: numeric values | Yes: same as **value** for strings; for number values, the number with formatting applied.\nPREDECESSOR\t| string: a comma-delimited predecessor list such as \"12FS +3d 4h, 14SS\", or a free-form text value.<br/>See the [Help Center](<%= PROJECT_COLUMN_HELP_URL %>) for more information on predecessors. | Yes: same as **value**\nTEXT_NUMBER\t| string: free-form text values<br/>number: numeric values | Yes: same as **value** for strings; for number values, the number with formatting applied.\n\n**Cell.objectValue** is an object representation of a cell's value and is currently used for adding or updating predecessor cell values, or for multi-contact details, such as email addresses.\n\n* For predecessors, it provides a more \"programmer friendly\" format for assembling predecessors. To update a cell's predecessors, set **objectValue** to a\n[PredecessorList object](../../tag/cellsObjects#section/PredecessorList-Object) containing [Predecessor objects](../../tag/cellsObjects#section/Predecessor-Object).\n* For multi-contact or multi-picklist details, use both a level query parameter *and* an **include=objectValue** query to see email addresses rather than display names or to see multi-picklist values.\n\n## Cell Value Parsing\n\nThe flexibility in cell value data types is a powerful feature in the Smartsheet application; however, it poses a challenge\nfor an API in terms of parsing. Being too flexible might result in unexpected behavior. For instance, if you write code\nto post a Date value to a Smartsheet and the API operation succeeds, you might assume that the date value you sent was interpreted\nas date. What happens if you posted your date in the wrong format? Do you really want Smartsheet to keep the malformed date\nas a string value? Probably not.\n\nTo address this problem, the Smartsheet API employs a simple scheme to indicate whether you want a more predictable and strict\ninterface or a more flexible one. By default, a cell value is expected to conform to \"strict\" rules for the type of the cell's column.\nIf an input value doesn't conform, the API returns [error code 1042](../../#section/Error-Code-List/400-Level-Error-Codes).\n\nIf, however, you want the same flexibility as the Smartsheet Web app, you can disable the strict rules, and we’ll do our best to make\nsense of it. To enable lenient parsing simply include **\"strict\": false** in the [Cell object](../../tag/cellsObjects#section/Cell-Object) in your request body.\n\nNOTE: How does strict cell value parsing compare to cell validation settings? Strict cell value parsing determines how string values are parsed. It is set on a per-call basis. In contrast, cell validation is part of the column definition. The <b>overrideValidation</b> property is restricted to sheet admins and does <i>not</i> override strict parsing.\n\nThe parsing rules for the various column types are as follows:\n\n**ABSTRACT_DATETIME**\n\nValue | Description |\n-----|-----|\n**lenient** | Smartsheet attempts to convert the string value to date using ISO 8601 date format, as well as several locale-specific date formats. If the value is a parsable date format, Smartsheet recognizes the date and stores it as such. All other values are simply text values.\n**strict** | The value must be a string value and a valid ISO 8601 date (YYYY-MM-DD). Alternatively, if Unix time (also known as epoch time) is used, you can use the query parameter of **numericDates** set to **true** to have Smartsheet convert epoch time to human readable dates. See [Dates and Times](../../#section/API-Basics/Dates-and-Times) for more information.\n\n**CHECKBOX**\n\nValue | Description |\n-----|-----|\n**lenient** | Boolean values and string values of **true** and **false** are handled the same as **strict**. All other values are saved as text values.\n**strict** | Only Boolean values (true or false) are valid.\n\n**CONTACT_LIST**\n\nValue | Description |\n-----|-----|\n**lenient** | If the value is a valid email address, Smartsheet handles it the same as **strict**. If not, Smartsheet saves the value as a text value.\n**strict** | The value must be a valid email address. If **displayValue** is set, Smartsheet uses that as the name; otherwise, if Smartsheet finds a match among the the access token owner's contacts, Smartsheet associates this cell with that existing contact.\n\nNOTE: See [Contact List Columns](#section/Cell-Reference/Contact-List-Columns) for more information.\n\n**DATE**\n\nValue | Description |\n-----|-----|\n**lenient** | Smartsheet attempts to convert the string value to date using ISO 8601 date format, as well as several locale-specific date formats. If the value is a parsable date format, Smartsheet recognizes the date and stores it as such. All other values are simply text values.\n**strict** | The value must be a string value and a valid ISO 8601 date (YYYY-MM-DD). Alternatively, if Unix time (also known as epoch time) is used, you can use the query parameter of **numericDates** set to **true** to have Smartsheet convert epoch time to human readable dates. See [Dates and Times](#section/API-Basics/Dates-and-Times) for more information.\n\n**DURATION**\n\nValue | Description |\n-----|-----|\n**lenient** | Numeric values are treated as duration values in days. String values which are valid duration strings in the user's locale are treated as durations, and any other values are treated as free-form text values.\n**strict** | Only valid duration strings in the user's locale are valid. Information on duration strings can be found in [Help Center](<%= PROJECT_COLUMN_HELP_URL %>).\n\nNOTE: You may use the query string parameter <b>projectParseLocale</b> with a [supported locale string](../../tag/serverInfoDescription) to force parsing in the specified locale (for example, using <b>en_US</b> lets you send in English values regardless of the user's locale).\n\n**MULTI_CONTACT_LIST**\n\nValue | Description |\n-----|-----|\nN/A | Set using the **objectValue** attribute for the Cell object, which is inherently strict. See [Cell Reference](../../tag/cellsRelated#section/Cell-Reference).\n\n**MULTI_PICKLIST**\n\nValue | Description |\n-----|-----|\nN/A | Set using the **objectValue** attribute for the Cell object, which is inherently strict. See [Cell Reference](../../tag/cellsRelated#section/Cell-Reference).\n\n**PICKLIST**\n\nValue | Description |\n-----|-----|\n**lenient** | All numeric and text values are valid. Formatted numbers are parsed like TEXT_NUMBER formatted numbers.\n**strict** | The value must be a string and must be one of the options for the picklist.\n\n**PREDECESSOR**\n\nValue | Description |\n-----|-----|\nN/A | Set using the **objectValue** attribute for the Cell object, which is inherently strict. See [Cell Reference](../../tag/cellsRelated#section/Cell-Reference).\n\n**TEXT_NUMBER**\n\nValue | Description |\n-----|-----|\n**lenient** | All numeric and text values are valid. Formatted numbers passed as text values, such as currencies (\"$5,000\"), percentages (\"50%\"), or decimals (\"100.5\") are parsed to their numeric equivalents, based on the locale of the access token owner,  with the proper formatting enabled for the cell.\n**strict** | All numeric and text values are valid and are interpreted literally.\n\nNOTE: The Smartsheet application only supports numeric values in the range -9007199254740992 to 9007199254740992. If using strict parsing, any numeric value outside that range results in [error code 1148](../../#section/Error-Code-List/400-Level-Error-Codes). If using lenient parsing, the value is silently converted to text.\n\n## Contact List Columns\n\nWith columns of type **CONTACT_LIST**, the cell attributes **value** and **displayValue** are treated independently.\nThe contact’s email address is represented by **value**, while the contact’s name (and the value displayed in the cell in the Smartsheet app) is represented by **displayValue**.\n\nWhen creating or updating cells for a contact list column, the **displayValue** attribute works as follows:\n\n* If **displayValue** is non-null and non-empty, the Smartsheet cell displays the value provided.\n* If **displayValue** is an empty string, the Smartsheet cell displays the email address.\n* If **displayValue** is null or absent, Smartsheet makes a best guess effort at filling it in with a contact’s name based on the email address.\n\n# Hyperlinks\n\nYou can create and modify [hyperlinks](../../tag/cellsObjects#section/Hyperlink-Object) by using any API operation that creates or updates cell data.\nWhen creating or updating a hyperlink, **cell.value** may be set to a string value or null.\nIf null, the cell's value is derived from the hyperlink:\n\n* If the hyperlink is a URL link, the cell's value is set to the URL itself.\n* If the hyperlink is a dashboard, report, or sheet link, the cell's value is set to the dashboard, report, or sheet name.\n\n## Images in Cells\n\nFor details about working with images in cells, see [Cell Images](../../tag/cellImagesDescription).\n"
  - name: columns
    x-displayName: Methods
  - name: columnsDescription
    x-displayName: Columns Basics
    description: |
      A column is a component of a sheet or report.
  - name: columnsObjects
    x-displayName: Objects
    description: |
      # Column Object
        <SchemaDefinition schemaRef="#/components/schemas/Column"/>

      # ContactOption Object
        <SchemaDefinition schemaRef="#/components/schemas/ContactOption"/>
  - name: columnsRelated
    x-displayName: Related Items
    description: "# Column Types\n\nSmartsheet supports the following standard column types, which are represented in a [Column object](../../tag/columnsObjects#section/Column-Object) with a **type** attribute set to one of the following:\n\nColumn Type | Column.type Value | Notes |\n------------|--------------------------|-------|\nCheckbox \t\t| **CHECKBOX**\t\t| Checkbox, star, and flag types\nContact List\t| **CONTACT_LIST**\t| List containing contacts or roles for a project. **NOTE:** You can use the [contactOptions](../../tag/columnsObjects#section/ContactOption-Object) property to specify a pre-defined list of values for the column, which can also become lanes in card view.\nContact List | **MULTI_CONTACT_LIST** | List where single cells can contain more than one contact. Only visible when using a query parameter of **level** and the value appropriate to the dashboard, report, or sheet that you are querying. To see email addresses behind the display names, combine an **include=objectValue** query parameter with a **level** query parameter.\nDate\t\t\t| **DATE** |\nDate/Time \t\t| **ABSTRACT_DATETIME** | Represents a project sheet's start and end dates.<br/>**Only for dependency-enabled project sheets**<br/>The API does not support setting a column to this type. (This can only be done through the Smartsheet Web app when configuring a project sheet.) Additionally, the API does not support updating data in the \"End Date\" column under any circumstance, and does not support updating data in the \"Start Date\" column if \"Predecessor\" is set for that row.\nDate/Time\t\t| **DATETIME**\t| Used only by the following system-generated columns: <ul><li>Created (Date) (**Column.systemColumnType** = **CREATED_DATE**)</li><li>Modified (Date) (**Column.systemColumnType** = **MODIFIED_DATE**)</li></ul>\nDropdown List\t| **PICKLIST**\t| Custom, RYG, Harvey ball, priority types, etc.\nDropdown List\t| **MULTI_PICKLIST**\t| List where single cells can contain more than one dropdown item. Only visible when using a query parameter of **level** and the value appropriate to the dashboard, report, or sheet that you are querying. To see multi-picklist values behind the display names, combine an **include=objectValue** query parameter with a **level** query parameter.\nDuration\t\t| **DURATION**\t\t| **Only for dependency-enabled project sheets**<br/>The API does not support setting a column to this type. (This can only be done through the Smartsheet Web app when configuring a project sheet.)\nPredecessor\t\t| **PREDECESSOR**\t| Defines what must happen first in a project flow. For more information, see the [Predecessor object](../../tag/cellsObjects#section/PredecessorList-Object). **Only for dependency-enabled project sheets**\nText/Number\t\t| **TEXT_NUMBER**\t|\n\nNOTE: See the [Cell Reference](../../tag/cellsRelated#section/Cell-Reference) section for information on getting and setting cell values for the different column types.\n\n## Symbol Columns\n\nIn addition to the basic column types above, the Smartsheet app also supports columns that display symbols. These are specialized columns of type **CHECKBOX** or **PICKLIST**,\nwhose **symbol** attribute is set to one of the values below:\n\n**Symbols for CHECKBOX columns:**\n\nValue | Example |\n-----|-----|\n**FLAG** | <img src=\"/images/img_pl_flagc.png\" alt=\"A flag symbol\" /> |\n**STAR** | <img src=\"/images/img_pl_starc.png\" alt=\"A star symbol\" /> |\n\n**Symbols for PICKLIST columns:**\n\nValue | Example |\n-----|-----|\n**ARROWS_3_WAY** | <img src=\"/images/img_pl_arrows3.png\" alt=\"An arrows_3_way symbol\" /> |\n**ARROWS_4_WAY** | <img src=\"/images/img_pl_arrows4.png\" alt=\"An arrows_4_way symbol\" /> |\n**ARROWS_5_WAY** | <img src=\"/images/img_pl_arrows5.png\" alt=\"An arrows_5_way symbol\" /> |\n**DECISION_SHAPES** | <img src=\"/images/img_pl_decisionshapes.png\" alt=\"A decision_shapes symbol\" /> |\n**DECISION_SYMBOLS** | <img src=\"/images/img_pl_decisionsymbols.png\" alt=\"A decision_symbols symbol\" /> |\n**DIRECTIONS_3_WAY** | <img src=\"/images/img_pl_directions3.png\" alt=\"A directions_3_way symbol\" /> |\n**DIRECTIONS_4_WAY** | <img src=\"/images/img_pl_directions4.png\" alt=\"A directions_4_way symbol\" /> |\n**EFFORT** | <img src=\"/images/img_pl_effort6Three.png\" alt=\"An effort symbol\" /> |\n**HARVEY_BALLS** | <img src=\"/images/img_pl_harvey5.png\" alt=\"A harvey_balls symbol\" /> |\n**HEARTS** | <img src=\"/images/img_pl_heart6Three.png\" alt=\"A hearts symbol\" /> |\n**MONEY** | <img src=\"/images/img_pl_money6Three.png\" alt=\"A money symbol\" /> |\n**PAIN** | <img src=\"/images/img_pl_pain6.png\" alt=\"A pain symbol\" /> |\n**PRIORITY** | <img src=\"/images/img_pl_priority.png\" alt=\"A priority symbol\" /> |\n**PRIORITY_HML** | <img src=\"/images/img_pl_priorityhml.png\" alt=\"A priority_hml symbol\" /> |\n**PROGRESS** | <img src=\"/images/img_pl_progress5Half.png\" alt=\"A progress symbol\" /> |\n**RYG** | <img src=\"/images/img_pl_ryg.png\" alt=\"An RYG symbol\" /> |\n**RYGB** | <img src=\"/images/img_pl_rygb.png\" alt=\"An RYGB symbol\" /> |\n**RYGG** | <img src=\"/images/img_pl_rygg.png\" alt=\"An RYGG symbol\" /> |\n**SIGNAL** | <img src=\"/images/img_pl_signal5.png\" alt=\"A signal symbol\" /> |\n**SKI** | <img src=\"/images/img_pl_difficulty4.png\" alt=\"A ski symbol\" /> |\n**STAR_RATING** | <img src=\"/images/img_pl_star6Three.png\" alt=\"A star_rating symbol\" />\n**VCR** | <img src=\"/images/img_pl_decisionvcr.png\" alt=\"A VCR symbol\" /> |\n**WEATHER** | <img src=\"/images/img_pl_weather5.png\" alt=\"A weather symbol\" /> |\n\nNOTE: The Smartsheet grid user interface presents several row attributes and features visually as columns, for example, attachments, discussions, row action indicator, or row number.  The API does not consider these to be columns, and does not return or otherwise expose them as columns.  The only columns returned by the API are user data columns.\n\n## System Columns\n\nIn addition to the standard column types and symbols, Smartsheet has a number of system columns, which represent data that is\nfilled in by Smartsheet and whose values cannot be changed by the user. These columns are represented with standard\n[column types](../../tag/columnsRelated#section/Column-Types), with the **[Column.systemColumnType](../../tag/columnsObjects#section/Column-Object)** attribute set to one of the following:\n\nColumn.systemColumnType Value | Column Type | Notes\n-----|-----|-----|\n**AUTO_NUMBER** | TEXT_NUMBER | Columns of this system column type include an [AutoNumberFormat object](../../tag/commonObjects#section/AutoNumberFormat-Object) that describes the mask used to generate the value.\n**CREATED_BY**  | CONTACT_LIST\n**CREATED_DATE** | DATETIME\n**MODIFIED_BY** | CONTACT_LIST\n**MODIFIED_DATE** | DATETIME\n"
  - name: comments
    x-displayName: Methods
  - name: commentsDescription
    x-displayName: Comments Basics
    description: >
      A discussion is a container for a number of individual comments in a
      threaded conversation. For more details, see the
      [Discussion](../../tag/discussionsDescription) section.​


      This section describes operations on an *individual* comment within a
      discussion thread.


      * To retrieve all discussions and comments for an entire sheet, use [List
      Discussions](../../tag/discussions#operation/discussions-list) with the
      ​query parameter​ **include​=comments​**.

      * To retrieve all discussions and comments associated with a row, use
      [List Row
      Discussions](../../tag/discussions#operation/row-discussions-list) ​with
      the​ query parameter​ **include​=comments​**.
  - name: commentsObjects
    x-displayName: Objects
    description: |
      # Comment Object
        <SchemaDefinition schemaRef="#/components/schemas/Comment"/>
  - name: commentsRelated
    x-displayName: Related Items
    description: >
      A comment can contain one or more attachments.


      # Comment Attachments


      For details about working with a comment's attachments, see
      [Attachments](../../tag/attachmentsDescription).
  - name: commonObjects
    x-displayName: Other Objects
    description: |
      # AutoNumberFormat Object
        <SchemaDefinition schemaRef="#/components/schemas/AutoNumberFormat" />

      # BulkItemFailure Object
        <SchemaDefinition schemaRef="#/components/schemas/BulkItemFailure" />

      # ContainerDestination Object
        <SchemaDefinition schemaRef="#/components/schemas/ContainerDestination" />

      # Currency Object
        <SchemaDefinition schemaRef="#/components/schemas/Currency" />

      # Error Object
        <SchemaDefinition schemaRef="#/components/schemas/Error" />

      # FontFamily Object
        <SchemaDefinition schemaRef="#/components/schemas/FontFamily" />

      # FormatTables Object
        <SchemaDefinition schemaRef="#/components/schemas/FormatTables" />

      # IndexResult Object
        <SchemaDefinition schemaRef="#/components/schemas/IndexResult" />

      # IndexResultUnknownPages Object
        <SchemaDefinition schemaRef="#/components/schemas/IndexResultUnknownPages" />

      # Result Object
        <SchemaDefinition schemaRef="#/components/schemas/Result" />
  - name: contacts
    x-displayName: Methods
  - name: contactsDescription
    x-displayName: Contacts Basics
    description: >
      A contact is a user's personal contact in Smartsheet (as described in the
      Help Center article, [Managing
      Contacts](https://help.smartsheet.com/articles/796143-managing-contacts)).
  - name: contactsObjects
    x-displayName: Objects
    description: |
      # Contact Object
        <SchemaDefinition schemaRef="#/components/schemas/Contact"/>
  - name: crossSheetReferences
    x-displayName: Methods
  - name: crossSheetReferencesDescription
    x-displayName: Cross-sheet References Basics
    description: >
      To create a formula that references data in another sheet, you must first
      create a cross-sheet

      reference between the detail sheet and the source sheet. That reference
      must also define the cell range.

      Once you have created the cross-sheet reference, you can use the reference
      name in any formula on the detail sheet.

      To create the formula, use Add Rows or Update Rows. Cross-sheet references
      that are not used by any formula are

      automatically deleted after two hours.
  - name: crossSheetReferencesObjects
    x-displayName: Objects
    description: |
      # CrossSheetReference Object
        <SchemaDefinition schemaRef="#/components/schemas/CrossSheetReference"/>
  - name: dashboards
    x-displayName: Methods
  - name: dashboardsDescription
    x-displayName: Dashboards Basics
    description: >
      Smartsheet dashboards are a collection of widgets that can contain data
      from a variety of different data sources (for example, sheets, reports, or
      custom data). Dashboards were once called Sights(TM) and this name is
      still present in object names, endpoint paths, and other places.
  - name: dashboardsObjects
    x-displayName: Objects
    description: |
      # Dashboard Object
        <SchemaDefinition schemaRef="#/components/schemas/Sight" />

      # DashboardPublish Object
        <SchemaDefinition schemaRef="#/components/schemas/SightPublish" />

      # Widget Object
        <SchemaDefinition schemaRef="#/components/schemas/Widget" />

      # CellLinkWidgetContent Object
        <SchemaDefinition schemaRef="#/components/schemas/CellLinkWidgetContent" />

      # CellDataItem Object
        <SchemaDefinition schemaRef="#/components/schemas/CellDataItem" />

      # ChartWidgetContent Object
        <SchemaDefinition schemaRef="#/components/schemas/ChartWidgetContent" />

      # ImageWidgetContent Object
        <SchemaDefinition schemaRef="#/components/schemas/ImageWidgetContent" />

      # ReportWidgetContent Object
        <SchemaDefinition schemaRef="#/components/schemas/ReportWidgetContent" />

      # RichTextWidgetContent Object
        <SchemaDefinition schemaRef="#/components/schemas/RichTextWidgetContent" />

      # SelectionRange Object
        <SchemaDefinition schemaRef="#/components/schemas/SelectionRange" />

      # ShortcutDataItem Object
        <SchemaDefinition schemaRef="#/components/schemas/ShortcutDataItem" />

      # ShortcutWidgetContent Object
        <SchemaDefinition schemaRef="#/components/schemas/ShortcutWidgetContent" />

      # TitleWidgetContent Object
        <SchemaDefinition schemaRef="#/components/schemas/TitleWidgetContent" />

      # WebContentWidgetContent Object
        <SchemaDefinition schemaRef="#/components/schemas/WebContentWidgetContent" />

      # WidgetHyperlink Object
        <SchemaDefinition schemaRef="#/components/schemas/WidgetHyperlink" />
  - name: discussions
    x-displayName: Methods
  - name: discussionsDescription
    x-displayName: Discussions Basics
    description: >
      A discussion is a container for a collection of individual
      [comments](../commentsDescription) within a single thread. A discussion
      can exist on a [row](../rowsDescription) or a
      [sheet](../sheetsDescription).


      In the UI, Smartsheet creates a discussion to contain each top-level
      comment and subsequent replies into a single thread.


      Using the API, you can only add a comment to a discussion. If the
      discussion doesn't already exist, you must create it first.
  - name: discussionsObjects
    x-displayName: Objects
    description: |
      # Discussion Object
        <SchemaDefinition schemaRef="#/components/schemas/Discussion"/>
  - name: discussionsRelated
    x-displayName: Related Items
    description: >
      A discussion is a collection of one or more comments, each of which may
      contain attachments.


      # Discussion Attachments


      For details about working with the attachments within a discussion, see
      [Attachments](../../tag/attachmentsDescription).


      # Discussion Comments


      For details about working with a discussion's comments, see
      [Comments](../../tag/commentsDescription).
  - name: events
    x-displayName: Methods
  - name: eventsDescription
    x-displayName: Events Basics
    description: >
      The following section describes the specific event types and payloads
      returned from the Smartsheet Events API.


      With Event Reporting, you can programmatically retrieve events that are
      occurring in your Smartsheet organization account. Examples of events are
      create, update, load, and delete of sheets, reports, dashboards,
      attachments, and users. Note: while the current list of events covers most
      of Smartsheet functionality, new events will be added to the list as
      Smartsheet introduces new functionality.


      Some actions in Smartsheet are performed by system components. Therefore,
      the userId property in some response payloads refers to a system user and
      not to a regular user. For example, the Smartsheet Events API shows
      5629504736520068 as the userId when an anonymous user accesses a sheet
      that is published for anyone.


      The list of system users is displayed below. New system userIds may be
      incorporated to this list as new features and subsystems are incorporated
      to Smartsheet:


      System user | Description |

      -----|-----|

      1688855062570884 | Data accessed/modified by Skype action (only possible
      if Smartsheet account is connected to Skype) |

      2814754969413508 | Data accessed/modified by Trello import action (only
      possible if Smartsheet account is connected to Trello) |

      3377704922834820 | Data accessed/modified due to Smartsheet cell-link |

      3940654876256132 | Data accessed/modified by the Smartsheet Automation
      system |

      5066554783098756 | Access to object published to any user in the
      Smartsheet organization account |

      5629504736520068 | Access to Smartsheet object published to anyone |

      6192454689941380 | Data accessed/modified by the Smartsheet Notification
      system |

      7881304550205316 | Data accessed/modified by Smartsheet Form submission |


      See <a href="https://smartsheet-platform.github.io/event-reporting-docs/"
      target="_blank">Event Reporting reference documentation</a> for details on
      each event type.


      See [Authentication and Access
      Tokens](../../#section/API-Basics/Authentication-and-Access-Tokens) for
      more information.


      NOTE: Event Reporting is a premium add-on which can be purchased for
      Enterprise and Advance Platinum plans only. For details on the Event
      Reporting add-on, please contact our <a
      href="https://www.smartsheet.com/contact/sales">Sales Team</a>.
  - name: eventsObjects
    x-displayName: Objects
    description: |
      # Event Object
        <SchemaDefinition schemaRef="#/components/schemas/Event" />

      # StreamResult Object
        <SchemaDefinition schemaRef="#/components/schemas/StreamResult" />
  - name: favorites
    x-displayName: Methods
  - name: favoritesDescription
    x-displayName: Favorites Basics
    description: >
      Smartsheet allows users to "star" dashboards, folders, reports, sheets,
      workspaces, and other objects on their Home tab to mark them as favorites.


      These API operations allow you to access the user's favorite API-supported
      objects, as well as create and delete favorites.


      NOTE: For documentation purposes, "favoriteType" is a placeholder ENUM for
      the various types of UI elements you can flag as a favorite. In sample
      code, when you see "{favoriteType}", just replace it with one of the
      following values:

      * dashboard or dashboards (aka Sight or Sights)

      * folder or folders

      * report or reports

      * sheet or sheets

      * template or templates

      * workspace or workspaces
  - name: favoritesObjects
    x-displayName: Objects
    description: |
      # Favorite Object
        <SchemaDefinition schemaRef="#/components/schemas/Favorite" />
  - name: folders
    x-displayName: Methods
  - name: foldersDescription
    x-displayName: Folders Basics
    description: >
      A folder can exist in a user's **Sheets** folder
      ([Home](../../tag/homeDescription)), in a
      [folder](../../tag/foldersObjects), or in a
      [workspace](../../tag/workspacesObjects).
  - name: foldersObjects
    x-displayName: Objects
    description: |
      # Folder Object
        <SchemaDefinition schemaRef="#/components/schemas/Folder" />
  - name: groupMembers
    x-displayName: Methods
  - name: groupMembersDescription
    x-displayName: Group Members Basics
    description: >
      A group member is a user that belongs to a
      [group](../../tag/groupsDescription).
  - name: groupMembersObjects
    x-displayName: Objects
    description: |
      # Group Member Object
        <SchemaDefinition schemaRef="#/components/schemas/GroupMember" />
  - name: groups
    x-displayName: Methods
  - name: groupsDescription
    x-displayName: Groups Basics
    description: >
      A group is a collection of [group
      members](../../tag/groupMembersDescription).
  - name: groupsObjects
    x-displayName: Objects
    description: |
      # Group Object
        <SchemaDefinition schemaRef="#/components/schemas/Group" />
  - name: home
    x-displayName: Methods
  - name: homeDescription
    x-displayName: Home Basics
    description: >
      In the Smartsheet UI, the "Home" tab shows all objects a user has access
      to, including dashboards (also called Sights in the API), folders,
      reports, sheets, templates, and workspaces. *NOTE:* The GET /home endpoint
      is deprecated. Use GET /folders/personal to get shared items and GET
      /workspaces/ to get workspaces.
  - name: homeObjects
    x-displayName: Objects
    description: |
      # Home Object
        <SchemaDefinition schemaRef="#/components/schemas/Home" />
  - name: homeRelated
    x-displayName: Related Items
    description: >
      # Home Folders


      For details about working with folders in the user's **Sheets** folder
      (that is, at the Home level), see [Folders](../../tag/foldersDescription).


      # Home Sheets


      For details about working with sheets in the user's **Sheets** folder
      (that is, at the Home level), see [Sheets](../../tag/foldersDescription).
  - name: import
    x-displayName: Methods
  - name: importDescription
    x-displayName: Import Basics
    description: |
      Import CSV or XLSX data into a new sheet.
  - name: proofs
    x-displayName: Methods
  - name: proofsDescription
    x-displayName: Proofs Basics
    description: >
      A proof is a container that holds attachments and comments. Limited to one
      proof and its versions per row.

      A sheet can have multiple proofs.
  - name: proofsObjects
    x-displayName: Objects
    description: |

      # Proof Object
        <SchemaDefinition schemaRef="#/components/schemas/Proof"/>

      # ProofRequest Object
        <SchemaDefinition schemaRef="#/components/schemas/ProofRequest"/>

      # ProofRequestAction Object
        <SchemaDefinition schemaRef="#/components/schemas/ProofRequestAction"/>
  - name: reports
    x-displayName: Methods
  - name: reportsDescription
    x-displayName: Reports Basics
    description: >
      A report is a filtered view of the data from one or more sheets. Like a
      sheet, a report is comprised of columns, rows, and cells, and may
      optionally contain attachments and discussions.
  - name: reportsObjects
    x-displayName: Objects
    description: |
      # Report Object
        <SchemaDefinition schemaRef="#/components/schemas/Report" />

      # Report Cell Object
        <SchemaDefinition schemaRef="#/components/schemas/ReportCell" />

      # Report Column Object
        <SchemaDefinition schemaRef="#/components/schemas/ReportColumn" />

      # Report Row Object
        <SchemaDefinition schemaRef="#/components/schemas/ReportRow" />

      # Report Publish Object
        <SchemaDefinition schemaRef="#/components/schemas/ReportPublish" />

      # Scope Object
        <SchemaDefinition schemaRef="#/components/schemas/Scope" />
  - name: reportsRelated
    x-displayName: Related Items
    description: >
      A report is comprised of columns, rows, and cells, and may optionally
      contain attachments and discussions.


      # Report Attachments


      For details about working with a report's attachments, see
      [Attachments](../../tag/attachmentsDescription).


      # Report Cells


      For details about working with a report's cells, see
      [Cells](../../tag/cellsDescription).


      # Report Columns


      For details about working with a report's columns, see
      [Columns](../../tag/columnsDescription).


      # Report Discussions


      For details about working with a report's discussions, see
      [Discussions](../../tag/discussionsDescription).


      # Report Rows


      For details about working with a report's rows, see
      [Rows](../../tag/rowsDescription).
  - name: rows
    x-displayName: Methods
  - name: rowsDescription
    x-displayName: Rows Basics
    description: >
      A row is a component of a sheet or report. Each row is composed of a
      collection of cells, and may optionally contain discussions or
      attachments.
  - name: rowsObjects
    x-displayName: Objects
    description: |
      # Row Object
        <SchemaDefinition schemaRef="#/components/schemas/Row" />

      # CopyOrMoveRowDestination Object
        <SchemaDefinition schemaRef="#/components/schemas/CopyOrMoveRowDestination"
      />
      # CopyOrMoveRowDirective Object
        <SchemaDefinition schemaRef="#/components/schemas/CopyOrMoveRowDirective" />

      # CopyOrMoveRowResult object
        <SchemaDefinition schemaRef="#/components/schemas/CopyOrMoveRowResult" />

      # RowMapping Object
        <SchemaDefinition schemaRef="#/components/schemas/RowMapping" />
  - name: rowsRelated
    x-displayName: Related Items
    description: "A row is comprised of a collection of cells, and may optionally contain attachments and discussions.\n\n# Row Attachments\n\nFor details about working with a row's attachments, see [Attachments](../../tag/attachmentsDescription).\n\n# Row Cells\n\nFor details about working with a row's cells, see [Cells](../../tag/cellsDescription).\n\nFor details about working with images in cells, see [Cell Images](../../tag/cellImagesDescription).\n\n# Row Discussions\n\nFor details about working with a row's discussions, see [Discussions](../../tag/discussionsDescription).\n\n# Row Include Flags\n\nEndpoints which return rows (for example, [Get Sheet](../../tag/sheets#operation/getSheet), [Get Row](../../tag/rows#operation/row-get)) support the optional **include** query string parameter. If specified, the value of the **include** parameter is\na comma-delimited list of flags that indicate additional attributes to be included in each [Row object](../../tag/rowsObjects#section/Row-Object) within the response.\n\nInclude Flag | Description |\n-------------|-------|\n**attachments**\t| Includes row **attachments** array.<br/>To include discussion attachments, both **attachments** and **discussions** must be present in the include list.\n**columnType**\t| Includes **columnType** attribute in the row's [cells](../../tag/cellsObjects#section/Cell-Object) indicating the type of the column the cell resides in.\n**discussions**\t| Includes row **discussions** array.<br/>To include discussion attachments, both **attachments** and **discussions** must be present in the include list.\n**filters**\t\t| Includes **filteredOut** attribute indicating if the row should be displayed or hidden according to the sheet's filters.\n**format**\t\t| Includes **format** attribute on the row, its cells, or summary fields.  See [Formatting](../../#section/API-Basics/Formatting).\n**objectValue** | Includes **objectValue** attribute on cells containing values. For more information see [Cell Reference](../../tag/cellsRelated#section/Cell-Reference).\n**rowPermalink** | Includes **permalink** attribute that represents a direct link to the [row](../../tag/rowsObjects#section/Row-Object) in the Smartsheet application.\n**rowWriterInfo** | **DEPRECATED** Includes **createdBy** and **modifiedBy** attributes on the row, indicating the row's creator, and last modifier.\n**writerInfo** | Includes **createdBy** and **modifiedBy** attributes on the row or summary fields, indicating the row or summary field's creator, and last modifier.\n\n# Specify Row Location\n\nWhen you [add a row](../../tag/rows#operation/rows-addToSheet), the default behavior is for Smartsheet to put the new row at the bottom of the sheet. And when you [update a row](../../tag/rows#operation/update-rows), the default behavior is to keep the row where it is. It is not necessary to use a location-specifier attribute if you want the default behavior.\n\nTo specify a location for new or updated rows other than the defaults, use the table below for reference. The table details possible row locations and provides JSON examples to help you construct one or more [Row objects](../../tag/rowsObjects#section/Row-Object) with location-specifier attributes.\n\nNote the following restrictions:\n\n* Use only one location-specifier attribute per request, unless you use **parentId** and **toBottom** or **siblingId** and **above**.\n* If you specify multiple rows in the request, all rows must have the same location-specifier attributes.\n* If you specify the **parentId** attribute, you cannot also specify the **siblingId** attribute.\n* If you specify the **siblingId** attribute, you cannot also specify the **parentId**, **toTop**, or **toBottom** attributes.\n* If you want to indent or outdent multiple rows, use the **parentId** attribute.\n\nDestination | Row Attributes | Examples |\n-------|--------|--------|\nTop of a sheet | **toTop** | ```(\"toTop\": true}```\nBottom of a sheet | **toBottom** | ```(\"toBottom\": true}```\nTop of an indented section a.k.a., first child row | **parentId** | ```(\"parentId\": 8896508249565060}```\nBottom of an indented section a.k.a., last child row | **parentId** +<br/>**toBottom** | ```{\"parentId\": 8896508249565060, \"toBottom\": true}```\nBelow a specific row, at the same indent level | **siblingId** | ```{\"siblingId\": 8896508249565060}```\nAbove a specific row, at the same indent level | **siblingId** +<br/>**above** | ```{\"siblingId\": 8896508249565060, \"above\": true}```\nIndent one existing row, must have a value of \"1\" | **indent** | ```{\"indent\": 1}```\nOutdent one existing row, must have a value of \"1\" | **outdent** | ```{\"outdent\": 1}```\n"
  - name: search
    x-displayName: Methods
  - name: searchDescription
    x-displayName: Search Basics
    description: >
      Search a specific sheet or search across all sheets that a user can
      access. If you have not used the public API in a while, we will need to
      provision your data. This could take up to 24 hours so please check back
      later!
  - name: searchObjects
    x-displayName: Objects
    description: |
      # Search Result Object
        <SchemaDefinition schemaRef="#/components/schemas/SearchResult" />

      # Search Result Item Object
        <SchemaDefinition schemaRef="#/components/schemas/SearchResultItem" />
  - name: sendViaEmail
    x-displayName: Methods
    description: >
      The methods for sending via email rely on the type of object you want to
      send.


      # Send Report


      For details about sending a report via email, see [Send Report via
      Email](../../tag/reports#operation/sendReportViaEmail).


      # Send Rows


      For details about sending rows via email, see [Send Rows via
      Email](../../tag/rows#operation/rows-send).


      # Send Sheet


      For details about sending a sheet via email, see [Send Sheet via
      Email](../../tag/sheets#operation/sheet-send).


      # Send Update Request


      For details about sending an update request via email, see [Create an
      Update Request](../../tag/updateRequests#operation/updaterequests-create).
  - name: sendViaEmailDescription
    x-displayName: Send via Email Basics
    description: |
      Send a report, row, sheet, or update request via email.
  - name: sendViaEmailObjects
    x-displayName: Objects
    description: |
      # Email Object
        <SchemaDefinition schemaRef="#/components/schemas/Email" />

      # Format Details Object
        <SchemaDefinition schemaRef="#/components/schemas/FormatDetails" />

      # Recipient Object
        <SchemaDefinition schemaRef="#/components/schemas/Recipient" />

      # Row Email Object
        <SchemaDefinition schemaRef="#/components/schemas/RowEmail" />

      # Multi Row Email Object
        <SchemaDefinition schemaRef="#/components/schemas/MultiRowEmail" />

      # Sheet Email Object
        <SchemaDefinition schemaRef="#/components/schemas/SheetEmail" />
  - name: serverInfo
    x-displayName: Methods
  - name: serverInfoDescription
    x-displayName: Server Info Basics
    description: >
      For developer convenience, the Smartsheet API provides access to
      application constants.
  - name: serverInfoObjects
    x-displayName: Objects
    description: |
      # Server Info Object
        <SchemaDefinition schemaRef="#/components/schemas/ServerInfo" />
  - name: sharing
    x-displayName: Methods
  - name: sharingDescription
    x-displayName: Sharing Basics
    description: >
      Use the *Sharing* operations to control sharing of dashboards, reports,
      sheets, and workspaces.
  - name: sharingObjects
    x-displayName: Objects
    description: |
      # Share Object
        <SchemaDefinition schemaRef="#/components/schemas/Share" />
  - name: sheetSummary
    x-displayName: Methods
  - name: sheetSummaryDescription
    x-displayName: Sheet Summary Basics
    description: >
      A sheet summary allows users to define, organize, and report on custom
      project and business metadata. Sheet summary is only available to
      customers with business or enterprise plans.
  - name: sheetSummaryObjects
    x-displayName: Objects
    description: |
      # Sheet Summary Object
          <SchemaDefinition schemaRef="#/components/schemas/SheetSummary" />

      # Summary Field Object
          <SchemaDefinition schemaRef="#/components/schemas/SummaryField" />
  - name: sheets
    x-displayName: Methods
  - name: sheetsDescription
    x-displayName: Sheets Basics
    description: >
      A sheet can exist in a user's **Sheets** folder
      ([Home](../../tag/homeDescription)), in a
      [folder](../../tag/foldersDescription), or in a
      [workspace](../../tag/workspacesDescription). It is comprised of columns,
      rows, and cells, and may optionally contain attachments and discussions.
  - name: sheetsObjects
    x-displayName: Objects
    description: |
      # Sheet Object
          <SchemaDefinition schemaRef="#/components/schemas/Sheet" />
      # Criteria Object
          <SchemaDefinition schemaRef="#/components/schemas/Criteria" />
      # Filters Object
          <SchemaDefinition schemaRef="#/components/schemas/Filters" />
      # ProjectSettings Object
          <SchemaDefinition schemaRef="#/components/schemas/ProjectSettings" />
      # SheetPublish Object
          <SchemaDefinition schemaRef="#/components/schemas/SheetPublish" />
      # SheetUserPermissions Object
          <SchemaDefinition schemaRef="#/components/schemas/SheetUserPermissions" />
      # SheetUserSettings Object
          <SchemaDefinition schemaRef="#/components/schemas/SheetUserSettings" />
      # SortCriterion Object
          <SchemaDefinition schemaRef="#/components/schemas/SortCriterion" />
      # SortSpecifier Object
          <SchemaDefinition schemaRef="#/components/schemas/SortSpecifier" />
      # Source Object
          <SchemaDefinition schemaRef="#/components/schemas/Source" />
  - name: sheetsRelated
    x-displayName: Related Items
    description: >
      A sheet is comprised of columns, rows, and cells, and may optionally
      contain attachments and discussions.


      # Sheet Attachments


      For details about working with a sheet's attachments, see
      [Attachments](../../tag/attachmentsDescription).


      # Sheet Cells


      For details about working with a sheet's cells, see
      [Cells](../../tag/cellsDescription).


      For details about working with images in cells, see [Cell
      Images](../../tag/cellImagesDescription).


      # Sheet Columns


      For details about working with a sheet's columns, see
      [Columns](../../tag/columnsDescription).


      # Sheet Discussions


      There are two ways to get discussion-related information for a sheet:


      Operation | Returns

      ----------|----------|

      [Get Sheet](../../tag/sheets#operation/getSheet)<br/>(with **include**
      parameter value **discussions**) | Response does not contain the comments
      that comprise each discussion.

      [List
      Discussions](../../tag/discussions#operation/discussions-list)<br/>(with
      **include** parameter value **comments**) |  Response contains the
      comments that comprise each discussion.


      For more information about working with a sheet's discussions, see
      [Discussions](../../tag/discussionsDescription).


      # Sheet Rows


      For details about working with a sheet's rows, see
      [Rows](../../tag/rowsDescription).
  - name: templates
    x-displayName: Methods
  - name: templatesDescription
    x-displayName: Templates Basics
    description: >
      A template can be used to create a sheet, as described in [Create Sheet
      from Template](../../tag/sheets#operation/create-sheet-in-folder).
  - name: templatesObjects
    x-displayName: Objects
    description: |
      # Template Object
        <SchemaDefinition schemaRef="#/components/schemas/Template" />
  - name: token
    x-displayName: Token Methods
  - name: tokenDescription
    x-displayName: Token Basics
    description: >
      The Smartsheet API utilizes OAuth 2.0 for authentication and
      authorization. An Authorization HTTP header containing an access token is
      required to authenticate all API requests except for the requests to GET
      Access Token or Refresh Access Token. For more information, see
      Authentication.
  - name: tokenObjects
    x-displayName: Token Objects
    description: |
      # Token Object
        <SchemaDefinition schemaRef="#/components/schemas/Token" />
  - name: updateRequests
    x-displayName: Methods
  - name: updateRequestsDescription
    x-displayName: Update Requests Basics
    description: >
      Send update requests to get updated by any collaborator on key rows,
      regardless of whether they have a Smartsheet account or are shared to the
      sheet.
  - name: updateRequestsObjects
    x-displayName: Objects
    description: |
      # UpdateRequest Object
        <SchemaDefinition schemaRef="#/components/schemas/UpdateRequest" />

      # SentUpdateRequest Object
        <SchemaDefinition schemaRef="#/components/schemas/SentUpdateRequest" />

      # Schedule Object
        <SchemaDefinition schemaRef="#/components/schemas/Schedule" />
  - name: users
    x-displayName: Methods
  - name: usersDescription
    x-displayName: Users Basics
    description: >
      Users are typically defined by the organization account, and then role
      within the organization, for example admin.
  - name: usersObjects
    x-displayName: Objects
    description: |
      # User Object
        <SchemaDefinition schemaRef="#/components/schemas/User" />

      # User Profile Object
        <SchemaDefinition schemaRef="#/components/schemas/UserProfile" />

      # Account Object
        <SchemaDefinition schemaRef="#/components/schemas/Account" />

      # AlternateEmail Object
        <SchemaDefinition schemaRef="#/components/schemas/AlternateEmail" />
  - name: webhooks
    x-displayName: Methods
  - name: webhooksDescription
    x-displayName: Webhooks Basics
    description: "# Intro to Webhooks\n\nAt a high-level, it works like this:\n\n1. Your application subscribes to [callbacks](#section/Webhook-Callbacks/Event-Callbacks).</span><br/>First, subscribe to event notifications (callbacks) by creating one or more webhooks.  You can create a webhook manually via the API or have your application create a webhook dynamically.  Each webhook must specify:\n    * Which Smartsheet object to monitor for events\n    * Which events in that object should trigger a callback\n    * The HTTPS URL (that is, \"callback URL\") where Smartsheet should send callbacks\nwhen any of the specified events occur within the scope of the specified Smartsheet object. (<b>NOTE:</b> Smartsheet webhooks do not support callbacks to servers using self-signed certificates)\n\n\t  <b>Webhook examples in plain English:</b>\n\n\t  * \"When any changes occur in Sheet_A, send a callback to https://www.example.com/abc\"\n\n\t  * \"When a new row is added to Sheet_B, send a callback to https://www.example.com/def\"\n\n\t  * \"When a cell value is changed in Sheet_C, send a callback to https://www.example.com/ghi\"\n\n\n2. When any of the specified events occur within an object that is being monitored by a webhook, Smartsheet sends an <b>HTTP POST</b> (that is, \"callback\") to the callback URL that is associated with the webhook.\n\n\t  * NOTE: The callback payload is a \"skinny\" payload -- it indicates which objects\nchanged and the type of events that occurred, but does not contain any data from the objects themselves.\n3. Your application receives, acknowledges, and processes callbacks.</span><br/>Your application receives the <code>HTTP POST</code>, acknowledges the callback by responding with HTTP status 200, and processes the callback. Because the callbacks are \"skinny\", make one or more requests to the Smartsheet API to retrieve the actual data associated with the change.\n\n## Webhook Management\n\nUse the Smartsheet API to create and manage webhooks. See [Webhooks API Reference](/tag/webhooksDescription) for details about the related API operations.\n\n## Webhook Ownership & Access\n\nWebhooks can be created and managed via [Direct API Access](../../tag/webhooksDescription) or by a [third-party app](#section/Third-party-App-Development).\n\nA webhook that is created via Direct API Access:\n\n* is owned by the user who created it\n* can be managed only by the user who created it\n* is not affected if the access token that was used to create it is revoked, as long as the user remains active\n\nA webhook that is created by a [third-party app](#section/Third-party-App-Development):\n\n* is owned by the user who authorized the third-party app (and is associated with the third-party app)\n* can be managed by the third-party app (as long as it maintains authorization) or by the user who owns it\n* is permanently disabled if the third-party app's permissions are revoked\n\n## Webhook Scope & Events\n\nA webhook monitors the specified **scope** for the specified **events**.\n\nA [Webhook object's](../../tag/webhooksObjects#section/Webhook-Object) **scope** attribute indicates the scope of the subscription. It is specified when [creating a webhook](../../tag/webhooksDescription#section/Creating-a-Webhook), and cannot subsequently be changed.\n\n* Currently, **sheet** is the only supported value for the **scope** attribute. However, you can set an array of columns as a **subscope** if you want to limit the webhook to specific columns.\n\nA [Webhook object's](../../tag/webhooksObjects#section/Webhook-Object) **event** attribute indicates the set of events that a webhook is subscribed to (that is, which events trigger a callback).\n\n* Events are represented as a dot-separated string in the format \"*object*.*event*\", where an asterisk (&#42;) can be used to represent \"all objects\" or \"all events\".\n* Currently, <b>&#42;.&#42;</b> is the only supported value for the **events** attribute. This indicates a subscription to all objects in the scope, and all events for those objects.\n\nNOTE: When a row is deleted on a sheet, even if you are using a <b>subscope</b> to monitor columns only and the cell in that column for that row is empty, you will receive a \"row.deleted\" event.\n\n## Example\n\nConsider a [Webhook object](../../tag/webhooksObjects#section/Webhook-Object) with the following attribute values:\n\n* **scopeObjectId** = 12345678901234\n* **scope** = \"sheet\"\n* **events** = \"&#42;.&#42;\"\n\nThis webhook monitors the specified sheet (id: 12345678901234) for all types of events. For example, if a row is added to the sheet, cell values are updated in the sheet, a column is deleted from the sheet, etc., a callback is sent to the webhook's **callbackUrl**.\n\n# Creating a Webhook\n\nAn API client can create a webhook by using the [Create Webhook](../../tag/webhooks#operation/createWebhook) operation. A newly created webhook is disabled by default.\nAfter successfully creating a webhook, the API client must subsequently initiate and complete the [verification process](../../tag/webhooksDescription#section/Creating-a-Webhook/Webhook-Verification) before the webhook is enabled.\nThe following diagram illustrates the process of creating and enabling a webhook.\n\n<img src=\"/images/v4-CreateAndEnableWebhook.png\" alt=\"Workflow to create a webhook\" />\n\n## Step-by-Step:\n\nThe process occurs synchronously:\n\n1. API client submits a [Create Webhook](../../tag/webhooks#operation/createWebhook) request.\n\n2. Smartsheet creates the webhook, but does not initially enable the webhook (**enabled: false** and **status: \"NEW_NOT_VERIFIED\"**).\n\n3. To initiate the verification process, the API client submits an [Update Webhook](../../tag/webhooks#operation/updateWebhook) request to specify **enabled: true**. (**NOTE:** The API client does not receive a response to this request until the verification process (steps 4 and 5) has completed.)\n\n4. When Smartsheet receives the request to enable the webhook, it sends a [verification request](#section/Creating-a-Webhook/Webhook-Verification) to the subscriber (that is, to the **callbackUrl** that the API client specified in the Create Webhook request).\nThe request specifies a unique random value in the **Smartsheet-Hook-Challenge** header and contains only **challenge** and **webhookId** in the request body. The **challenge** value is a repeat of the header value for API clients that don't interpret header values.\n\n5. The subscriber responds to the verification request by echoing back the same unique random value in the **Smartsheet-Hook-Response** header of the response. For API clients that don't interpret header values, you can also send a JSON body with a **smartsheetHookResponse** attribute and the same value that would have been in the header.\n\n6. Once the subscriber has successfully acknowledged the verification request, Smartsheet enables the webhook and responds to the API client's Update Webhook request to confirm that the webhook has been enabled (**enabled: true** and **status: \"ENABLED\"**).\n\n## Webhook Verification\n\nWhen an API client attempts to enable a webhook, Smartsheet sends a verification request to the webhook's **callbackUrl** to verify that the subscriber expects and is able to successfully receive callbacks.\nThe request specifies a unique random value in the **Smartsheet-Hook-Challenge** header and contains a JSON object in the request body with only **challenge** and **webhookId** attributes in the request body. The **challenge** attribute is a repeat of the header value for API clients that don't interpret header values.\n\n* To verify the webhook, the subscriber's response to the verification request must return a 200 HTTP status code and must echo back the same unique random value in the **Smartsheet-Hook-Response** header of the response or with a JSON **smartsheetHookResponse** attribute. Once Smartsheet receives this verification response, the webhook is enabled (**enabled: true** and **status: \"ENABLED\"**).\n\n* If the subscriber does not successfully respond to the verification request, the webhook remains disabled (**enabled: false** and **status: \"DISABLED_VERIFICATION_FAILED\"**).\n\nWhen a webhook is initially [created through the API](#operation/createWebhook), the response contains the webhook's Id.  If you wish to guarantee that your server only receives callbacks for webhooks that you created,\nyou can check the verification request's **webhookId** attribute against your list of created webhook Ids.  If the Id is not in the list, return a response with a non-200 status code (for example, 403 Forbidden),\nand the webhook that initiated the verification request is disabled as described above.\n\nNOTE: <b>IMPORTANT:</b> ONGOING VERIFICATION. Once a webhook has been enabled, Smartsheet sends a verification request to the webhook's <b>callbackUrl</b> once every 100 callbacks. The subscriber should respond to the verification request as described above -- failure to do so results in the webhook being disabled (<b>enabled: false</b> and <b>status: \"DISABLED_VERIFICATION_FAILED\"</b>).\n\n## Duplicate Webhooks\n\n*Duplicate webhooks* are defined as two or more webhooks that meet the following conditions:\n\n* on the same sheet\n* created by the same user\n* have identical: **callbackUrl** and **subscope** properties.\n\nBecause duplicate webhooks are functionally identical, this would ordinarily result in the callback URL being called simultaneously once for each duplicate webhook in the sheet when the sheet changes. Many duplicates can lead to too much traffic which can cause a *denial of service* (DOS) on the callback server.\n\nThere are no known valid use cases for duplicate webhooks; they are usually created unintentionally by API clients due to faulty or missing logic.\n\nFor this reason, **as of January 2023, Smartsheet will now deduplicate webhook callbacks**.  This means for every set of duplicate webhooks on a sheet, Smartsheet will no longer issue one callback per webhook, and will instead only issue **one total callback**, for only the oldest enabled webhook.\n\n**Recommendation:** When creating a webhook, first check to make sure that the sheet doesn't already contain an identical webhook.  If it does, and it's disabled, re-enable it.  If it's already enabled, do nothing.\n\n# Webhook Status\n\nA [Webhook](#section/Webhook-Object) object's **enabled** attribute indicates whether a webhook is enabled or disabled, while the **status** attribute describes the *reason* that the webhook is enabled or disabled.\n\nThe following table lists all possible combinations of **enabled** and **status** attribute values.\n\nWebhook.enabled | Webhook.status | Meaning | Notes\n----- | ----- | ------ | -----\nfalse  | **DISABLED_ADMINISTRATIVE** | Webhook has been disabled by Smartsheet support. | A webhook in this state can only be re-enabled by Smartsheet (contact <a href=\"mailto:api@smartsheet.com\">api@smartsheet.com</a>).  Attempting to re-enable a webhook in this state results in error code 1154.\nfalse  | **DISABLED_APP_REVOKED** | Webhook has been disabled because the third-party app associated with the webhook has had its access revoked. | This is a terminal state (that is, webhook in this state cannot be re-enabled, and attempts to do so result in error code 1153). If the third-party app's access is subsequently restored, it must create new webhooks.\nfalse  | **DISABLED_BY_OWNER** | Webhook has been disabled by the owner. | Owner can re-enable the webhook by using the [Update Webhook](../../tag/webhooks#operation/updateWebhook) operation to set **enabled** to **true**. Once the subscriber successfully acknowledges the [verification request](#section/Creating-a-Webhook/Webhook-Verification), the webhook is enabled.\nfalse  | **DISABLED_CALLBACK_FAILED** | Webhook has been disabled because callback was not successfully delivered to the callback URL. |  Owner can re-enable the webhook by using the [Update Webhook](../../tag/webhooks#operation/updateWebhook) operation to set **enabled** to **true**. Once the subscriber successfully acknowledges the [verification request](#section/Creating-a-Webhook/Webhook-Verification), the webhook is enabled.\nfalse  | **DISABLED_SCOPE_INACCESSIBLE** | Webhook has been disabled because its owner lost access to the corresponding data in Smartsheet (either because the object was deleted or sharing permissions were revoked). | Webhook is automatically re-enabled if access to data is restored (for example, if deleted object is restored or sharing permissions are restored).\nfalse  | **DISABLED_VERIFICATION_FAILED** | Webhook verification has failed. |  Owner can re-enable the webhook by using the [Update Webhook](../../tag/webhooks#operation/updateWebhook) operation to set **enabled** to **true**. Once the subscriber successfully acknowledges the [verification request](#section/Creating-a-Webhook/Webhook-Verification), the webhook is enabled.\ntrue  | **ENABLED** | Webhook is active. |\nfalse | **NEW_NOT_VERIFIED** | Webhook has been created but is not enabled because it has not yet been verified. |  Owner can re-enable the webhook by using the [Update Webhook](../../tag/webhooks#operation/updateWebhook) operation to set **enabled** to **true**. Once the subscriber successfully acknowledges the [verification request](#section/Creating-a-Webhook/Webhook-Verification), the webhook is enabled.\n\n**NOTES:**\n\n* When a Webhook object's <b>enabled</b> attribute is set to <b>true</b>, Smartsheet is monitoring for the specified events and sends a [callback](#section/Webhook-Callbacks/Event-Callbacks) to the <b>callbackUrl</b> when the events occur.\n* When a Webhook object's <b>enabled</b> attribute is set to <b>false</b>, Smartsheet is not monitoring for the specified events and does not send a callback to the <b>callbackUrl</b> when the events occur. Depending on the value of the <b>status</b> attribute, it may be possible to (re-)enable the webhook. (See below for details).\n\n# Webhook Callbacks\n\nA callback is the notification that Smartsheet sends to a webhook's **callbackUrl**. There are two types of callbacks:\n\n* [Event callback](#section/Webhook-Callbacks/Event-Callbacks): Alerts the subscriber when the specified events have occurred in Smartsheet. This is the most common type of callback.\n\n* [Status Change callback](#section/Webhook-Callbacks/Status-Change-Callbacks): Alerts the subscriber that a webhook has been automatically disabled due to loss of access or automatically re-enabled due to restoration of access.\n\nA Subscriber has the ability to verify the integrity of a callback payload (that is, ensure that the message was not tampered with en route) and authenticate the identity of its sender (that is, ensure that the callback did indeed originate from Smartsheet).\nFor more information, see [Authenticating Callbacks](#section/Webhook-Callbacks/Authenticating-Callbacks-(optional)).\n\n**NOTES:**\n\n* Smartsheet webhooks do not support callbacks to servers using self-signed certificates. The callback server must be using a signed certificate from a certificate authority.\n* The callbackURL cannot be a private IP address.\n* The callbackURL must use one of the following ports: 443 (default for HTTPS), 8000, 8008, 8080, or 8443.\n* Smartsheet webhooks alway let a running callback for a given sheet finish before making another, that is the second call will wait on the first one to finish.\n\n## Event Callbacks\n\nSmartsheet sends an event callback to notify the subscriber when the specified events occur in Smartsheet.\n\nWARNING: Any events that occur while a webhook is disabled are not communicated via callback if/when webhook is enabled.\n\n## Callback Acknowledgement\n\nThe subscriber must respond to an event callback with a 200 [HTTP status code](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success) to acknowledge that the callback was received.\n\n## Retry Logic\n\nIf the subscriber fails to respond with a 200 status, depending on the response, Smartsheet may retry delivery up to 14 times. (The first 7 retry attempts occur with a frequency that's determined using exponential backoff; thereafter, retry attempts occur once every three hours until all retries have been exhausted.)\n\nSubscriber response | Is retried?\n----- | -----\nHTTP 201 through 299 | No\nHTTP 309 through 399 | No\nHTTP 400 through 499 (except 410) | Yes\nHTTP 410 | No\nHTTP 500 through 599 | Yes\nAny other HTTP status | No\nRequest timeout | Yes\n\nIf the response is not retriable or retry attempts have been exhausted, the webhook is disabled (**enabled: false** and **status: \"DISABLED_CALLBACK_FAILED\"**).\nA webhook in this state can be re-enabled if the subscriber completes the verification process. (See [Webhook Status](#section/Webhook-Status) for details.)\n\n## Status Change Callbacks\n\nIf a webhook's owner loses access to the object that a webhook is monitoring (either because the object was deleted or the webhook owner's access to the object was revoked in Smartsheet),\nSmartsheet automatically disables the webhook and sends a status change callback to alert the subscriber of this change in status.\nThe **newWebhookStatus** attribute indicates that the webhook is now disabled (because the scope is inaccessible).\n\nIf the webhook owner's access to the object is subsequently restored,\nSmartsheet automatically re-enables the webhook and sends a status change callback to alert the subscriber of this change in status.\nThe **newWebhookStatus** attribute indicates that the webhook is now enabled.\n\n## Authenticating Callbacks (optional)\n\nA subscriber has the ability to verify the integrity of a callback payload (that is, ensure that the message was not tampered with en route) and authenticate the identity of its sender (that is, ensure that the callback did indeed originate from Smartsheet).\n\nWhen you create a new [webhook](#section/Webhook-Object), it is assigned a randomly generated **sharedSecret** value.  The shared secret is used by Smartsheet to sign callback payloads, and should not be shared with any third parties.\n\nTo authenticate a callback request:\n\n1. Calculate the [HMAC](https://en.wikipedia.org/wiki/Hash-based_message_authentication_code) of the webhook's **sharedSecret** and the request body.  This must be done using the [SHA-256](https://en.wikipedia.org/wiki/SHA-2) cryptographic hash algorithm.\n\n2. Format the calculated value as a string in base 16.\n\n3. Compare your result with the value of the **Smartsheet-Hmac-SHA256** header of the request.\n\nIf the values match, you can be sure the request originated from Smartsheet and that the data has not been tampered with.\n\nNOTE: For maximum security, you may also choose to [reset your webhook's shared secret](../../tag/webhooks#operation/resetSharedSecret) at periodic intervals.\n\n# Preventing Infinite Loops\n\nIt's possible that an application which subscribes to callbacks (using webhooks) might react to those callbacks by using the API to make additional changes in Smartsheet.\nBut, consider the following scenario:\n\n1. **App1** creates a webhook to monitor **Sheet-A** for changes, specifying an **App-1** URL as the **callbackUrl** for the webhook.\n\n2. **App-1** updates **Sheet-A** using the API.\n\n3. Smartsheet detects that **Sheet-A** has changed and sends a callback to **App-1** (as the webhook specified).\n\n4. **App-1** processes the callback, and in the course of doing so, updates **Sheet-A** again using the API.\n\n5. Return to Step 3.\n\nTo protect against infinite loops like the one outlined above, Smartsheet introduced support for a new header that an API client can include with any API request that adds, updates, or deletes data in Smartsheet.\nHere's how it works:\n\n* An API client includes the **Smartsheet-Change-Agent** header in any API request that adds, updates, or deletes data in Smartsheet.\n  * The header value should be set to a string that the API client recognizes\nas identifying itself. * If any [event callbacks](../../tag/webhooksObjects#section/CallbackEvent-Object) fire as a result of an API request that contains the **Smartsheet-Change-Agent** header, the value of the **Smartsheet-Change-Agent** header is included in the [callback](../../tag/webhooksObjects#section/Callback-Object) in the value of the **changeAgent** attribute.\n* If a webhook subscriber receives a [callback](../../tag/webhooksObjects#section/Callback-Object) that contains the **changeAgent** attribute, it should evaluate the attribute value:\n  * If the attribute value's comma-delimited list contains the subscriber API\nclient's change agent value, this indicates that the change which triggered the callback *was* caused by the subscriber itself, and the subscriber can choose to ignore the callback, thus preventing an infinite loop.\n  * Else, the change which triggered the callback was *not* caused by the subscriber\nitself, and if the subscriber is going to subsequently react to the callback by making a change in Smartsheet (via API request), the API client should append a comma and its own identifier to the original attribute value, and pass that value through using the **Smartsheet-Change-Agent** header of the API request. Doing so protects against cross-system infinite loops.\nNOTE: The <b>Smartsheet-Change-Agent</b> header value has a maximum length of 512 characters. If its length exceeds 512 characters, the excess is trimmed from the front of the string, so that the most recent agent information remains.\n\n# Webhook Errors\n\nThe following table specifies the recommended action for each Smartsheet-specific error code.\nUse this information to implement error handling logic according to the following guidelines:\n\n* If the error code indicates a permanent error condition, do not retry the request.\n* If the error code indicates a problem that can be fixed, do not retry the request until the problem has been fixed.\n* If the error code indicates a problem that could be overcome by retrying the request after a period of time, retry the request using exponential backoff.\n\nHTTP status code | Smartsheet errorCode | Smartsheet message | Recommended Action |\n-----|-----|-----|-----|\n400 | 1151 | Scope '{0}', object id {1} was not found. | Do not retry without fixing the problem.\n400 | 1152 | Only URLs with a protocol of 'https' are supported for attribute '{0}'. | Do not retry without fixing the problem.\n403 | 1153 | This webhook cannot be enabled because access was revoked for the application that created it. | <span class=\"doNotRetry\">Do not retry.</span>\n403 | 1154 | Please contact api@smartsheet.com in order to enable this webhook. | <span class=\"doNotRetry\">Do not retry.</span>\n"
  - name: webhooksObjects
    x-displayName: Objects
    description: |
      # Webhook Object
        <SchemaDefinition schemaRef="#/components/schemas/Webhook" />

      # Callback Object
        <SchemaDefinition schemaRef="#/components/schemas/Callback" />

      # CallbackEvent Object
        <SchemaDefinition schemaRef="#/components/schemas/CallbackEvent" />

      # SharedSecret Object
        <SchemaDefinition schemaRef="#/components/schemas/SharedSecret" />

      # Subscope Object
        <SchemaDefinition schemaRef="#/components/schemas/Subscope" />
  - name: workspaces
    x-displayName: Methods
  - name: workspacesDescription
    x-displayName: Workspaces Basics
    description: >
      Similar to a folder, a workspace is a place where you can store
      dashboards, reports, sheets, and templates to keep them organized. A
      workspace offers more functionality than a folder because you can set up
      sharing permissions and branding (a logo and a color scheme) at the
      workspace-level and a workspace can contain folders so that you can keep
      things within it organized. As new items are added to the workspace,
      they’ll automatically inherit the sharing permissions and branding applied
      to that workspace.
  - name: workspacesObjects
    x-displayName: Objects
    description: |
      # Workspace Object
        <SchemaDefinition schemaRef="#/components/schemas/Workspace" />
  - name: workspacesRelated
    x-displayName: Related Items
    description: >
      # Workspace Folders


      For details about working with folders in a workspace, see
      [Folders](../../tag/foldersDescription).


      # Workspace Sheets


      For details about working with sheets in a workspace, see
      [Sheets](../../tag/sheetsDescription).</br>
paths:
  /contacts:
    parameters:
      - name: Authorization
        in: header
        description: |
          API Access Token used to authenticate requests to Smartsheet APIs.
        schema:
          type: string
          example: Bearer JKlMNOpQ12RStUVwxYZAbcde3F5g6hijklM789
    get:
      operationId: list-contacts
      summary: List Contacts
      description: Gets a list of the user's Smartsheet contacts.
      tags:
        - contacts
      security:
        - APIToken: []
        - OAuth2:
            - READ_CONTACTS
      parameters:
        - name: includeAll
          in: query
          required: false
          description: >-
            If true, include all results, that is, do not paginate. Mutually
            exclusive with page and pageSize (they are ignored if
            includeAll=true is specified).
          schema:
            type: boolean
            default: false
        - name: modifiedSince
          in: query
          required: false
          description: >-
            When specified with a date and time value, response only includes
            the objects that are modified on or after the date and time
            specified. If you need to keep track of frequent changes, it may be
            more useful to use Get Sheet Version.
          schema:
            $ref: '#/components/schemas/Attachment/properties/createdAt'
        - name: numericDates
          in: query
          schema:
            type: boolean
            default: false
          description: >-
            You can optionally choose to receive and send dates/times in numeric
            format, as milliseconds since the UNIX epoch (midnight on January 1,
            1970 in UTC time), using the query string parameter numericDates
            with a value of true. This query parameter works for any API
            request.
        - name: page
          in: query
          required: false
          description: >-
            Which page to return. Defaults to 1 if not specified. If you specify
            a value greater than the total number of pages, you'll receive an
            empty *data* set.
          schema:
            type: number
            default: 1
        - name: pageSize
          in: query
          required: false
          description: >-
            The maximum number of items to return per page. Unless otherwise
            stated for a specific endpoint, defaults to 100. If only page is
            specified, defaults to a page size of 100. For reports, the default
            is 100 rows. If you need larger sets of data from your report,
            returns a maximum of 10,000 rows per request.
          schema:
            type: number
            default: 100
      responses:
        '200':
          description: IndexResult object containing an array of Contact objects
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      pageNumber:
                        description: >-
                          The current page in the full result set that the data
                          array represents. NOTE when a page number greater than
                          totalPages is requested, the last page is instead
                          returned.
                        type: number
                        example: 1
                        readOnly: true
                      pageSize:
                        description: >-
                          The number of items in a page. Omitted if there is no
                          limit to page size (and hence, all results are
                          included). Unless otherwise specified, this defaults
                          to 100 for most endpoints.
                        type: number
                        example: 50
                        nullable: true
                        readOnly: true
                      totalPages:
                        description: The total number of pages in the full result set.
                        type: number
                        example: 25
                        readOnly: true
                      totalCount:
                        description: The total number of items in the full result set.
                        type: number
                        example: 136
                        readOnly: true
                  - type: object
                    properties:
                      data:
                        description: List of Contacts
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: Contact Id.
                              type: string
                              example: AAAAATYU54QAD7_fNhTnhA
                            name:
                              description: Contact's full name.
                              type: string
                              example: Jane Doe
                            email:
                              description: Contact's email address.
                              type: string
                              format: email
                              example: jane.doe@smartsheet.com
        '401':
          description: |
            Unauthorized.  See Smartsheet Error Code and Message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
              examples:
                1001Example:
                  summary: 401 - 1001 - An Access Token is required
                  value:
                    errorCode: 1001
                    message: An Access Token is required
                    refId: exlxshtxlpl8
                1002Example:
                  summary: 401 - 1002  - Your Access Token is invalid
                  value:
                    errorCode: 1003
                    message: Your Access Token is invalid
                    refId: exlxshtxlpl8
                1003Example:
                  summary: 401 - 1003 - Your Access Token has expired
                  value:
                    errorCode: 1003
                    message: Your Access Token has expired
                    refId: exlxshtxlpl8
                1005Example:
                  summary: 401 - 1005 - Single Sign-On is required for this account
                  value:
                    errorCode: 1005
                    message: Single Sign-On is required for this account
                    refId: exlxshtxlpl8
                1030Example:
                  summary: 401 - 1030 - You are unable to assume the user specified
                  value:
                    errorCode: 1030
                    message: You are unable to assume the user specified
                    refId: exlxshtxlpl8
                1067Example:
                  summary: 401 - 1067 - Invalid client_id
                  value:
                    errorCode: 1067
                    message: Invalid client_id
                    refId: exlxshtxlpl8
        '404':
          description: |
            Not Found.  See Smartsheet Error Code and Message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
              examples:
                1006Example:
                  summary: 404 - 1006 - Not Found
                  value:
                    errorCode: 1006
                    message: Not Found
                    refId: exlxshtxlpl8
        '500':
          description: >
            Internal Server Error.  See Smartsheet Error Code and Message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
              examples:
                1119Example:
                  summary: 500 - 1119 - Failed to complete copy
                  value:
                    errorCode: 1119
                    message: Failed to complete copy.
                    refId: exlxshtxlpl8
                1170Example:
                  summary: >-
                    500 - 1170 - The sheet referenced by this widget is
                    unavailable or deleted.
                  value:
                    errorCode: 1170
                    message: >-
                      The sheet referenced by this widget is unavailable or
                      deleted.
                    refId: exlxshtxlpl8
                1171Example:
                  summary: >-
                    500 - 1171 - The report referenced by this widget is
                    unavailable or deleted.
                  value:
                    errorCode: 1171
                    message: >-
                      The report referenced by this widget is unavailable or
                      deleted.
                    refId: exlxshtxlpl8
                1172Example:
                  summary: 500 - 1172 - The referenced cell is unavailable or deleted.
                  value:
                    errorCode: 1172
                    message: The referenced cell is unavailable or deleted.
                    refId: exlxshtxlpl8
                1278Example:
                  summary: 500 - 1278 - Proofing service error.
                  value:
                    errorCode: 1278
                    message: Proofing service error.
                    refId: exlxshtxlpl8
                1285Example:
                  summary: 500 - 1285 - Dashboard source profile field missing.
                  value:
                    errorCode: 1285
                    message: Dashboard source profile field missing.
                    refId: exlxshtxlpl8
                4000Example:
                  summary: >-
                    500 - 4000 - An unexpected error has occurred. Please
                    contact api@smartsheet.com for assistance.
                  value:
                    errorCode: 4000
                    message: >-
                      An unexpected error has occurred. Please contact
                      api@smartsheet.com for assistance.
                    refId: exlxshtxlpl8
                4001Example:
                  summary: >-
                    500 - 4001 - Smartsheet.com is currently offline for system
                    maintenance. Please check back again shortly.
                  value:
                    errorCode: 4001
                    message: >-
                      Smartsheet.com is currently offline for system
                      maintenance. Please check back again shortly.
                    refId: exlxshtxlpl8
                4002Example:
                  summary: 500 - 4002 - Server timeout exceeded. Request has failed.
                  value:
                    errorCode: 4002
                    message: Server timeout exceeded. Request has failed.
                    refId: exlxshtxlpl8
                4004Example:
                  summary: >-
                    500 - 4004 - An unexpected error has occurred. Please retry
                    your request. If you encounter this error repeatedly, please
                    contact api@smartsheet.com for assistance.
                  value:
                    errorCode: 4004
                    message: >-
                      An unexpected error has occurred. Please retry your
                      request. If you encounter this error repeatedly, please
                      contact api@smartsheet.com for assistance.
                    refId: exlxshtxlpl8
                4004Example2:
                  summary: >-
                    500 - 4004 - Request failed because sheetId {0} is currently
                    being updated by another request that uses the same access
                    token. Please retry your request once the previous request
                    has completed.
                  value:
                    errorCode: 4004
                    message: >-
                      Request failed because sheetId {0} is currently being
                      updated by another request that uses the same access
                      token. Please retry your request once the previous request
                      has completed.
                    refId: exlxshtxlpl8
                5151Example:
                  summary: >-
                    500 - 5151 - The action could not be completed because the
                    following people are outside of the approved domain sharing
                    list:[email address]
                  value:
                    errorCode: 5151
                    message: >-
                      The action could not be completed because the following
                      people are outside of the approved domain sharing
                      list:[email address]
                    refId: exlxshtxlpl8
                5502Example:
                  summary: >-
                    500 - 5502 - You must have sheet admin permission to save a
                    notification with recipients other than yourself.
                  value:
                    errorCode: 5502
                    message: >-
                      You must have sheet admin permission to save a
                      notification with recipients other than yourself.
                    refId: exlxshtxlpl8
  /contacts/{contactId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - name: contactId
        in: path
        schema:
          type: number
        required: true
        description: contactId of the contact being accessed.
    get:
      summary: Get Contact
      description: Gets the specified contact.
      operationId: get-contact
      tags:
        - contacts
      security:
        - APIToken: []
        - OAuth2:
            - READ_CONTACTS
      parameters:
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to include in the
            response:
              * **profileImage**
          schema:
            type: string
            enum:
              - profileImage
      responses:
        '200':
          description: Returns Contact object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /events:
    get:
      operationId: list-events
      summary: List Events
      description: >-
        Gets events that are occurring in your Smartsheet organization account.
        Examples of events are creation, update, load, and delete of sheets,
        reports, dashboards, attachments, users, etc.


        Each event type has a distinct combination of objectType and action.
        Many event types have additional information returned under an
        additionalDetails object. See the <a
        href="https://smartsheet-platform.github.io/event-reporting-docs/"
        target="_blank">Event Reporting reference documentation</a> for a
        complete list of all currently supported events, including their
        respective objectType, action, and additionalDetails properties.
      tags:
        - events
      security:
        - APIToken: []
        - OAuth2:
            - READ_EVENTS
      parameters:
        - name: Accept-Encoding
          in: header
          description: >
            Strongly recommended to make sure payload is compressed. Must be set
            to one of the following values:

            * deflate

            * gzip
          schema:
            type: string
            enum:
              - deflate
              - gzip
          required: false
        - $ref: '#/paths/~1contacts/parameters/0'
        - name: since
          in: query
          description: >-
            Starting time for events to return. Intended for use only at client
            startup or recovery. This is intended for backfilling data and not
            for fine-grained date-based queries. Therefore, resolution is
            limited to the nearest hour. Interpreted as ISO-8601 format, unless
            numericDates is specified (see details about numericDates below)


            You must pass in a value for either since or streamPosition and
            never both.
          schema:
            type: string
            format: date-time
          required: false
        - name: streamPosition
          in: query
          description: >-
            Indicates next set of events to return. Use value of
            nextStreamPosition returned from the previous call.

            You must pass in a value for either since or streamPosition and
            never both.
          schema:
            type: string
            example: XyzAb1234cdefghijklmnofpq
          required: false
        - name: maxCount
          in: query
          description: |-
            Maximum number of events to return as response to this call.
            Must be between 1 through 10,000 (inclusive).
            Defaults to 1,000 if not specified.
          schema:
            type: integer
            minimum: 1
            maximum: 10000
            default: 1000
          required: false
        - name: numericDates
          in: query
          description: >-
            If true, dates are accepted and returned in Unix epoch time
            (milliseconds since midnight on January 1, 1970 in UTC time).

            Default is false, which means ISO-8601 format.
          schema:
            type: boolean
            default: false
          required: false
        - name: managedPlanId
          in: query
          description: >-
            The target managed plan for which to list events. Authorized if the
            caller is a system administrator on either the target managed plan
            or the main plan in EPM hierarchy.
          schema:
            type: number
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - description: StreamResult Object
                    type: object
                    properties:
                      nextStreamPosition:
                        description: >-
                          This string should be passed back to the next GET
                          events call to obtain subsequent events.
                        type: string
                        example: XyzAb1234cdefghijklmnofpq
                      moreAvailable:
                        description: >-
                          True if more results are available. This is typically
                          due to event counts exceeding the maxCount parameter
                          passed in.
                        type: boolean
                        example: true
                  - type: object
                    properties:
                      data:
                        description: List of Events
                        type: array
                        items:
                          description: An Event object for event reporting.
                          type: object
                          properties:
                            eventId:
                              description: Unique event identifier.
                              type: string
                              example: 4b12345abc444def333g149he2b15b3j
                            objectType:
                              description: >-
                                The Smartsheet resource impacted by the event,
                                such as, SHEET or WORKSPACE.
                              type: string
                              enum:
                                - SHEET
                                - WORKSPACE
                              example: sheet
                            action:
                              description: >-
                                The action applied to the specified object, such
                                as CREATE or DELETE.
                              type: string
                              example: CREATE
                            objectId:
                              description: >-
                                The identifier of the object impacted by the
                                event.
                              type: string
                              example: 345678901234
                            eventTimeStamp:
                              description: >-
                                Date and time of the event. Defaults to ISO-8601
                                format. See dates and times for more
                                information.
                              type: string
                              format: date-time
                            userId:
                              description: >-
                                User assumed as the one who initiated the event.
                                Usually the userId property and the
                                requestUserId property (below) have the same
                                value. However, if the request is an API call
                                with Assume-User header then the userId property
                                identifies the user whose email matches the
                                value in the Assume-User header.
                              type: number
                              example: 123457654321
                            requestUserId:
                              description: >-
                                User whose authentication credential is embedded
                                in the request that initiated the event. For
                                example, if the request is an API call with an
                                access token then requestUserId identifies the
                                user whose data can be accessed via the access
                                token (i.e., the user who authorized the
                                creation of the access token). On the other
                                hand, if the request comes from a UI session,
                                then requestUserId identifies the user logged-in
                                to the UI.
                              type: number
                              example: 133445566778
                            accessTokenName:
                              description: >-
                                Name of the access token embedded in the
                                request. This property is omitted if there's no
                                access token in the request (i.e., it isn't an
                                API call) or if the access token wasn't given a
                                name when created (only access tokens generated
                                via the Smartsheet desktop UI can be given a
                                name at creation time).
                              type: string
                              nullable: false
                            source:
                              description: >-
                                Identifies the type of action that triggered the
                                event.
                              type: string
                              example: WEB_APP
                            additionalDetails:
                              description: >-
                                Container object for additional event-specific
                                properties. Properties depend upon the event
                                type. See [Event
                                Reporting](https://smartsheet-platform.github.io/event-reporting-docs/)
                                reference documentation for details on each
                                event type.
                              type: object
                              additionalProperties: true
        '400':
          description: Bad Request.  See Smartsheet Error Code and Message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
        '401':
          $ref: '#/paths/~1contacts/get/responses/401'
        '403':
          description: |
            Forbidden.  See Smartsheet Error Code and Message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
        '404':
          $ref: '#/paths/~1contacts/get/responses/404'
        '405':
          description: >
            Method Not Allowed.  See Smartsheet Error Code and Message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
              examples:
                1010Example:
                  summary: 404 - 1010 - HTTP Method Not Supported
                  value:
                    errorCode: 1010
                    message: HTTP Method Not Supported
                    refId: exlxshtxlpl8
                1122Example:
                  summary: '404 - 1122 - Requested URL does not support this method: {0}'
                  value:
                    errorCode: 1122
                    message: 'Requested URL does not support this method: {0}.'
                    refId: exlxshtxlpl8
        '406':
          description: |
            Not Acceptable.  See Smartsheet Error Code and Message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
              examples:
                1052Example:
                  summary: Invalid Accept header. Media type not supported.
                  value:
                    errorCode: 1052
                    message: Invalid Accept header. Media type not supported.
                    refId: exlxshtxlpl8
        '410':
          description: |
            Gone.  See Smartsheet Error Code and Message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
              examples:
                4005Example:
                  summary: API Version Retired.
                  value:
                    errorCode: 4005
                    message: API Version Retired.
                    refId: exlxshtxlpl8
        '415':
          description: |
            Gone.  See Smartsheet Error Code and Message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
              examples:
                1124Example:
                  summary: Invalid Content-Type header. Media type not supported.
                  value:
                    errorCode: 1124
                    message: Invalid Content-Type header. Media type not supported.
                    refId: exlxshtxlpl8
        '429':
          description: |
            Gone.  See Smartsheet Error Code and Message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
              examples:
                4003Example:
                  summary: Rate limit exceeded.
                  value:
                    errorCode: 4003
                    message: Rate limit exceeded.
                    refId: exlxshtxlpl8
        '500':
          $ref: '#/paths/~1contacts/get/responses/500'
  /favorites:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - name: x-smar-sc-actor-id
        description: |
          UserId of the user
        in: header
        schema:
          type: string
          example: 100012
    get:
      summary: Get Favorites
      description: Gets a list of all of the user's favorite items.
      operationId: get-favorites
      tags:
        - favorites
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to include in the
            response.
          schema:
            type: string
            enum:
              - directId
              - name
      responses:
        '200':
          description: IndexResult object containing an array of Favorite objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            objectId:
                              description: >-
                                The Id of the favorited item. If type is
                                template, only private sheet-type template Id is
                                allowed.
                              type: number
                            type:
                              type: string
                              enum:
                                - folder
                                - report
                                - sheet
                                - sight
                                - template
                                - workspace
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      summary: Add Favorites
      description: >
        Adds one or more favorite items for the current user. This operation
        supports both single-object and bulk semantics. For more information,
        see Optional Bulk Operations.

        If called with a single Favorite object, and that favorite already
        exists, error code 1129 is returned. If called with an array of Favorite
        objects, any objects specified in the array that are already marked as
        favorites are ignored and omitted from the response.
      operationId: add-favorite
      tags:
        - favorites
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      parameters:
        - name: Content-Type
          in: header
          description: >
            Required for POST and PUT requests. Defines the structure for the
            request body.
          schema:
            type: string
            default: application/json
      requestBody:
        description: A list of favorites to be added.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1favorites/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                - type: array
                  items:
                    $ref: >-
                      #/paths/~1favorites/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
      responses:
        '200':
          description: >-
            Result object containing either a single Favorite object or an array
            of Favorite objects.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      message:
                        description: >-
                          Message that indicates the outcome of the request.
                          (One of SUCCESS or PARTIAL_SUCCESS.)
                        type: string
                        enum:
                          - PARTIAL_SUCCESS
                          - SUCCESS
                        example: SUCCESS
                      resultCode:
                        description: |-
                          * '0' Success
                          * '3' Partial Success of Bulk Operation
                        type: number
                        enum:
                          - 0
                          - 3
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1favorites/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                          - type: array
                            items:
                              $ref: >-
                                #/paths/~1favorites/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: Generic Error Payload.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/get/responses/default/content/application~1json/schema
  /favorites/{favoriteType}:
    parameters:
      - name: favoriteType
        in: path
        schema:
          type: string
          enum:
            - folder
            - report
            - sheet
            - sight
            - template
            - workspace
        required: true
        description: The favorite type.
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1favorites/parameters/1'
    delete:
      summary: Delete Multiple Favorites
      description: Deletes all favorites with the same type for the user.
      operationId: delete-favorites-by-type
      tags:
        - favorites
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      parameters:
        - name: objectIds
          in: query
          required: true
          description: |
            A comma-separated list of Ids of the favorited item.
          schema:
            type: string
      responses:
        '200':
          description: Returns Result object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /favorites/{favoriteType}/{favoriteId}:
    parameters:
      - $ref: '#/paths/~1favorites~1%7BfavoriteType%7D/parameters/0'
      - name: favoriteId
        in: path
        schema:
          type: number
        required: true
        description: Favorite Id, e.g., sheet Id, report Id.
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1favorites/parameters/1'
    delete:
      summary: Delete Favorite
      description: >-
        Deletes a single favorite from the user's list of favorite items by type
        and ID.
      operationId: delete-favorites-by-type-and-id
      tags:
        - favorites
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      responses:
        '200':
          description: Returns Result object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    get:
      summary: Is Favorite
      description: >-
        Checks whether an item has been tagged as a favorite for the current
        user by type and ID.
      operationId: is-favorite
      tags:
        - favorites
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/get/parameters/3'
      responses:
        '200':
          description: Returns Result object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites~1%7BfavoriteType%7D~1%7BfavoriteId%7D/delete/responses/default/content/application~1json/schema
  /folders/{folderId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - name: folderId
        in: path
        schema:
          type: number
        required: true
        description: >-
          Folder Id where you can create sheets, sights, reports, templates, and
          other folders.
    get:
      summary: Get Folder
      description: Gets a Folder object.
      tags:
        - folders
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      operationId: get-folder
      parameters:
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to include in the
            response:
              * **source** - adds the Source object indicating which object the folder
            was created from, if any
              * **distributionLink**
              * **ownerInfo**
              * **sheetVersion**
              * **permalinks**
          schema:
            type: string
            enum:
              - source
              - distributionLink
              - ownerInfo
              - sheetVersion
              - permalinks
      responses:
        '200':
          description: A single Folder object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder/properties/folders/items'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      summary: Delete Folder
      description: Deletes a folder.
      tags:
        - folders
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      operationId: delete-folder
      responses:
        '200':
          description: |
            Returns Result object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D/get/responses/default/content/application~1json/schema
    put:
      summary: Update Folder
      description: Updates a folder.
      operationId: update-folder
      tags:
        - folders
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1folders~1%7BfolderId%7D/get/responses/200/content/application~1json/schema
      responses:
        '200':
          description: Result object containing the modified Folder object.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    allOf:
                      - type: object
                        allOf:
                          - type: object
                            properties:
                              message:
                                description: >-
                                  Message that indicates the outcome of the
                                  request. (One of SUCCESS or PARTIAL_SUCCESS.)
                                type: string
                                enum:
                                  - PARTIAL_SUCCESS
                                  - SUCCESS
                                example: SUCCESS
                              resultCode:
                                description: |-
                                  * '0' Success
                                  * '3' Partial Success of Bulk Operation
                                type: number
                                enum:
                                  - 0
                                  - 3
                        properties:
                          failedItems:
                            description: >-
                              Array of BulkItemFailure objects which represents
                              the items that failed to be added or updated. See
                              [Partial Success](/partial-success) for more
                              information. Applicable only for bulk operations
                              that support partial success.
                            type: array
                            items:
                              $ref: >-
                                #/components/schemas/Result/allOf/0/properties/failedItems/items
                            nullable: true
                    properties:
                      version:
                        description: >-
                          New version of the sheet. Applicable only for
                          operations which update sheet data.
                        type: number
                        nullable: true
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1folders~1%7BfolderId%7D/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D/get/responses/default/content/application~1json/schema
  /folders/{folderId}/copy:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1folders~1%7BfolderId%7D/parameters/1'
    post:
      summary: Copy Folder
      description: Copies a folder.
      tags:
        - folders
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      operationId: copy-folder
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of elements to copy:
              * **attachments**
              * **cellLinks** - includes cross-sheet references
              * **data** - includes formatting
              * **discussions** - includes comments
              * **filters**
              * **forms**
              * **ruleRecipients** -- includes notification recipients, must also include
            rules when using this attribute
              * **rules** -- includes notifications and workflow rules
              * **shares** |
            NOTE: Cell history is not copied, regardless of which include
            parameter values are specified.
          schema:
            type: string
            enum:
              - attachments
              - cellLinks
              - data
              - discussions
              - filters
              - forms
              - ruleRecipients
              - rules
              - shares
        - name: exclude
          in: query
          required: false
          description: >-
            When specified with a value of **sheetHyperlinks**, excludes this
            category from the response
          schema:
            type: string
            enum:
              - sheetHyperlinks
        - name: skipRemap
          in: query
          description: >-
            A comma-separated list of references to NOT re-map for the newly
            created folder.
          schema:
            type: string
            enum:
              - cellLinks
              - reports
              - sheetHyperlinks
              - sights
          required: false
      requestBody:
        description: New folder name.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    destinationId:
                      description: >-
                        The Id of the destination container (when copying or
                        moving a sheet or a folder). Required if destinationType
                        is "folder" or "workspace". If destinationType is
                        "home", this value must be null.
                      type: number
                    destinationType:
                      description: Type of the destination container.
                      type: string
                      nullable: true
                      enum:
                        - folder
                        - home
                        - workspace
                    newName:
                      description: >-
                        Name of the newly created object (when creating a copy
                        of a dashboard, folder, sheet, or workspace). This
                        attribute is not supported for "move" operations.
                      type: string
      responses:
        '200':
          description: >-
            Result object containing a Folder object for the new folder
            destination.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D~1copy/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /folders/{folderId}/folders:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1folders~1%7BfolderId%7D/parameters/1'
    get:
      summary: List Folders
      description: >
        Gets a list of folders in a given folder. The list contains an
        abbreviated Folder object for each folder.
      tags:
        - folders
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      operationId: list-folders
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: IndexResult object containing an array of Folder objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/Folder/properties/folders/items'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      summary: Create Folder
      description: |
        Creates a new folder.
      operationId: create-folder-folder
      tags:
        - folders
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1copy/post/parameters/1'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1copy/post/parameters/2'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1copy/post/parameters/3'
      requestBody:
        description: Folder to create.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1folders~1%7BfolderId%7D~1folders/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items
      responses:
        '200':
          description: Result object containing a Folder object for newly created folder.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1folders~1%7BfolderId%7D~1folders/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D~1folders/get/responses/default/content/application~1json/schema
  /folders/{folderId}/move:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1folders~1%7BfolderId%7D/parameters/1'
    post:
      summary: Move Folder
      description: Moves a folder.
      tags:
        - folders
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      operationId: move-folder
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        description: New folder destination.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1folders~1%7BfolderId%7D~1copy/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >-
            Result object containing a Folder object for the new folder
            destination.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D~1move/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /folders/{folderId}/sheets:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1folders~1%7BfolderId%7D/parameters/1'
    post:
      summary: Create Sheet in Folder
      description: >
        Creates a sheet from scratch or from the specified template in the
        specified folder.
      operationId: create-sheet-in-folder
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - name: include
          in: query
          required: false
          description: |
            Additional parameter to create a sheet from template.
            A comma-separated list of elements to copy from the template.
          schema:
            type: string
            enum:
              - attachments
              - cellLinks
              - data
              - discussions
              - filters
              - forms
              - ruleRecipients
              - rules
      requestBody:
        description: Sheet to create.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  description: Sheet to create from scratch using the specified columns.
                  properties:
                    columns:
                      type: array
                      items:
                        type: object
                        properties:
                          autoNumberFormat:
                            $ref: >-
                              #/components/schemas/Column/properties/autoNumberFormat
                          contactOptions:
                            type: array
                            items:
                              $ref: >-
                                #/components/schemas/Column/properties/contactOptions/items
                            description: >-
                              Array of ContactOption objects to specify a
                              pre-defined list of values for the column. Column
                              **type** must be **CONTACT_LIST**.
                          options:
                            type: array
                            items:
                              type: string
                            description: Array of the options available for the column.
                          primary:
                            type: boolean
                            description: >-
                              Returned only if the column is the Primary Column
                              (value = **true**).
                          symbol:
                            type: string
                            description: >-
                              When applicable for **CHECKBOX** or **PICKLIST**
                              column types. See [Symbol
                              Columns](../../tag/columnsRelated#section/Column-Types/Symbol-Columns).
                          systemColumnType:
                            type: string
                            enum:
                              - AUTO_NUMBER
                              - CREATED_BY
                              - CREATED_DATE
                              - MODIFIED_BY
                              - MODIFIED_DATE
                            description: >-
                              See [System
                              Columns](../../tag/columnsRelated#section/Column-Types).
                          title:
                            type: string
                            description: Column title.
                          type:
                            type: string
                            enum:
                              - ABSTRACT_DATETIME
                              - CHECKBOX
                              - CONTACT_LIST
                              - DATE
                              - DATETIME
                              - DURATION
                              - MULTI_CONTACT_LIST
                              - MULTI_PICKLIST
                              - PICKLIST
                              - PREDECESSOR
                              - TEXT_NUMBER
                            description: >-
                              See [Column
                              Types](../../tag/columnsRelated#section/Column-Types)
                          width:
                            type: number
                            description: Display width of the column in pixels.
                    name:
                      $ref: >-
                        #/components/schemas/Folder/properties/sheets/items/properties/name
                - type: object
                  description: Sheet to create from template.
                  properties:
                    fromId:
                      description: Template Id from which to create the sheet.
                      type: number
                    name:
                      $ref: >-
                        #/components/schemas/Folder/properties/sheets/items/properties/name
      responses:
        '200':
          description: >-
            Result object containing a Sheet object for newly created sheet,
            corresponding to what was specified in the request.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - type: object
                            description: >-
                              Sheet created from scratch using the specified
                              columns.
                            properties:
                              accessLevel:
                                $ref: >-
                                  #/components/schemas/Folder/properties/sheets/items/properties/accessLevel
                              columns:
                                $ref: >-
                                  #/components/schemas/Folder/properties/sheets/items/properties/columns
                              id:
                                $ref: >-
                                  #/components/schemas/Folder/properties/sheets/items/properties/id
                              name:
                                $ref: >-
                                  #/components/schemas/Folder/properties/sheets/items/properties/name
                              permalink:
                                $ref: >-
                                  #/components/schemas/Folder/properties/sheets/items/properties/permalink
                          - type: object
                            description: Sheet created from template.
                            properties:
                              accessLevel:
                                $ref: >-
                                  #/components/schemas/Folder/properties/sheets/items/properties/accessLevel
                              id:
                                $ref: >-
                                  #/components/schemas/Folder/properties/sheets/items/properties/id
                              name:
                                $ref: >-
                                  #/components/schemas/Folder/properties/sheets/items/properties/name
                              permalink:
                                $ref: >-
                                  #/components/schemas/Folder/properties/sheets/items/properties/permalink
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /folders/{folderId}/sheets/import:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1folders~1%7BfolderId%7D/parameters/1'
    post:
      summary: Import Sheet into Folder
      description: >
        Imports CSV or XLSX data into a new sheet in the specified folder.


        Note the following:

        * Both sheetName and the file name must use ASCII characters.

        * The source data must be basic text. To include rich formula data,
        import and create a sheet first, and then use Update Rows. To work with
        images, see Cell Images.

        * XLS is not supported. You must use XLSX.

        * Hierarchical relationships between rows in an external file won't
        import.
      operationId: import-sheet-into-folder
      tags:
        - import
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SHEETS
      parameters:
        - name: Content-Disposition
          in: header
          description: >
            Should be equal to "attachment" to tell the API that a file is in
            the body of the POST request, followed by a semicolon, followed by
            **filename=** and the URL-encoded filename in quotes
          schema:
            type: string
            example: attachment; filename="ProgressReport.docx"
        - name: Content-Type
          in: header
          required: true
          description: >
            Required for POST request to import a sheet from CSV/XLSX file.

            * For CSV files, use: Content-Type: text/csv

            * For XLSX files, use: Content-Type:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
          schema:
            type: string
            enum:
              - text/csv
              - >-
                application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
        - name: sheetName
          in: query
          schema:
            type: string
          required: true
          description: Desired name of the sheet.
        - name: headerRowIndex
          in: query
          schema:
            type: number
          required: false
          description: >
            A zero-based integer indicating the row number to use for column
            names. Rows before this are omitted.

            If not specified, the default values are Column1, Column2, etc.
        - name: primaryColumnIndex
          in: query
          schema:
            type: number
            default: 0
          required: false
          description: |
            A zero-based integer indicating the column to designate as primary.
      requestBody:
        description: Binary content for the CSV / XLSX file.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Result object containing a Sheet object for imported sheet.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: object
                        description: Sheet imported from CSV / XLSX file.
                        properties:
                          accessLevel:
                            $ref: >-
                              #/components/schemas/Folder/properties/sheets/items/properties/accessLevel
                          id:
                            $ref: >-
                              #/components/schemas/Folder/properties/sheets/items/properties/id
                          name:
                            $ref: >-
                              #/components/schemas/Folder/properties/sheets/items/properties/name
                          type:
                            description: >-
                              Container type. Has 'sheet' value for the imported
                              sheet.
                            type: string
                          permalink:
                            $ref: >-
                              #/components/schemas/Folder/properties/sheets/items/properties/permalink
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /folders/personal:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Contents
      description: >-
        Gets a nested list of all Home objects shared to the user, including
        dashboards, folders, reports, sheets, and templates, as shown on the
        "Home" tab.
      tags:
        - home
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      operationId: list-home-contents
      parameters:
        - $ref: '#/paths/~1folders~1%7BfolderId%7D/get/parameters/0'
      responses:
        '200':
          description: A single Home object.
          content:
            application/json:
              schema:
                description: >-
                  All objects a user has access to, including dashboards,
                  folders, reports, sheets, and templates.
                type: object
                properties:
                  folders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Folder/properties/folders/items'
                  reports:
                    type: array
                    items:
                      $ref: '#/components/schemas/Folder/properties/reports/items'
                  sheets:
                    type: array
                    items:
                      $ref: '#/components/schemas/Folder/properties/sheets/items'
                  sights:
                    type: array
                    items:
                      $ref: '#/components/schemas/Folder/properties/sights/items'
                  templates:
                    type: array
                    items:
                      $ref: '#/components/schemas/Folder/properties/templates/items'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /groups:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      operationId: list-groups
      summary: List Org Groups
      description: >
        Gets a list of all groups in an organization account. To fetch the
        members of an individual group, use the [Get
        Group](../../tag/groups#operation/get-group) operation.
      tags:
        - groups
      security:
        - APIToken: []
        - OAuth2:
            - READ_USERS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/1'
        - $ref: '#/paths/~1contacts/get/parameters/2'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: >
            IndexResult object containing an array of [Group
            objects](/section/Group-Object)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: List of Groups
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: Group Id.
                              type: number
                              example: 4583173393803140
                            name:
                              description: Group name.
                              type: string
                              example: Group 1
                            description:
                              description: Group description.
                              type: string
                              example: My group
                            owner:
                              description: Group owner’s email address.
                              type: string
                              format: email
                              example: john.doe@smartsheet.com
                            ownerId:
                              description: Group owner's user Id.
                              type: number
                              example: 2331373580117892
                            createdAt:
                              $ref: >-
                                #/components/schemas/Attachment/properties/createdAt
                            modifiedAt:
                              $ref: >-
                                #/components/schemas/Attachment/properties/createdAt
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      operationId: add-group
      summary: Add Group
      description: >
        Creates a new group.


        **_This operation is only available to group administrators and system
        administrators._**
      tags:
        - groups
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      requestBody:
        description: >
          [Group object](../../tag/groupsObjects#section/Group-Object), limited
          to the following attributes:

          * name (required) -- must be unique within the organization account

          * description (optional)

          * members (optional) -- array of [GroupMember
          objects](../../tag/groupMembersObjects#section/Group-Member-Object),
          each limited to the following attribute:
              * email
        content:
          application/json:
            schema:
              description: Create group request.
              type: object
              properties:
                name:
                  description: |
                    **name** (required)

                    Must be unique within the organization account.
                  type: string
                  example: API-created group
                description:
                  description: |
                    **description** (optional)
                  type: string
                  example: Group created via API
                members:
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        description: Group member's email address.
                        type: string
                        format: email
                        example: john.doe@smartsheet.com
      responses:
        '200':
          description: >
            Result object, containing a [Group
            object](../../tag/groupsObjects#section/Group-Object) for the newly
            created group
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1groups/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        '400':
          $ref: '#/paths/~1events/get/responses/400'
        '401':
          $ref: '#/paths/~1contacts/get/responses/401'
        '500':
          $ref: '#/paths/~1contacts/get/responses/500'
  /groups/{groupId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - name: groupId
        description: Group Id
        in: path
        required: true
        schema:
          type: number
    get:
      operationId: get-group
      summary: Get Group
      description: >-
        Gets information about an array of [Group
        Members](../../tag/groupMembersObjects#section/Group-Member-Object) for
        the group specified in the URL.
      tags:
        - groups
      security:
        - APIToken: []
        - OAuth2:
            - READ_USERS
      responses:
        '200':
          description: >
            [Group](/section/Group-Object) object that includes the list of
            [GroupMember](../../tag/groupMembersObjects#section/Group-Member-Object)
            objects
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1groups/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                  - type: object
                    properties:
                      members:
                        description: List of Group Members
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: Group member's user Id.
                              type: number
                              example: 2331373580117892
                            email:
                              description: Group member's email address.
                              type: string
                              format: email
                              example: john.doe@smartsheet.com
                            firstName:
                              description: Group member's first name.
                              type: string
                              example: John
                            lastName:
                              description: Group member's last name.
                              type: string
                              example: Doe
                            name:
                              description: Group member's full name.
                              type: string
                              example: John Doe
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    put:
      operationId: update-group
      summary: Update Group
      description: >
        Updates the Group specified in the URL.


        **_This operation is only available to group administrators and system
        administrators._**
      tags:
        - groups
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      requestBody:
        description: >
          Group object, limited to the following attributes:

          * description (optional)

          * name (optional) -- must be unique within the organization account

          * ownerId (optional): Id of an admin user to whom the group ownership
          is transferred
        content:
          application/json:
            schema:
              description: >-
                Updates group properties, including name, description, and
                owner.
              type: object
              properties:
                name:
                  description: |
                    name (Optional)

                    Must be unique within the organization account.
                  type: string
                  example: Renamed group
                description:
                  description: Description (optional).
                  type: string
                  example: Some new description
                ownerId:
                  description: >
                    ownerId (optional)


                    Id of an admin user to whom the group ownership is
                    transferred.
                  type: number
                  example: 94094820842
      responses:
        '200':
          description: >-
            Result object containing the [Group
            object](../../tag/groupsObjects#section/Group-Object) for the
            updated group
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1groups~1%7BgroupId%7D/get/responses/200/content/application~1json/schema/allOf/0
        '400':
          $ref: '#/paths/~1events/get/responses/400'
        '500':
          $ref: '#/paths/~1contacts/get/responses/500'
    delete:
      operationId: delete-group
      summary: Delete Group
      description: >
        Deletes the group specified in the URL.


        **_This operation is only available to group administrators and system
        administrators._**
      tags:
        - groups
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      responses:
        '200':
          description: >
            **_This operation is asynchronous,_** _meaning group members may
            retain their sharing access for a brief period of time after the
            call returns. For small groups with limited sharing, the operation
            should complete quickly (within a few seconds). For large groups
            with many shares, this operation could possibly take more than a
            minute to complete._
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1groups~1%7BgroupId%7D/put/responses/200/content/application~1json/schema/allOf/0
        '401':
          $ref: '#/paths/~1contacts/get/responses/401'
        '404':
          $ref: '#/paths/~1contacts/get/responses/404'
  /groups/{groupId}/members:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1groups~1%7BgroupId%7D/parameters/1'
    post:
      operationId: add-group-members
      summary: Add Group Members
      description: >
        Adds one or more members to a group.


        **_This operation supports both single-object and bulk semantics. For
        more information, see Optional Bulk Operations._**


        If called with a single [GroupMember
        object](../../tag/groupMembersObjects), and that group member already
        exists, error code **1129** is returned.

        If called with an array of [GroupMember
        objects](../../tag/groupMembersObjects), any users specified in the
        array that are already group members are ignored and omitted from the
        response.


        **_This operation is only available to group administrators and system
        administrators._**
      tags:
        - groupMembers
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1groups~1%7BgroupId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/members/items
                - type: array
                  items:
                    $ref: >-
                      #/paths/~1groups~1%7BgroupId%7D~1members/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >
            Returns a Result object containing the members added to the group --
            either a single [GroupMember](/section/Group-Member-Object) or array
            of [GroupMember](/section/Group-Member-Object) objects,
            corresponding to what was specified in the request.


            **_This operation is asynchronous,_** _meaning the users may not yet
            have sharing access to sheets for a period of time after this
            operation returns. For small groups with limited sharing, the
            operation should complete quickly (within a few seconds). For large
            groups with many shares, this operation could possibly take more
            than a minute to complete._
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1groups~1%7BgroupId%7D~1members/post/requestBody/content/application~1json/schema/oneOf/0
                          - type: array
                            items:
                              $ref: >-
                                #/paths/~1groups~1%7BgroupId%7D~1members/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: >
            If an error occurs because the request specified one or more
            alternate email addresses, please retry using the primary email
            address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /groups/{groupId}/members/{userId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1groups~1%7BgroupId%7D/parameters/1'
      - name: userId
        description: User Id
        in: path
        required: true
        schema:
          type: number
    delete:
      operationId: delete-group-members
      summary: Delete Group Members
      description: >
        Removes a member from a group.


        **_This operation is only available to group administrators and system
        administrators._**
      tags:
        - groupMembers
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      responses:
        '200':
          description: >
            **_This operation is asynchronous,_** _meaning the users may not yet
            have sharing access to sheets for a period of time after this
            operation returns. For small groups with limited sharing, the
            operation should complete quickly (within a few seconds). For large
            groups with many shares, this operation could possibly take more
            than a minute to complete._
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /home/folders:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Folders in Home
      description: >-
        Gets a list of folders in your Home tab. The list contains an
        abbreviated Folder object for each folder.
      tags:
        - home
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      operationId: home-list-folders
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: IndexResult object containing an array of Folder objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/Folder/properties/folders/items'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      summary: Create Folder
      description: |
        Creates a new folder.
      operationId: create-home-folder
      tags:
        - home
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        description: Folder to create.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1home~1folders/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items
      responses:
        '200':
          description: Result object containing a Folder object for newly created folder.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1home~1folders/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1home~1folders/get/responses/default/content/application~1json/schema
  /imageurls:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1favorites/post/parameters/0'
    post:
      operationId: listImageUrls
      summary: List Image URLs
      description: >-
        Posts an array of Image Url objects that can be used to retrieve the
        specified cell images.
      tags:
        - cellImages
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - $ref: >-
                      #/components/schemas/ImageUrlMap/properties/imageUrls/items
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      imageUrls:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/ImageUrlMap/properties/imageUrls/items
                      urlExpiresInMillis:
                        description: Milliseconds before the URLs within imageUrls expire.
                        type: number
  /reports:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      operationId: getReports
      summary: Get Reports
      description: Gets a list of all Reports that the user has access to.
      tags:
        - reports
      security:
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/1'
      responses:
        '200':
          description: >
            IndexResult object containing an array of Report objects with a
            subset of attributes
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: >-
                          List of Report Objects limited to the properties, id,
                          accessLevel, name, and permalink.
                        type: array
                        items:
                          $ref: '#/components/schemas/Folder/properties/reports/items'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /reports/{reportId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - name: Accept
        in: header
        description: >-
          The Accept request-header field can be used to specify certain media
          types which are acceptable for the response.
        schema:
          type: string
        required: false
      - name: accessApiLevel
        in: query
        required: false
        description: >
          Allows COMMENTER access for inputs and return values. For
          backwards-compatibility, VIEWER is the default. For example, to see
          whether a user has COMMENTER access for a sheet, use accessApiLevel=1.
        schema:
          type: number
          default: 0
      - name: reportId
        in: path
        schema:
          type: number
        required: true
        description: reportID of the report being accessed.
    get:
      summary: Get Report
      description: Gets a report based on the specified ID
      operationId: getReport
      parameters:
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to include in the
            response:
              * **attachments**
              * **discussions**
              * **proofs**
              * **format**
              * **objectValue** - when used in combination with a level query parameter,
            includes the email addresses for multi-contact data
              * **scope** - adds the report's scope to the response
              * **source** - adds the Source object indicating which report the report
            was created from, if any
              * **sourceSheets**
          schema:
            type: string
            enum:
              - attachments
              - discussions
              - proofs
              - format
              - objectValue
              - scope
              - source
              - sourceSheets
        - name: exclude
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to not include in the
            response
          schema:
            type: string
            enum:
              - linkInFromCellDetails
              - linksOutToCellsDetails
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - name: level
          in: query
          required: false
          description: >-
            specifies whether new functionality, such as multi-contact data is
            returned in a backwards-compatible, text format (level=0, default),
            multi-contact data (level=1), or multi-picklist data (level=3).
          schema:
            type: integer
            default: 0
      tags:
        - reports
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: The Report that was loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder/properties/reports/items'
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
                description: The Report in Excel format
            text/csv:
              schema:
                type: string
                format: binary
                description: The Report in CSV format
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /reports/{reportId}/emails:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/3'
    post:
      summary: Send report via email
      description: >-
        Sends the report as a PDF attachment via email to the designated
        recipients
      operationId: sendReportViaEmail
      tags:
        - reports
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ProofRequestBody/allOf/0'
              type: object
              properties:
                format:
                  description: >
                    One of the following values: **EXCEL**, **PDF**, or
                    **PDF_GANTT**.
                  type: string
                formatDetails:
                  $ref: '#/components/schemas/SheetEmail/properties/formatDetails'
      responses:
        '200':
          description: Result Object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /reports/{reportId}/publish:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/3'
    get:
      summary: Gets a Report's publish settings
      description: Get a Report's publish settings based on the specified ID
      operationId: getReportPublish
      tags:
        - reports
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: The Report's publish settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  readOnlyFullAccessibleBy:
                    description: >
                      Indicates who can access the 'Read-Only Full' view of the
                      published report:

                      * If **ALL**, it is available to anyone who has the link.

                      * If **ORG**, it is available only to members of the
                      report owner's Smartsheet organization account.

                      * If **SHARED**, it is available only to users shared to
                      the item.


                      Only returned in a response if **readOnlyFullEnabled** =
                      **true**.
                    type: string
                  readOnlyFullDefaultView:
                    description: >
                      Indicates which view the user has set for a read-only,
                      default view of the published report. Must be one of

                      the following values: **CALENDAR**, **CARD**, or **GRID**.
                    type: string
                  readOnlyFullEnabled:
                    description: >
                      (Required) If **true**, a rich version of the report is
                      published with the ability to download row

                      attachments and discussions.
                    type: boolean
                  readOnlyFullShowToolbar:
                    deprecated: true
                    description: >
                      Indicates whether the left nav toolbar is displayed. The
                      default, or **true**, is to display the toolbar.

                      If **false**, hides the toolbar.
                    type: boolean
                  readOnlyFullUrl:
                    description: >
                      URL for 'Read-Only Full' view of the published report.


                      Only returned in a response if **readOnlyFullEnabled** =
                      **true**.
                    type: string
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    put:
      summary: Set a Report's publish status
      description: >-
        Sets the publish status of the report and returns the new status,
        including the URL of any enabled publishing.
      operationId: SetReportPublish
      tags:
        - reports
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1reports~1%7BreportId%7D~1publish/get/responses/200/content/application~1json/schema
      responses:
        '200':
          description: ReportPublish object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    allOf:
                      - type: object
                        properties:
                          message:
                            description: >-
                              Message that indicates the outcome of the request.
                              (One of SUCCESS or PARTIAL_SUCCESS.)
                            type: string
                            enum:
                              - PARTIAL_SUCCESS
                              - SUCCESS
                            example: SUCCESS
                          resultCode:
                            description: |-
                              * '0' Success
                              * '3' Partial Success of Bulk Operation
                            type: number
                            enum:
                              - 0
                              - 3
                    properties:
                      failedItems:
                        description: >-
                          Array of BulkItemFailure objects which represents the
                          items that failed to be added or updated. See [Partial
                          Success](/partial-success) for more information.
                          Applicable only for bulk operations that support
                          partial success.
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Result/allOf/0/properties/failedItems/items
                        nullable: true
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1reports~1%7BreportId%7D~1publish/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1reports~1%7BreportId%7D~1publish/get/responses/default/content/application~1json/schema
  /reports/{reportId}/shares:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/3'
    post:
      summary: Share Report
      description: Shares a Report with the specified users and groups.
      operationId: share-report
      tags:
        - sharing
        - reports
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SHEETS
      parameters:
        - name: sendEmail
          in: query
          description: >-
            Either true or false to indicate whether to notify the user by
            email. Default is false. If true, limit is 1000 emails.
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    id:
                      description: >
                        Share Id.


                        **NOTE**: unlike other Smartsheet object Ids, this Id is
                        an alphanumeric string.
                      type: string
                    groupId:
                      description: Group Id if the share is a group share, else null.
                      type: number
                    userId:
                      description: User Id if the share is a user share, else null.
                      type: number
                    type:
                      description: >
                        The type of this share. One of the following values:
                        GROUP or USER.
                      type: string
                    accessLevel:
                      $ref: '#/components/schemas/Discussion/properties/accessLevel'
                    ccMe:
                      description: >
                        Indicates whether to send a copy of the email to the
                        sharer of the sheet. You can specify this attribute

                        in a request, but it is never present in a response.
                      type: boolean
                    createdAt:
                      $ref: '#/components/schemas/Attachment/properties/createdAt'
                    email:
                      description: >-
                        User's primary email address for user shares; null for
                        group shares.
                      type: string
                    message:
                      description: >
                        The message included in the body of the email that is
                        optionally sent to the recipient. You can specify

                        this attribute in a request, but it is never present in
                        a response.
                      type: string
                    modifiedAt:
                      $ref: '#/components/schemas/Attachment/properties/createdAt'
                    name:
                      description: >-
                        If a user share and user is also a contact, the user's
                        full name. If a group share, the group's name.
                      type: string
                    scope:
                      description: |
                        The scope of this share. One of the following values:
                          * **ITEM**: an item-level share (that is, the specific object
                        to which the share applies is shared with
                            the user or group).
                          * **WORKSPACE**: a workspace-level share (that is, the workspace
                        that contains the object to which the
                            share applies is shared with the user or group).
                      type: string
                    subject:
                      description: >
                        The subject of the email that is optionally sent to
                        notify the recipient. You can specify this attribute

                        in a request, but it is never present in a response.
                      type: string
                - type: array
                  items:
                    $ref: >-
                      #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >
            Result object containing either a single Share object or an array of
            Share objects, corresponding

            to what was specified in the request. All shares have scope=ITEM.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
                          - type: array
                            items:
                              $ref: >-
                                #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        '400':
          description: >
            If called with a single Share object, and that user or group share
            already exists, error code 1025 is returned.

            If called with an array of Share objects, and one or more user or
            group shares in the array already exist,

            they are ignored and omitted from the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1reports~1%7BreportId%7D~1shares/post/responses/400/content/application~1json/schema
    get:
      summary: List Report Shares
      description: >
        Gets a list of all users and groups to whom the specified Report is
        shared, and their access level.

        This operation supports query string parameters for pagination of
        results.
      operationId: list-report-shares
      tags:
        - sharing
        - reports
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - name: sharingInclude
          in: query
          description: >-
            When applicable for the specific object this parameter defines the
            scope of the share. Possible values are ITEM or WORKSPACE. ITEM is
            an item-level share (that is, the specific object to which the share
            applies is shared with the user or group). WORKSPACE is a
            workspace-level share (that is, the workspace that contains the
            object to which the share applies is shared with the user or group).
          required: false
          schema:
            type: string
            enum:
              - ITEM
              - WORKSPACE
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: >-
            IndexResult object containing an array of Share objects. By default,
            this operation returns only item-level shares (scope=ITEM). Use the
            sharingInclude parameter to request that workspace-level shares
            (include=workspaceShares) also be returned.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1reports~1%7BreportId%7D~1shares/post/responses/400/content/application~1json/schema
  /reports/{reportId}/shares/{shareId}:
    parameters:
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/3'
      - name: shareId
        in: path
        schema:
          type: string
        required: true
        description: Share Id.
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Report Share
      description: Gets the share specified in the URL.
      operationId: share-report-get
      tags:
        - sharing
        - reports
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: Returns Share object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      summary: Delete Report Share
      description: Deletes the share specified in the URL.
      operationId: delete-report-share
      tags:
        - sharing
        - reports
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SHEETS
      responses:
        '200':
          description: Returns Result object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1reports~1%7BreportId%7D~1shares~1%7BshareId%7D/get/responses/default/content/application~1json/schema
    put:
      summary: Update Report Share
      description: Updates the access level of a user or group for the specified report.
      operationId: update-report-share
      tags:
        - sharing
        - reports
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SHEETS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessLevel:
                  $ref: '#/components/schemas/Discussion/properties/accessLevel'
      responses:
        '200':
          description: Result object containing the modified Share object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1reports~1%7BreportId%7D~1shares~1%7BshareId%7D/delete/responses/200/content/application~1json/schema
                  - type: object
                    properties:
                      result:
                        type: object
                        items:
                          $ref: >-
                            #/paths/~1reports~1%7BreportId%7D~1shares~1%7BshareId%7D/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1reports~1%7BreportId%7D~1shares~1%7BshareId%7D/get/responses/default/content/application~1json/schema
  /search:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Search Everything
      description: >-
        Searches all sheets that the user can access, for the specified text. If
        you have not used the public API in a while, we will need to provision
        your data. This could take up to 24 hours so please check back later!
      tags:
        - search
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      operationId: list-search
      parameters:
        - name: query
          in: query
          required: true
          description: >-
            Text with which to perform the search. Enclose in double-quotes for
            an exact search.
          schema:
            type: string
        - name: location
          in: query
          required: false
          description: >
            **Deprecated** When specified with a value of **personalWorkspace**,
            limits the response to only those items in the user's workspaces.
          schema:
            type: string
            default: ''
          deprecated: true
        - $ref: '#/paths/~1contacts/get/parameters/1'
        - name: include
          in: query
          required: false
          description: >
            When specified with a value of **favoriteFlag**, response indicates
            which returned items are favorites.  favorite -- dashboards,
            folders, reports, sheets, templates, and workspaces will have the
            property favorite: true parentObjectFavorite -- attachments,
            discussions, summary fields, and rows will have the property
            parentObjectFavorite: true
          schema:
            type: string
            default: ''
        - name: scopes
          in: query
          required: false
          description: >-
            If search fails, try using an array for each type of this
            comma-separated list of search filters.
          schema:
            type: array
            items:
              type: string
              enum:
                - attachments
                - cellData
                - comments
                - folderNames
                - reportNames
                - sheetNames
                - sightNames
                - summaryFields
                - templateNames
                - workspaceNames
      responses:
        '200':
          description: >-
            SearchResult object that contains an array of Search objects
            (maximum 100).
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        description: Array of SearchResultItem objects.
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/SearchResult/properties/results/items
                      totalCount:
                        description: Total number of search results.
                        type: number
                  - type: object
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /search/sheets/{sheetId}:
    parameters:
      - name: sheetId
        in: path
        schema:
          type: number
        required: true
        description: Sheet Id of the sheet being accessed.
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Search Sheet
      description: >-
        Gets a list of the user's search results in a sheet based on query. The
        list contains an abbreviated row object for each search result in a
        sheet. If you have not used the public API in a while, we will need to
        provision your data. This could take up to 24 hours so please check back
        later! *Note* Newly created or recently updated data may not be
        immediately discoverable via search.
      tags:
        - search
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      operationId: list-search-sheet
      parameters:
        - name: query
          in: query
          required: true
          description: >-
            Text with which to perform the search. Enclose in double-quotes for
            an exact search.
          schema:
            type: string
      responses:
        '200':
          description: >-
            SearchResult object containing an array of SearchResultItem objects
            in a sheet (maximum 100)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1search/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/SearchResult/properties/results/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /serverinfo:
    get:
      summary: Gets application constants.
      description: Gets application constants.
      operationId: serverinfo-get
      tags:
        - serverInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  formats:
                    $ref: '#/components/schemas/ServerInfo/properties/formats'
                  supportedLocales:
                    description: >-
                      Array of strings representing all Smartsheet-supported
                      locales.
                    type: array
                    items:
                      type: string
  /sheets:
    parameters:
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Sheets
      description: >
        Gets a list of all sheets that the user has access to. The list contains
        an abbreviated Sheet object for each sheet.
      operationId: list-sheets
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to include in the
            response:

            * **sheetVersion** - current version number of each sheet, should
            not be combined with pagination

            * **source** - the Source object for any sheet that was created from
            another sheet, if any
          schema:
            type: string
            enum:
              - sheetVersion
              - source
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/1'
        - $ref: '#/paths/~1contacts/get/parameters/2'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              $ref: >-
                                #/components/schemas/Folder/properties/sheets/items/properties/id
                            accessLevel:
                              $ref: >-
                                #/components/schemas/Folder/properties/sheets/items/properties/accessLevel
                            createdAt:
                              $ref: >-
                                #/components/schemas/Folder/properties/sheets/items/properties/createdAt
                            modifiedAt:
                              $ref: >-
                                #/components/schemas/Folder/properties/sheets/items/properties/modifiedAt
                            name:
                              $ref: >-
                                #/components/schemas/Folder/properties/sheets/items/properties/name
                            permalink:
                              $ref: >-
                                #/components/schemas/Folder/properties/sheets/items/properties/permalink
                            version:
                              $ref: >-
                                #/components/schemas/Folder/properties/sheets/items/properties/version
                            source:
                              $ref: >-
                                #/components/schemas/Folder/properties/sheets/items/properties/source
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      summary: Create Sheet in "Sheets" Folder
      description: >
        Creates a sheet from scratch or from the specified template in the
        user's Sheets folder (Home).

        For subfolders, use Create Sheet in Folder.
      operationId: create-sheet-in-sheets-folder
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets/post/parameters/1'
      requestBody:
        description: Sheet to create.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1folders~1%7BfolderId%7D~1sheets/post/requestBody/content/application~1json/schema/oneOf/0
                - $ref: >-
                    #/paths/~1folders~1%7BfolderId%7D~1sheets/post/requestBody/content/application~1json/schema/oneOf/1
      responses:
        '200':
          description: >-
            Result object containing a Sheet object for newly created sheet,
            corresponding to what was specified in the request.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1folders~1%7BfolderId%7D~1sheets/post/responses/200/content/application~1json/schema/allOf/1/properties/result/oneOf/0
                          - $ref: >-
                              #/paths/~1folders~1%7BfolderId%7D~1sheets/post/responses/200/content/application~1json/schema/allOf/1/properties/result/oneOf/1
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets/get/responses/default/content/application~1json/schema
  /sheets/import:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Import Sheet from CSV / XLSX
      description: >
        Imports CSV or XLSX data into a new sheet in the top-level "Sheets"
        folder.


        Note the following:

        * Both sheetName and the file name must use ASCII characters.

        * The source data must be basic text. To include rich formula data,
        import and create a sheet first, and then use Update Rows. To work with
        images, see Cell Images.

        * XLS is not supported. You must use XLSX.

        * Hierarchical relationships between rows in an external file won't
        import.
      operationId: import-sheet-into-sheets-folder
      tags:
        - import
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SHEETS
      parameters:
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/0'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/1'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/2'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/3'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/4'
      requestBody:
        description: Binary content for the CSV / XLSX file.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Result object containing a Sheet object for imported sheet.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/responses/200/content/application~1json/schema/allOf/1/properties/result
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sheets/{sheetId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
    get:
      summary: Get Sheet
      description: Gets a sheet in the format specified, based on the sheet Id.
      operationId: getSheet
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/1'
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to include in the
            response:
              * **attachments** - includes the metadata for sheet-level and row-level
            attachments. To include discussion attachments, both attachments and
            discussions must be present in the include list.
              * **columnType** -includes columnType attribute in the row's cells indicating
            the type of the column the cell resides in.
              * **crossSheetReferences** - includes the cross-sheet references
              * **discussions** - includes sheet-level and row-level discussions. To
            include discussion attachments, both attachments and discussions
            must be present in the include list.
              * **filters** - includes filteredOut attribute indicating if the row should
            be displayed or hidden according to the sheet's filters.
              * **filterDefinitions** - includes type of filter, operators used, and
            criteria
              * **format** -  includes column, row, cell, and summary fields formatting.
              * **ganttConfig** - includes Gantt chart details.
              * **objectValue** - when used in combination with a level query parameter,
            includes the email addresses for multi-contact data.
              * **ownerInfo** - includes the owner's email address and the owner's user
            Id.
              * **rowPermalink** - includes permalink attribute that represents a direct
            link to the row in the Smartsheet application.
              * **source** - adds the Source object indicating which report, sheet  Sight
            (aka dashboard), or template the sheet was created from, if any.
              * **writerInfo** - includes createdBy and modifiedBy attributes on the
            row or summary fields, indicating the row or summary field's
            creator, and last modifier.
          schema:
            type: string
            enum:
              - attachments
              - columnType
              - crossSheetReferences
              - discussions
              - filters
              - filterDefinitions
              - format
              - ganttConfig
              - objectValue
              - ownerInfo
              - rowPermalink
              - source
              - writerInfo
        - name: exclude
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to not include in the
            response:
              * **filteredOutRows** - excludes filtered out rows from response payload
            if a sheet filter is applied; includes total number of filtered rows
              * **linkInFromCellDetails** - excludes the following attributes from the
            **cell.linkInFromCell** object: columnId, rowId, status
              * **linksOutToCellsDetails** - excludes the following attributes from
            the **cell.linksOutToCells** array elements: columnId, rowId, status
              * **nonexistentCells** - excludes cells that have never contained any
            data
          schema:
            type: string
            enum:
              - filteredOutRows
              - linkInFromCellDetails
              - linksOutToCellsDetails
              - nonexistentCells
        - name: columnIds
          in: query
          required: false
          description: >
            A comma-separated list of column ids. The response contains only the
            specified columns in the "columns" array, and individual rows'
            "cells" array only contains cells in the specified columns.
          schema:
            type: string
        - name: filterId
          in: query
          required: false
          description: >
            Overrides the existing include={filters} parameter if both are
            supplied. Applies the given filter (if accessible by the calling
            user) and marks the affected rows as "filteredOut": true.
          schema:
            type: string
        - name: ifVersionAfter
          in: query
          required: false
          description: >
            If version specified is still the current sheet version, then
            returns an abbreviated Sheet object with only the sheet version
            property. Otherwise, if the sheet has been modified, returns the
            complete Sheet object. Intended to allow clients with a cached copy
            to make sure they have the latest version.
          schema:
            type: integer
        - name: level
          in: query
          required: false
          description: >-
            Specifies whether new functionality, such as multi-contact data is
            returned in a backwards-compatible, text format (level=0, default),
            multi-contact data (level=1), or multi-picklist data (level=2).
          schema:
            type: integer
            default: 1
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - name: paperSize
          in: query
          required: false
          description: applies to PDF format only
          schema:
            type: string
            enum:
              - LETTER
              - LEGAL
              - WIDE
              - ARCHD
              - A4
              - A3
              - A2
              - A1
              - A0
            default: LETTER
        - name: rowIds
          in: query
          required: false
          description: >
            A comma-separated list of row Ids on which to filter the rows
            included in the result.
          schema:
            type: string
        - name: rowNumbers
          in: query
          required: false
          description: >
            A comma-separated list of row numbers on which to filter the rows
            included in the result. Non-existent row numbers are ignored.
          schema:
            type: string
        - name: rowsModifiedSince
          in: query
          required: false
          description: >-
            Filter to return only rows that have been modified since the
            date/time provided. Date should be in ISO-8601 format.
          example: '2020-01-30T13:25:32-07:00'
          schema:
            $ref: '#/components/schemas/Attachment/properties/createdAt'
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: The Sheet that was loaded.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Folder/properties/sheets/items'
                  - type: object
                    properties:
                      version:
                        description: A number that represents the current sheet version.
                        type: number
            application/pdf:
              schema:
                type: string
                format: binary
                description: The Sheet in PDF format.
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
                description: The Sheet in Excel format.
            text/csv:
              schema:
                type: string
                format: binary
                description: The Sheet in CSV format.
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      summary: Delete Sheet
      description: Deletes the sheet specified in the URL.
      operationId: deleteSheet
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - DELETE_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Message that indicates the request was successful.
                    type: string
                    enum:
                      - SUCCESS
                    example: SUCCESS
                  resultCode:
                    description: '* ''0'' Success'
                    type: number
                    enum:
                      - 0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D/get/responses/default/content/application~1json/schema
    put:
      summary: Update Sheet
      description: >-
        Updates the sheet specified in the URL.

        To modify sheet contents, see [Add
        Rows](../../tag/rows#operation/rows-addToSheet), [Update
        Rows](../../tag/rows#operation/update-rows), [Add
        Columns](../../tag/columns#operation/columns-addToSheet), and [Update
        Column](../../tag/columns#operation/column-updateColumn).

        This operation can be used to update an individual user's sheet
        settings. If the request body contains only the **userSettings**
        attribute, this operation may be performed even if the user only has
        read-only access to the sheet (for example, the user has viewer
        permissions or the sheet is read-only).
      operationId: updateSheet
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
      requestBody:
        description: >
          [Sheet object](../../tag/sheetsObjects#section/Sheet-Object) limited
          to the following attributes:

          * **name** (optional).

          * **projectSettings** (optional): [ProjectSettings
          object](../../tag/sheetsObjects#section/ProjectSettings-Object),
          containing at least one of the **projectSettings** attributes, for
          updating this sheet's project settings and dependencies.

          * **userSettings** (optional): [SheetUserSettings
          object](../../tag/sheetsObjects#section/SheetUserSettings-Object) for
          updating these user's settings for the sheet.

          NOTE:

          * Attributes not specified in **projectSettings** are not updated.

          * If **projectSettings.nonWorkingDays** is specified as an empty
          array, all non-working days are removed from the project sheet.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Sheet name.
                  type: string
                projectSettings:
                  $ref: '#/components/schemas/Sheet/properties/projectSettings'
                userSettings:
                  $ref: '#/components/schemas/Sheet/properties/userSettings'
      responses:
        '200':
          description: >-
            Returns [Result
            object](../../tag/commonObjects#section/Result-Object) containing a
            [Sheet object](../../tag/sheetsObjects#section/Sheet-Object) for the
            updated sheet.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D/get/responses/200/content/application~1json/schema/oneOf/0
  /sheets/{sheetId}/attachments:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Attachments
      description: >
        Gets a list of all attachments that are on the sheet, including sheet,
        row, and discussion-level attachments.
      operationId: attachments-listOnSheet
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of attachments
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Comment/properties/attachments/items
    post:
      summary: Attach File or URL to Sheet
      description: |
        Attaches a file to the sheet. The URL can be any of the following:

        * Normal URL (attachmentType "LINK")
        * Box.com URL (attachmentType "BOX_COM")
        * Dropbox URL (attachmentType "DROPBOX")
        * Egnyte URL (attachmentType "EGNYTE")
        * Evernote URL (attachmentType "EVERNOTE")
        * Google Drive URL (attachmentType "GOOGLE_DRIVE")
        * OneDrive URL (attachmentType "ONEDRIVE")

        For multipart uploads please use "multipart/form-data" content type.
      operationId: attachments-attachToSheet
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                filename:
                  type: string
                  format: binary
          application/json:
            schema:
              type: object
              properties:
                attachmentSubType:
                  description: >-
                    Attachment sub type. Note--Folder type is for EGNYTE values
                    and the rest are GOOGLE_DRIVE values.
                  type: string
                  enum:
                    - DOCUMENT
                    - DRAWING
                    - FOLDER
                    - PDF
                    - PRESENTATION
                    - SPREADSHEET
                attachmentType:
                  description: >-
                    Attachment type. Note--Dropbox, Egnyte, and Evernote are not
                    supported for Smartsheet.gov accounts.
                  type: string
                  enum:
                    - BOX_COM
                    - DROPBOX
                    - EGNYTE
                    - EVERNOTE
                    - FILE
                    - GOOGLE_DRIVE
                    - LINK
                    - ONEDRIVE
                    - TRELLO
                description:
                  type: string
                name:
                  type: string
                url:
                  type: string
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1attachments/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/attachments/{attachmentId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: attachmentId
        in: path
        required: true
        description: ID of the attachment
        schema:
          type: string
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Attachment
      description: >
        Fetches a temporary URL that allows you to download an attachment. The
        urlExpiresInMillis attribute tells you how long the URL is valid.
      operationId: attachments-get
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Comment/properties/attachments/items'
    delete:
      summary: Delete Attachment
      description: |
        Deletes the attachment specified in the URL.
      operationId: attachments-delete
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
  /sheets/{sheetId}/attachments/{attachmentId}/versions:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: >-
          #/paths/~1sheets~1%7BsheetId%7D~1attachments~1%7BattachmentId%7D/parameters/1
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Versions
      description: >
        Gets a list of all versions of the given attachmentId in order from
        newest to oldest.
      operationId: attachments-versionList
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of attachments
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Comment/properties/attachments/items
    post:
      summary: Attach New version
      description: >
        Uploads a new version of a file to a sheet or row. This operation can be
        performed using a simple upload or a multipart upload.
      operationId: attachments-versionUpload
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                filename:
                  type: string
                  format: binary
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1attachments~1%7BattachmentId%7D~1versions/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
    delete:
      summary: Delete All Versions
      description: >
        Deletes all versions of the attachment corresponding to the specified
        attachmentId. For attachments with

        multiple versions, this effectively deletes the attachment from the
        object that it’s attached to.
      operationId: attachments-versionsDelete
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1attachments~1%7BattachmentId%7D~1versions/post/responses/200/content/application~1json/schema/allOf/0
  /sheets/{sheetId}/automationrules:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      operationId: automationrules-list
      summary: List All Automation Rules
      description: >
        Returns all automation rules associated with the specified sheet.


        Multistep workflows are not returned via the API.

        Instead, you'll see an error 400 - 1266: This rule is not accessible
        through the API.

        Only single-action notifications, approval requests, or update requests
        qualify.


        For users of Smartsheet for Slack, note that Slack notifications are not
        returned.
      tags:
        - automationRules
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: The list of AutomationRule objects
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of Automation Rules
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: AutomationRule Id.
                              type: number
                            action:
                              description: >-
                                An [AutomationAction
                                object](#section/AutomationAction-Object)
                                containing information for this rule, such as
                                type, recipients, and frequency.
                            createdAt:
                              description: >-
                                A timestamp of when the rule was originally
                                added.
                              allOf:
                                - $ref: >-
                                    #/components/schemas/Attachment/properties/createdAt
                            createdBy:
                              description: >
                                `User` object containing `name` and `email` of
                                the creator of this rule.
                              allOf:
                                - $ref: >-
                                    #/components/schemas/Attachment/properties/createdBy/allOf/0
                            disabledReason:
                              description: >
                                Machine-readable reason a rule is disabled:

                                * `APPROVAL_COLUMN_MISSING` This rule's approval
                                status column has been deleted.


                                * `APPROVAL_COLUMN_WRONG_TYPE` The approval
                                column must be a dropdown column.


                                * `AUTOMATION_NOT_ENABLED_FOR_ORG` To create or
                                edit automated actions,

                                you need to upgrade your organization account to
                                a Business or Enterprise plan.


                                * `COLUMN_MISSING` A column referenced by this
                                rule has been deleted.


                                * `COLUMN_TYPE_INCOMPATIBLE` A column referenced
                                by this rule has been changed to an incompatible
                                column type.


                                * `NO_POTENTIAL_RECIPIENTS` This rule has no
                                recipients that will be able to receive

                                notifications based on this sheet's permission
                                settings or this account's approved domain
                                sharing list.


                                * `NO_VALID_SELECTED_COLUMNS` All selected
                                columns for this rule have been deleted.
                              type: string
                              enum:
                                - APPROVAL_COLUMN_MISSING
                                - APPROVAL_COLUMN_WRONG_TYPE
                                - AUTOMATION_NOT_ENABLED_FOR_ORG
                                - COLUMN_MISSING
                                - COLUMN_TYPE_INCOMPATIBLE
                                - NO_POTENTIAL_RECIPIENTS
                                - NO_VALID_SELECTED_COLUMNS
                            disabledReasonText:
                              description: Descriptive reason a rule is disabled.
                              type: string
                            enabled:
                              description: If true, indicates that the rule is active.
                              type: boolean
                            modifiedAt:
                              description: >-
                                The datetime for when the change was made to the
                                rule.
                              allOf:
                                - $ref: >-
                                    #/components/schemas/Attachment/properties/createdAt
                            modifiedBy:
                              description: >
                                `User` object containing the `name` and `email`
                                of the user that made the change.
                              allOf:
                                - $ref: >-
                                    #/components/schemas/Attachment/properties/createdBy/allOf/0
                            name:
                              description: Rule name as shown in the UI.
                              type: string
                            userCanModify:
                              description: >-
                                If true, indicates that the current user can
                                modify the rule.
                              type: boolean
  /sheets/{sheetId}/automationrules/{automationRuleId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: automationRuleId
        in: path
        required: true
        description: The Id of an Automation Rule
        schema:
          type: string
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get an Automation Rule
      description: |
        Returns the specified automation rule, including any action values.
      operationId: automationrule-get
      tags:
        - automationRules
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: AutomationRule object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1automationrules/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
    put:
      summary: Update an Automation Rule
      description: >
        Updates an existing automation rule.


        When sending an AutomationRule, you must always specify **action.type**
        and it must match the existing rule type.
      operationId: automationrule-update
      tags:
        - automationRules
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1automationrules~1%7BautomationRuleId%7D/get/responses/200/content/application~1json/schema/allOf/0
      responses:
        '200':
          description: Result object containing the updated AutomationRule object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1automationrules~1%7BautomationRuleId%7D/get/responses/200/content/application~1json/schema/allOf/0
    delete:
      summary: Delete an Automation Rule
      description: |
        Deletes an automation rule.
      operationId: automationrule-delete
      tags:
        - automationRules
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      responses:
        '200':
          description: Result object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1automationrules~1%7BautomationRuleId%7D/put/responses/200/content/application~1json/schema/allOf/0
  /sheets/{sheetId}/columns:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Columns
      description: Gets a list of all columns belonging to the sheet specified in the URL.
      operationId: columns-listOnSheet
      parameters:
        - name: level
          in: query
          required: false
          description: >-
            specifies whether multi-contact data is returned in a
            backwards-compatible, text format (level=0, default) or as
            multi-contact data (level=1).
          schema:
            type: integer
            default: 1
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      tags:
        - columns
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: >-
            Returns [IndexResult object]() containing an array of [Column
            objects]().
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: number
                              description: Column Id.
                            index:
                              type: number
                              description: >-
                                Column index or position. This number is
                                zero-based.
                            symbol:
                              type: string
                              description: >-
                                When applicable for **CHECKBOX** or **PICKLIST**
                                column types. See [Symbol
                                Columns](../../tag/columnsRelated#section/Column-Types/Symbol-Columns).
                            title:
                              type: string
                              description: Column title.
                            type:
                              type: string
                              enum:
                                - ABSTRACT_DATETIME
                                - CHECKBOX
                                - CONTACT_LIST
                                - DATE
                                - DATETIME
                                - DURATION
                                - MULTI_CONTACT_LIST
                                - MULTI_PICKLIST
                                - PICKLIST
                                - PREDECESSOR
                                - TEXT_NUMBER
                              description: >-
                                See [Column
                                Types](../../tag/columnsRelated#section/Column-Types)
                            validation:
                              type: boolean
                              description: >-
                                Indicates whether validation has been enabled
                                for the column (value = **true**).
    post:
      summary: Add Columns
      description: >-
        Inserts one or more columns into the sheet specified in the URL.This
        operation can be performed using a [simple
        upload](../../tag/attachmentsDescription#section/Post-an-Attachment/Simple-Uploads)
        or a [multipart
        upload](../../tag/attachmentsDescription#section/Post-an-Attachment/Multipart-Uploads).
        For more information, see [Post an
        Attachment](../../tag/attachmentsDescription#section/Post-an-Attachment).
      operationId: columns-addToSheet
      tags:
        - columns
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        description: >
          A [Column object]() that contains the following attributes
            * **title**
            * **type**
            * **formula** (optional)
            * **index** (zero-based)
            * **autoNumberFormat** (optional)
            * **description** (optional)
            * **locked**(optional)
            * **options** (optional)
            * **symbol** (optional)
            * **systemColumnType** (optional)
            * **validation** (optional)
            * **width** (optional)
           
           **NOTES:**
            * When setting a column type of PICKLIST or MULTI_PICKLIST, you must follow
          a one operation per API call rule. For these column types, you must
          set the column type first, and then add any additional constraints in
          a second call, such as setting *validation* to *true*.
            * When creating more than one column at a time, you cannot designate multiple
          index locations. Use one common index as the starting point. For
          example, designate the primary column as "1".
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Column title.
                type:
                  type: string
                  enum:
                    - ABSTRACT_DATETIME
                    - CHECKBOX
                    - CONTACT_LIST
                    - DATE
                    - DATETIME
                    - DURATION
                    - MULTI_CONTACT_LIST
                    - MULTI_PICKLIST
                    - PICKLIST
                    - PREDECESSOR
                    - TEXT_NUMBER
                formula:
                  type: string
                  description: >-
                    The formula for a column, if set, for instance
                    **=data@row**.
                hidden:
                  type: boolean
                  description: Indicates whether the column is hidden.
                index:
                  type: number
                  description: Column index or position. This number is zero-based.
                autoNumberFormat:
                  $ref: '#/components/schemas/Column/properties/autoNumberFormat'
                contactOptions:
                  $ref: '#/components/schemas/Column/properties/contactOptions/items'
                description:
                  type: string
                  description: Column description.
                format:
                  type: string
                  description: >-
                    The format descriptor (see
                    [Formatting](../#section/API-Basics/Formatting)). Only
                    returned if the **include** query string parameter contains
                    **format** and this column has a non-default format applied
                    to it.
                locked:
                  type: boolean
                  description: >-
                    Indicates whether the column is locked. In a response, a
                    value of **true** indicates that the column has been locked
                    by the sheet owner or the admin.
                lockedForUser:
                  type: boolean
                  description: >-
                    Indicates whether the column is locked for the requesting
                    user. This attribute may be present in a response, but
                    cannot be specified in a request.
                options:
                  type: array
                  items:
                    type: string
                    description: Array of the options available for the column.
                symbol:
                  type: string
                  description: >-
                    When applicable for **CHECKBOX** or **PICKLIST** column
                    types. See [Symbol
                    Columns](../../tag/columnsRelated#section/Column-Types/Symbol-Columns).
                systemColumnType:
                  type: string
                  enum:
                    - AUTO_NUMBER
                    - CREATED_BY
                    - CREATED_DATE
                    - MODIFIED_BY
                    - MODIFIED_DATE
                  description: >-
                    See [System
                    Columns](../../tag/columnsRelated#section/Column-Types)
                validation:
                  type: boolean
                  description: >-
                    Indicates whether validation has been enabled for the column
                    (value = **true**)
                version:
                  type: number
                  description: >
                    Read only. The level of the column type. Each element in the
                    array is set to one of the following values:
                     * **0**: TEXT_NUMBER, CONTACT_LIST, or PICKLIST
                     * **1**: MULTI_CONTACT_LIST
                     * **2**: MULTI_PICKLIST

                    See [Versioning and
                    Changes](#section/API-Basics/Versioning-and-Changes).
                width:
                  type: number
                  description: Display width of the column in pixels.
      responses:
        '200':
          description: >-
            Returns [Result
            object](../../tag/commonObjects#section/Result-Object) containing
            the newly created columns -- either a single [Column
            object](../../tag/columnsObjects#section/Column-Object) or an array
            of Column objects, corresponding to what was specified in the
            request.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: number
                              description: Column Id.
                            index:
                              type: number
                              description: >-
                                Column index or position. This number is
                                zero-based.
                            title:
                              type: string
                              description: Column title.
                            type:
                              type: string
                              enum:
                                - ABSTRACT_DATETIME
                                - CHECKBOX
                                - CONTACT_LIST
                                - DATE
                                - DATETIME
                                - DURATION
                                - MULTI_CONTACT_LIST
                                - MULTI_PICKLIST
                                - PICKLIST
                                - PREDECESSOR
                                - TEXT_NUMBER
                              description: >-
                                See [Column
                                Types](../../tag/columnsRelated#section/Column-Types)
                            options:
                              type: array
                              items:
                                type: string
                              description: Array of the options available for the column.
                            validation:
                              type: boolean
                              description: >-
                                Indicates whether validation has been enabled
                                for the column (value = **true**).
                            width:
                              type: number
                              description: Display width of the column in pixels.
  /sheets/{sheetId}/columns/{columnId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: columnId
        in: path
        schema:
          type: number
        required: true
        description: Column Id in the sheet being accessed.
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Column
      description: >-
        Gets definitions for the column specified in the URL. **NOTE:** If you
        need to see the values of individual cells within the column, use [Get
        Sheet](#operation/getSheet) or [Get Row](#operation/row-get).
      operationId: column-get
      parameters:
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D/get/parameters/7'
      tags:
        - columns
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1columns/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
    delete:
      summary: Delete Column
      description: Deletes the column specified in the URL.
      operationId: column-delete
      tags:
        - columns
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
    put:
      summary: Update Column
      description: >
        Updates properties of the column, moves the column, or renames the
        column.


        **NOTE:**

        * You cannot change the type of a Primary column.

        * While dependencies are enabled on a sheet, you can't change the type
        of any special calendar/Gantt columns.

        * If the column type is changed, all cells in the column are converted
        to the new column type and column validation is cleared.

        * Type is optional when moving or renaming, but required when changing
        type or dropdown values.
      operationId: column-updateColumn
      tags:
        - columns
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
      requestBody:
        description: >
          A [Column object]() that contains the following attributes:
           * **index**
           * **autoNumberFormat** (optional)
           * **contactOptions** (optional) -- must have set column type to CONTACT_LIST
           * **description** (optional)
           * **format** (optional)
           * **formula** (optional)
           * **hidden**(optional)
           * **locked** (optional)
           * **options** (optional)
           * **symbol** (optional)
           * **systemColumnType** (optional)
           * **title** (optional)
           * **type** (optional)
           * **validation** (optional)
           * **width** (optional)

           
          **NOTE:** When setting a column type of PICKLIST or MULTI_PICKLIST,
          you must follow a one operation per API call rule. For these column
          types, you must set the column type first, and then add any additional
          constraints in a second call, such as setting *validation* to *true*.
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1columns/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: >-
            Returns [Result
            object](../../tag/commonObjects#section/Result-Object) containing
            the [Column object](../../tag/columnsObjects#section/Column-Object)
            that was modified.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1columns~1%7BcolumnId%7D/delete/responses/200/content/application~1json/schema
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          id:
                            type: number
                            description: Column Id.
                          index:
                            type: number
                            description: >-
                              Column index or position. This number is
                              zero-based.
                          options:
                            type: array
                            items:
                              type: string
                            description: Array of the options available for the column.
                          title:
                            type: string
                            description: Column title.
                          type:
                            type: string
                            enum:
                              - ABSTRACT_DATETIME
                              - CHECKBOX
                              - CONTACT_LIST
                              - DATE
                              - DATETIME
                              - DURATION
                              - MULTI_CONTACT_LIST
                              - MULTI_PICKLIST
                              - PICKLIST
                              - PREDECESSOR
                              - TEXT_NUMBER
                            description: >-
                              See [Column
                              Types](../../tag/columnsRelated#section/Column-Types)
                          validation:
                            type: boolean
                            description: >-
                              Indicates whether validation has been enabled for
                              the column (value = **true**).
  /sheets/{sheetId}/comments/{commentId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: commentId
        in: path
        required: true
        description: ID of the comment
        schema:
          type: string
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get a comment
      description: |
        Gets the comment specified by commentId.
      operationId: comment-get
      tags:
        - comments
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Discussion/properties/comments/items'
    put:
      summary: Edit a comment
      description: >
        Updates the text of a comment. NOTE: Only the user that created the
        comment is permitted to update it.
      operationId: comment-edit
      tags:
        - comments
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  description: Comment body.
                  type: string
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1comments~1%7BcommentId%7D/get/responses/200/content/application~1json/schema/allOf/0
                properties:
                  version:
                    description: >-
                      New version of the Sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
    delete:
      summary: Delete a comment
      description: |
        Deletes the comment specified in the URL.
      operationId: comment-delete
      tags:
        - comments
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1comments~1%7BcommentId%7D/put/responses/200/content/application~1json/schema/allOf/0
                properties:
                  version:
                    description: >-
                      New version of the Sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/comments/{commentId}/attachments:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: >-
          #/paths/~1sheets~1%7BsheetId%7D~1comments~1%7BcommentId%7D/parameters/1
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Attach File or URL to Comment
      description: >
        Attaches a file to the comment. The URL can be any of the following:


        * Normal URL (attachmentType "LINK")

        * Box.com URL (attachmentType "BOX_COM")

        * Dropbox URL (attachmentType "DROPBOX")

        * Egnyte URL (attachmentType "EGNYTE")

        * Evernote URL (attachmentType "EVERNOTE")

        * Google Drive URL (attachmentType "GOOGLE_DRIVE")

        * OneDrive URL (attachmentType "ONEDRIVE")


        This operation can be performed using a simple upload or a multipart
        upload.
      operationId: attachments-attachToComment
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                filename:
                  type: string
                  format: binary
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1attachments/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/components/schemas/Comment/properties/attachments/items
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/copy:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1favorites/post/parameters/0'
      - $ref: '#/paths/~1folders~1%7BfolderId%7D~1copy/post/parameters/1'
      - $ref: '#/paths/~1folders~1%7BfolderId%7D~1copy/post/parameters/2'
    post:
      summary: Copy Sheet
      description: |
        Creates a copy of the specified sheet.
      operationId: copy-sheet
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SHEETS
      requestBody:
        description: Destination where to create a copy of the specified sheet.
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1folders~1%7BfolderId%7D~1copy/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          id:
                            $ref: >-
                              #/components/schemas/Folder/properties/sheets/items/properties/id
                          accessLevel:
                            $ref: >-
                              #/components/schemas/Folder/properties/sheets/items/properties/accessLevel
                          name:
                            $ref: >-
                              #/components/schemas/Folder/properties/sheets/items/properties/name
                          permalink:
                            $ref: >-
                              #/components/schemas/Folder/properties/sheets/items/properties/permalink
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sheets/{sheetId}/crosssheetreferences:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Create Cross-sheet References
      description: >-
        Adds a cross-sheet reference between two sheets and defines the data
        range for formulas. Each distinct data range requires a new cross-sheet
        reference.
      operationId: add-crosssheet-reference
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      tags:
        - crossSheetReferences
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SHEETS
      requestBody:
        description: CrossSheetReference object to create
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  description: >-
                    CrossSheetReference object to create which will refer to the
                    entire columns in the range from startColumnId to
                    endColumnId.
                  properties:
                    sourceSheetId:
                      description: Sheet Id of source sheet.
                      type: number
                    name:
                      description: >-
                        Friendly name of reference. Auto-generated unless
                        specified in Create Cross-sheet References.
                      type: string
                    endColumnId:
                      description: >-
                        Defines ending edge of range when specifying one or more
                        columns. Must be used with startColumnId.
                      type: number
                    startColumnId:
                      description: >-
                        Defines beginning edge of range when specifying one or
                        more columns. Must be used with endColumnId.
                      type: number
                - type: object
                  description: >-
                    CrossSheetReference object to create which will refer to the
                    entire rows in the range from startRowId to endRowId.
                  properties:
                    sourceSheetId:
                      description: Sheet Id of source sheet.
                      type: number
                    name:
                      description: >-
                        Friendly name of reference. Auto-generated unless
                        specified in Create Cross-sheet References.
                      type: string
                    endRowId:
                      description: >-
                        Defines ending edge of range when specifying one or more
                        rows. Must be used with startRowId.
                      type: number
                    startRowId:
                      description: >-
                        Defines beginning edge of range when specifying one or
                        more rows. Must be used with endRowId.
                      type: number
                - type: object
                  description: >-
                    CrossSheetReference object to create with specified cell
                    range.
                  properties:
                    sourceSheetId:
                      description: Sheet Id of source sheet.
                      type: number
                    name:
                      description: >-
                        Friendly name of reference. Auto-generated unless
                        specified in Create Cross-sheet References.
                      type: string
                    endColumnId:
                      description: >-
                        Defines ending edge of range when specifying one or more
                        columns. Must be used with startColumnId. To specify an
                        entire column, omit the startRowId and endRowId
                        parameters.
                      type: number
                    endRowId:
                      description: >-
                        Defines ending edge of range when specifying one or more
                        rows. Must be used with startRowId. To specify an entire
                        row, omit the startColumnId and endColumnId parameters.
                      type: number
                    startColumnId:
                      description: >-
                        Defines beginning edge of range when specifying one or
                        more columns. Must be used with endColumnId. To specify
                        an entire column, omit the startRowId and endRowId
                        parameters.
                      type: number
                    startRowId:
                      description: >-
                        Defines beginning edge of range when specifying one or
                        more rows. Must be used with endRowId. To specify an
                        entire row, omit the startColumnId and endColumnId
                        parameters.
                      type: number
      responses:
        '200':
          description: >-
            Result object containing a CrossSheetReference object, corresponding
            to what was specified in the request.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/components/schemas/Sheet/properties/crossSheetReferences/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    get:
      summary: List Cross-sheet References
      description: Lists all cross-sheet references for the sheet.
      operationId: list-crosssheet-references
      tags:
        - crossSheetReferences
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: >-
            IndexResult object containing an array of CrossSheetReference
            objects
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1sheets~1%7BsheetId%7D~1crosssheetreferences/post/responses/200/content/application~1json/schema/allOf/1/properties/result
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1crosssheetreferences/post/responses/default/content/application~1json/schema
  /sheets/{sheetId}/crosssheetreferences/{crossSheetReferenceId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: crossSheetReferenceId
        in: path
        schema:
          type: number
        required: true
        description: Cross-sheet Reference Id
    get:
      summary: Get Cross-sheet Reference
      description: Gets the cross-sheet reference specified in the URL.
      operationId: get-crosssheet-reference
      tags:
        - crossSheetReferences
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: CrossSheetReference object
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Sheet/properties/crossSheetReferences/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sheets/{sheetId}/discussions:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Discussions
      description: >
        Gets a list of all discussions associated with the specified sheet.
        Remember that discussions are containers

        for the conversation thread. To see the entire thread, use the
        include=comments parameter.
      operationId: discussions-list
      tags:
        - discussions
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to include in the
            response:
              * **attachments** - effective only if comments is present, otherwise ignored
              * **comments** - include all comments in threads
          schema:
            type: string
            enum:
              - attachments
              - comments
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of discussions
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Proof/properties/discussions/items
    post:
      summary: Create a Discussion
      description: >
        Creates a new discussion on a sheet. To create a discussion with an
        attachment please use "multipart/form-data" content type.
      operationId: discussions-create
      tags:
        - discussions
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  description: Comment.
                  type: object
                  properties:
                    text:
                      description: Comment text.
                      type: string
          multipart/form-data:
            schema:
              type: object
              properties:
                discussion:
                  type: object
                  description: Discussion.
                  properties:
                    comment:
                      $ref: >-
                        #/paths/~1sheets~1%7BsheetId%7D~1discussions/post/requestBody/content/application~1json/schema/properties/comment
                    title:
                      description: Title for the attachment. Only used with an attachment.
                      type: string
                file:
                  description: >-
                    File to attach to the new comment. Only used with an
                    attachment.
                  type: string
                  format: binary
            encoding:
              discussion:
                contentType: application/json
              file:
                contentType: application/octet-stream
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1discussions/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/discussions/{discussionId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: discussionId
        in: path
        required: true
        description: ID of the discussion
        schema:
          type: string
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Discussion
      description: |
        Gets the discussion specified by discussionId.
      operationId: discussion-get
      tags:
        - discussions
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Proof/properties/discussions/items'
    delete:
      summary: Delete a Discussion
      description: |
        Deletes the discussion specified in the URL.
      operationId: discussion-delete
      tags:
        - discussions
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
  /sheets/{sheetId}/discussions/{discussionId}/attachments:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: >-
          #/paths/~1sheets~1%7BsheetId%7D~1discussions~1%7BdiscussionId%7D/parameters/1
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Discussion Attachments
      description: |
        Gets a list of all attachments that are in the discussion.
      operationId: discussion-listAttachments
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of attachments
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Comment/properties/attachments/items
  /sheets/{sheetId}/discussions/{discussionId}/comments:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: >-
          #/paths/~1sheets~1%7BsheetId%7D~1discussions~1%7BdiscussionId%7D/parameters/1
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Create a comment
      description: >
        Adds a comment to a discussion. To create a comment with an attachment
        please use "multipart/form-data" content type.
      operationId: comments-create
      tags:
        - comments
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1comments~1%7BcommentId%7D/put/requestBody/content/application~1json/schema
          multipart/form-data:
            schema:
              type: object
              properties:
                comment:
                  description: Comment.
                  type: object
                  properties:
                    text:
                      description: Comment text.
                      type: string
                file:
                  description: >-
                    File to attach to the new comment. Only used with an
                    attachment.
                  type: string
                  format: binary
            encoding:
              comment:
                contentType: application/json
              file:
                contentType: application/octet-stream
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/components/schemas/Discussion/properties/comments/items
  /sheets/{sheetId}/emails:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1favorites/post/parameters/0'
    post:
      summary: Send Sheet via Email
      description: >-
        Sends the sheet as a PDF attachment via email to the designated
        recipients.
      operationId: sheet-send
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SHEETS
      requestBody:
        description: >
          [SheetEmail
          object](../../tag/sendViaEmailObjects#section/Sheet-Email-Object)
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1reports~1%7BreportId%7D~1emails/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
  /sheets/{sheetId}/move:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1favorites/post/parameters/0'
    post:
      summary: Move Sheet
      description: >
        Moves the specified sheet to a new location.

        When a sheet that is shared to one or more users and/or groups is moved
        into or out of a workspace, those sheet-level shares are preserved.
      operationId: move-sheet
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SHEETS
      requestBody:
        description: Destination to move the specified sheet.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destinationId:
                  description: >-
                    The Id of the destination container (when copying or moving
                    a sheet or a folder). Required if destinationType is
                    "folder" or "workspace". If destinationType is "home", this
                    value must be null.
                  type: number
                destinationType:
                  description: Type of the destination container.
                  type: string
                  nullable: true
                  enum:
                    - folder
                    - home
                    - workspace
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1copy/post/responses/200/content/application~1json/schema/allOf/1/properties/result
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sheets/{sheetId}/proofs:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      summary: List Proofs
      description: |
        Gets a list of all proofs for a given sheet.
      operationId: proofs-getAllProofs
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of all proofs
                        type: array
                        items:
                          $ref: '#/components/schemas/Row/properties/proofs'
  /sheets/{sheetId}/proofs/{proofId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: proofId
        in: path
        required: true
        description: Proof Id of the original proof
        schema:
          type: string
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      parameters:
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to include in the
            response.
          schema:
            type: string
            enum:
              - attachments
              - discussions
      summary: Get Proof
      description: >
        Gets the proof specified in the URL. Returns the proof, which is
        optionally populated with discussion and attachment objects.
      operationId: proofs-get
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Row/properties/proofs'
    delete:
      summary: Delete Proof
      description: >
        Deletes the proof including all versions. The proofId must be for the
        original version.
      operationId: proofs-delete
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
    put:
      summary: Update Proof Status
      description: |
        Sets the proof status as either complete or incomplete.
      operationId: proofs-update
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                isCompleted:
                  type: boolean
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D/get/responses/200/content/application~1json/schema/allOf/0
  /sheets/{sheetId}/proofs/{proofId}/attachments:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Proof Attachments
      description: >
        Gets a list of all attachments that are in the proof, excluding
        discussion-level attachments in the proof.
      operationId: proofs-listAttachments
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of proof attachments
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Comment/properties/attachments/items
    post:
      summary: Attach File to Proof
      description: |
        Attaches a file to the proof.
      operationId: proofs-attachToProof
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D~1attachments/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/proofs/{proofId}/discussions:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Proof Discussions
      description: |
        Gets a list of all discussions that are in the proof.
      operationId: proofs-listDiscussions
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1discussions/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of proof discussions
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Proof/properties/discussions/items
    post:
      summary: Create Proof Discussion
      description: |
        Creates a discussion on a proof.
      operationId: proofs-createDiscussion
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1discussions/post/requestBody/content/application~1json/schema
          multipart/form-data:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1discussions/post/requestBody/content/multipart~1form-data/schema
            encoding:
              discussion:
                contentType: application/json
              file:
                contentType: application/octet-stream
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D~1discussions/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/proofs/{proofId}/requestactions:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Proof Request Actions
      description: >
        Gets a summarized list of all request actions associated with the
        specified proof.
      operationId: proofs-listRequestActions
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of proof request actions
                        type: array
                        items:
                          type: object
                          properties:
                            user:
                              description: >
                                `User` object containing `name` and `email` of
                                the user performing the action.
                              allOf:
                                - $ref: >-
                                    #/components/schemas/Attachment/properties/createdBy/allOf/0
                            actionStatus:
                              description: Proof request action status.
                              type: string
                              enum:
                                - APPROVED
                                - PENDING
                                - REJECTED
  /sheets/{sheetId}/proofs/{proofId}/requests:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    delete:
      summary: Delete Proof Requests
      description: |
        Deletes all proof requests in a proof.
      operationId: proofs-deleteProofRequests
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
    post:
      summary: Create Proof Request
      description: |
        Creates a proof request.
      operationId: proofs-createProofRequests
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProofRequest/allOf/0'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D~1requests/delete/responses/200/content/application~1json/schema
                  - type: object
                    properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/ProofRequest/allOf/0'
                        type: object
                        properties:
                          id:
                            description: Proof request Id.
                            type: number
                          proofId:
                            description: Proof Id of the original proof.
                            type: number
                          sentBy:
                            description: >
                              `User` object containing `name` and `email` of the
                              sender.
                            allOf:
                              - $ref: >-
                                  #/components/schemas/Attachment/properties/createdBy/allOf/0
                          sentAt:
                            $ref: >-
                              #/components/schemas/Attachment/properties/createdAt
                          isDownloadable:
                            description: Indicates whether the description is downloadable.
                            type: boolean
                          status:
                            description: Proof request status.
                            type: string
                            enum:
                              - ACTIVE
                              - EXPIRED
                              - PROOF_DELETED
  /sheets/{sheetId}/proofs/{proofId}/versions:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Proof Versions
      description: >
        Gets a list of all versions of the given proofId in order from newest to
        oldest.
      operationId: proofs-getVersions
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of proof versions
                        type: array
                        items:
                          $ref: '#/components/schemas/Row/properties/proofs'
    delete:
      summary: Delete Proof Version
      description: |
        Deletes a proof version. Proof Id must be a current version proof Id.
      operationId: proofs-deleteVersion
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
    post:
      summary: Create Proof Version
      description: |
        Creates a proof version. Proof Id must be for the original proof.
      operationId: proofs-createVersion
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                filename:
                  type: string
                  format: binary
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1attachments/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D~1versions/delete/responses/200/content/application~1json/schema
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1proofs~1%7BproofId%7D~1versions/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/publish:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Sheet Publish Status
      description: |
        Gets the sheet's 'Publish' settings.
      operationId: get-sheetPublish
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Describes the sheet's publish settings.
                type: object
                properties:
                  icalEnabled:
                    description: >-
                      If **true**, a webcal is available for the calendar in the
                      sheet.
                    type: boolean
                  icalUrl:
                    description: >
                      URL for **iCal** view of the published sheet. Only
                      returned in a response if **icalEnabled = true**.
                  readOnlyFullAccessibleBy:
                    description: >
                      Indicates who can access the 'Read-Only Full' view of the
                      published sheet:
                        * ALL - available to anyone who has the link.
                        * ORG - available only to members of the sheet owner's Smartsheet
                      organization account.
                        * SHARED - available only to users shared to the item.

                      Only returned in the response if **readOnlyFullEnabled =
                      true**.
                    type: string
                    enum:
                      - ALL
                      - ORG
                      - SHARED
                  readOnlyFullDefaultView:
                    description: >
                      Indicates which view the user has set for a read-only,
                      default view of the published sheet. Must be one of the
                      listed enum values.
                    type: string
                    enum:
                      - CALENDAR
                      - CARD
                      - GRID
                  readOnlyFullEnabled:
                    description: >-
                      If **true**, a rich version of the sheet is published with
                      the ability to download row attachments and discussions.
                    type: boolean
                  readOnlyFullShowToolbar:
                    description: >-
                      Indicates whether the left nav toolbar is displayed. The
                      default, or **true**, is to display the toolbar. If
                      **false**, hides the toolbar.
                    type: boolean
                    deprecated: true
                  readOnlyFullUrl:
                    description: >-
                      URL for 'Read-Only Full' view of the published sheet. Only
                      returned in a response if **readOnlyFullEnabled = true.
                    type: string
                  readOnlyLiteEnabled:
                    description: >-
                      If **true**, a lightweight version of the sheet is
                      published without row attachments and discussions.
                    type: boolean
                  readOnlyLiteSslUrl:
                    description: >-
                      URL for 'Read-Only' view of the published sheet when SSL
                      is enabled.
                    type: string
                  readOnlyLiteUrl:
                    description: >-
                      URL for 'Read-Only HTML' view of the published sheet. Only
                      returned in a response if **readOnlyLiteEnabled = true**.
                    type: string
                  readWriteAccessibleBy:
                    description: >
                      Indicates who can access the 'Edit by Anyone' view of the
                      published sheet:
                        * ALL - available to anyone who has the link.
                        * ORG - available only to members of the sheet owner's Smartsheet
                      organization account.
                        * SHARED - available only to users shared to the item.

                      Only returned in the response if **readWriteEnabled =
                      true**.
                    type: string
                    enum:
                      - ALL
                      - ORG
                      - SHARED
                  readWriteDefaultView:
                    description: >
                      Indicates which view the user has set for a read-write,
                      default view of the published sheet. Must be one of the
                      listed enum values.
                    type: string
                    enum:
                      - CALENDAR
                      - CARD
                      - GRID
                  readWriteEnabled:
                    description: >-
                      If **true**,a rich version of the sheet is published with
                      the ability to edit cells and manage attachments and
                      discussions.
                    type: boolean
                  readWriteShowToolbar:
                    description: >-
                      Indicates whether the left nav toolbar is displayed. The
                      default, or **true**, is to display the toolbar. If
                      **false**, hides the toolbar.
                    type: boolean
                    deprecated: true
                  readWriteUrl:
                    description: >-
                      URL for 'Edit by Anyone' view of the published sheet. Only
                      returned in a response if **readWriteEnabled = true**.
                    type: string
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    put:
      summary: Set Sheet Publish Status
      description: >
        Sets the publish status of the sheet and returns the new status,
        including the URLs of any enabled publishings.
      operationId: set-sheetPublish
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        description: >
          SheetPublish object.


          For Read Only, if you do not specify a value for
          **readOnlyFullAccessibleBy**, the value defaults

          to the organization-level 'Sheet Publishing' setting (if the sheet
          owner belongs to an organization account)

          or to **ALL** (if the sheet owner does not belong to an organization
          account).


          For Read Write, if you do not specify a value for
          **readWriteAccessibleBy**, the value defaults

          to the organization-level 'Sheet Publishing' setting (if the sheet
          owner belongs to an organization account)

          or to **ALL** (if the sheet owner does not belong to an organization
          account).
        content:
          application/json:
            schema:
              description: >-
                Describes the sheet's publish settings. Used as a request body
                to set publish status.
              type: object
              properties:
                icalEnabled:
                  description: >-
                    If **true**, a webcal is available for the calendar in the
                    sheet.
                  type: boolean
                readOnlyFullAccessibleBy:
                  description: >
                    Indicates who can access the 'Read-Only Full' view of the
                    published sheet:
                      * ALL - available to anyone who has the link.
                      * ORG - available only to members of the sheet owner's Smartsheet
                    organization account.
                      * SHARED - available only to users shared to the item.

                    Only returned in the response if **readOnlyFullEnabled =
                    true**.
                  type: string
                  enum:
                    - ALL
                    - ORG
                    - SHARED
                readOnlyFullDefaultView:
                  description: >
                    Indicates which view the user has set for a read-only,
                    default view of the published sheet. Must be one of the
                    listed enum values.
                  type: string
                  enum:
                    - CALENDAR
                    - CARD
                    - GRID
                readOnlyFullEnabled:
                  description: >-
                    If **true**, a rich version of the sheet is published with
                    the ability to download row attachments and discussions.
                  type: boolean
                readOnlyFullShowToolbar:
                  description: >-
                    Indicates whether the left nav toolbar is displayed. The
                    default, or **true**, is to display the toolbar. If
                    **false**, hides the toolbar.
                  type: boolean
                  deprecated: true
                readOnlyLiteEnabled:
                  description: >-
                    If **true**, a lightweight version of the sheet is published
                    without row attachments and discussions.
                  type: boolean
                readWriteAccessibleBy:
                  description: >
                    Indicates who can access the 'Edit by Anyone' view of the
                    published sheet:
                      * ALL - available to anyone who has the link.
                      * ORG - available only to members of the sheet owner's Smartsheet
                    organization account.
                      * SHARED - available only to users shared to the item.

                    Only returned in the response if **readWriteEnabled =
                    true**.
                  type: string
                  enum:
                    - ALL
                    - ORG
                    - SHARED
                readWriteDefaultView:
                  description: >
                    Indicates which view the user has set for a read-write,
                    default view of the published sheet. Must be one of the
                    listed enum values.
                  type: string
                  enum:
                    - CALENDAR
                    - CARD
                    - GRID
                readWriteEnabled:
                  description: >-
                    If **true**,a rich version of the sheet is published with
                    the ability to edit cells and manage attachments and
                    discussions.
                  type: boolean
                readWriteShowToolbar:
                  description: >-
                    Indicates whether the left nav toolbar is displayed. The
                    default, or **true**, is to display the toolbar. If
                    **false**, hides the toolbar.
                  type: boolean
                  deprecated: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1publish/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1publish/get/responses/default/content/application~1json/schema
  /sheets/{sheetId}/rows:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Add Rows
      description: >
        Inserts one or more rows into the sheet specified in the URL. If you
        want to insert the rows in any position but the default, use
        [location-specifier
        attributes](../../tag/rowsRelated#section/Specify-Row-Location) (that
        is, toTop, toBottom, parentId, siblingId, above, indent, outdent). See
        language tabs for variations in syntax.


        This operation supports both single-object and bulk semantics. For more
        information, see [Optional Bulk
        Operations](../../#section/Work-at-Scale/Bulk-Operations).
      operationId: rows-addToSheet
      tags:
        - rows
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - name: allowPartialSuccess
          in: query
          description: >-
            When specified with a value of true, enables partial success for
            this bulk operation. See [Partial
            Success](https://smartsheet.redoc.ly/#section/Work-at-Scale/Bulk-Operations)
            for more information.
          schema:
            type: boolean
            default: false
          required: false
        - name: overrideValidation
          in: query
          description: >-
            You may use the query string parameter **overrideValidation** with a
            value of **true** to allow a cell value outside of the validation
            limits. You must specify **strict** with a value of **false** to
            bypass value type checking.
          schema:
            type: boolean
            default: false
          required: false
      requestBody:
        description: >
          [Row object](../../tag/rowsObjects#section/Row-Object) or an array of
          Row objects, with the following attributes:
           * One or more [location-specifier attributes](../../tag/rowsRelated#section/Specify-Row-Location)
          (required)
           * **expanded** (optional)
           * **format** (optional)
           * **cells** (optional) -- if specified, must be an array of [Cell objects](../../tag/cellsObjects#section/Cell-Object),
          where each object is limited to the following attributes:
             * **columnId** (required)
             * One of the following (required):
                * **formula**: the formula for the cell. For cross-sheet formulas,
          you must first define a [cross-sheet
          reference](../../tag/crossSheetReferencesDescription)
                * **value**
             * When **value** is specified
                * [hyperlink](../../tag/dashboardsObjects#section/WidgetHyperlink-Object)
          (optional) with exactly one of the following attributes set:
                  * **reportId**
                  * **sheetId**
                  * **url**
                * [linkInFromCell]() (optional) with all of the following attributes
          set:
                  * **columnId**
                  * **rowId**
                  * **sheetId**
                * **strict** (optional)
             * **format** (optional)
             * **image** (optional) -- if specified, use to update alternate text
          where altText = string.
             * **overrideValidation** (optional)
           * **locked** (optional) - **true** to lock the row or **false** to unlock
          the row.

          See [Column Types](../../tag/columnsRelated#section/Column-Types) for
          more information.


          **NOTES:**

          * Column Ids must be valid for the sheet to which the row belongs, and
          must only be used once for each row in the operation.

          * Cells of a project sheet in the "Finish Date" column cannot be
          updated via API.

          * Cells of a project sheet in the "Start Date" column cannot be
          updated via API for rows that contain a value in the "Predecessor"
          column.

          * Max length for a cell value is 4000 characters after which
          truncation occurs without warning. Empty string values are converted
          to null.

          * When adding or updating rows, there is a 500 row limit for each API
          call.  

          * Calculation errors or problems with a formula do not cause the API
          call to return an error code. Instead, the response contains the same
          value as in the UI, such as cell.value = "#CIRCULAR REFERENCE".

          * If you are adding or updating a row using *linkInFromCell*, you
          cannot use *overrideValidation* as a query param. In this case, you
          must pass *overrideValidation* in the body as a cell update field.
          Additionally, *linkInFromCell* requires a *value* of null.

          * Any one sheet can have up to 500,000 inbound cell links. (Smartsheet
          Gov has an inbound cell link limit of 100,000.) 

          * If you want to clear a cell link, you can either pass *value* as an
          empty string or set the *value* to the current value and omit
          *linkInFromCell*.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ReportRow/allOf/0'
                - type: array
                  items:
                    $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1rows/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >-
            Returns [Result
            object](../../tag/commonObjects#section/Result-Object) containing
            the newly created rows -- either a single [Row
            object](../../tag/rowsObjects#section/Row-Object) or array of Row
            objects, corresponding to what was specified in the request, as well
            as the new version of the sheet.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: Row Id.
                              type: number
                            sheetId:
                              description: Parent sheet Id.
                              type: number
                            rowNumber:
                              description: Row number within the sheet.
                              type: number
                              minimum: 1
                            expanded:
                              description: >-
                                Indicates whether the row is expanded or
                                collapsed.
                              type: boolean
                            createdAt:
                              $ref: >-
                                #/components/schemas/Attachment/properties/createdAt
                            modifiedAt:
                              $ref: >-
                                #/components/schemas/Attachment/properties/createdAt
                            cells:
                              description: Cells objects.
                              type: array
                              items:
                                type: object
                                properties:
                                  columnId:
                                    type: number
                                    description: >-
                                      The Id of the column that the cell is
                                      located in.
                                  columnType:
                                    type: string
                                    description: >-
                                      Only returned if the include query string
                                      parameter contains **columnType**.
                                  value:
                                    anyOf:
                                      - type: string
                                      - type: number
                                      - type: boolean
                                    description: >-
                                      A string, number, or a Boolean value --
                                      depending on the cell type and the data in
                                      the cell. Cell values larger than 4000
                                      characters are silently truncated. An
                                      empty cell returns no value.
                                  displayValue:
                                    type: string
                                    description: >-
                                      Visual representation of cell contents, as
                                      presented to the user in the UI.
                            version:
                              description: >-
                                Sheet version number that is incremented every
                                time a sheet is modified.
                              type: number
        default:
          description: >
            When **allowPartialSuccess=false** (or not specified):


            If an error occurs, the [Error
            object](../../tag/commonObjects#section/Error-Object) returned
            contains a **detail** attribute set to an object with the following
            attribute:

            * **index**: the array index of the row that caused the error (0 if
            a single Row was passed in)


            If any error occurs, the entire request fails (no rows are added),
            and the error response returned describes the first problem that was
            encountered. For example:

            ```

            {
              "errorCode": 1042,
              "message": "The cell value in column 5504245941200772 did not conform
            to the strict requirements for type CHECKBOX."
              "detail": {
                "index": 4
              }
            }

            ```


            When **allowPartialSuccess=true**:


            When partial success is enabled, and one or more of the objects in
            the request fail to be added/updated/deleted, a standard [Result
            object](../../tag/commonObjects#section/Result-Object) is returned,
            but with a **message** of **'PARTIAL_SUCCESS'** (instead of
            **'SUCCESS'**), and a **resultCode** of **3**. Additionally, the
            object contains a **failedItems** attribute -- an array of
            [BulkItemFailure
            objects](../../tag/commonObjects#section/BulkItemFailure-Object)
            that contains an item for each object in the request that failed to
            be added/updated/deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      summary: Delete Rows
      description: Deletes one or more rows from the sheet specified in the URL.
      operationId: delete-rows
      tags:
        - rows
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - name: ids
          in: query
          required: true
          description: |
            A comma-separated list of row Ids.
          schema:
            type: string
        - name: ignoreRowsNotFound
          description: >
            **true** or **false**. If set to **false** and any of the specified
            row Ids are not found, no rows are deleted, and the "not found"
            [error](../../tag/commonObjects#section/Error-Object) is returned.
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: >-
            Returns [Result
            object](../../tag/commonObjects#section/Result-Object) containing
            row Ids corresponding to all rows that were successfully deleted
            (including any child rows of rows specified in the URL).
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1rows/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          type: number
        '404':
          $ref: '#/paths/~1contacts/get/responses/404'
    put:
      summary: Update Rows
      description: >-
        Updates cell values in the specified rows, expands/collapses the
        specified rows, or modifies the position of specified rows (including
        indenting/outdenting). For detailed information about changing row
        positions, see [location-specifier
        attributes](../../tag/rowsRelated#section/Specify-Row-Location).
      operationId: update-rows
      tags:
        - rows
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1rows/post/parameters/2'
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1rows/post/parameters/3'
      requestBody:
        description: >
          [Row object](../../tag/rowsObjects#section/Row-Object) or an array of
          Row objects, with the following attributes:
           * **id** (required)
           * One or more [location-specifier attributes](../../tag/rowsRelated#section/Specify-Row-Location)
          (optional)
           * **expanded** (optional)
           * **format** (optional)
           * **cells** (optional) -- if specified, must be an array of [Cell objects](),
          where each object is limited to the following attributes:
             * **columnId** (required)
             * One of the following (required):
               * **formula**: the formula for the cell. For cross-sheet formulas,
          you must first define a [cross-sheet
          reference](../../tag/crossSheetReferencesDescription)
               * **value**
             * When **value** is specified
               * [hyperlink](../../tag/dashboardsObjects#section/WidgetHyperlink-Object)
          (optional) with exactly one of the following attributes set:
                 * **reportId**
                 * **sheetId**
                 * **url**
               * [linkInFromCell]() (optional) with all of the following attributes
          set:
                 * **columnId**
                 * **rowId**
                 * **sheetId**
               * **strict** (optional)
             * **format** (optional)
             * **image** (optional) -- if specified, use to update alternate text
          where altText = string.
             * **overrideValidation** (optional)
           * **locked** (optional) - **true** to lock the row or **false** to unlock
          the row.

          See [Column Types](../../tag/columnsRelated#section/Column-Types) for
          more information.


          **NOTE:**

          * Column Ids must be valid for the sheet to which the row belongs, and
          must only be used once for each row in the operation.

          * Cells of a project sheet in the "Finish Date" column cannot be
          updated via API.

          * Cells of a project sheet in the "Start Date" column cannot be
          updated via API for rows that contain a value in the "Predecessor"
          column.

          * Max length for a cell value is 4000 characters after which
          truncation occurs without warning. Empty string values are converted
          to null.

          * Calculation errors or problems with a formula do not cause the API
          call to return an error code. Instead, the response contains the same
          value as in the UI, such as cell.value = "#CIRCULAR REFERENCE".
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1sheets~1%7BsheetId%7D~1rows/post/requestBody/content/application~1json/schema/oneOf/0
                - type: array
                  items:
                    $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1rows/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >-
            Returns [Result
            object](../../tag/commonObjects#section/Result-Object) containing an
            array of the updated rows.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1rows/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: Row Id.
                              type: number
                            rowNumber:
                              description: Row number within the sheet.
                              type: number
                              minimum: 1
                            parentRowNumber:
                              description: The row number of the parent.
                              type: number
                            parentId:
                              description: The Id of the parent.
                              type: number
                            expanded:
                              description: >-
                                Indicates whether the row is expanded or
                                collapsed.
                              type: boolean
                            createdAt:
                              $ref: >-
                                #/components/schemas/Attachment/properties/createdAt
                            modifiedAt:
                              $ref: >-
                                #/components/schemas/Attachment/properties/createdAt
                            cells:
                              description: Cells objects.
                              type: array
                              items:
                                $ref: >-
                                  #/paths/~1sheets~1%7BsheetId%7D~1rows/post/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/cells/items
                            version:
                              description: >-
                                Sheet version number that is incremented every
                                time a sheet is modified.
                              type: number
        default:
          description: >
            When **allowPartialSuccess=false** (or not specified):


            If an error occurs, the [Error
            object](../../tag/commonObjects#section/Error-Object) returned
            contains a **detail** attribute set to an object with the following
            attribute:

            * **index**: the array index of the row that caused the error (0 if
            a single Row was passed in)

            * **rowId**: the id of the row that caused the error (omitted if the
            row was missing an Id)


            If any error occurs, the entire request fails (no rows are added),
            and the error response returned describes the first problem that was
            encountered. For example:

            ```

            {

            "errorCode": 1042,

            "message": "The cell value in column 5504245941200772 did not
            conform to the strict requirements for type CHECKBOX."

            "detail": {
              "index": 4
              "rowId": 6572427401553796
              }
            }

            ```

            When **allowPartialSuccess=true**:


            When partial success is enabled, and one or more of the objects in
            the request fail to be added/updated/deleted, a standard [Result
            object](../../tag/commonObjects#section/Result-Object) is returned,
            but with a **message** of **'PARTIAL_SUCCESS'** (instead of
            **'SUCCESS'**), and a **resultCode** of **3**. Additionally, the
            object contains a **failedItems** attribute -- an array of
            [BulkItemFailure
            objects](../../tag/commonObjects#section/BulkItemFailure-Object)
            that contains an item for each object in the request that failed to
            be added/updated/deleted.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1rows/post/responses/default/content/application~1json/schema
  /sheets/{sheetId}/rows/emails:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Send Rows via Email
      description: Sends one or more rows via email.
      operationId: rows-send
      tags:
        - rows
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        description: >
          The columns included for each row in the email are populated according
          to the following rules:

          * If the **columnIds** attribute of the MultiRowEmail object is
          specified as an array of column Ids, those specific columns are
          included.

          * If the **columnIds** attribute of the MultiRowEmail object is
          omitted, all columns except hidden columns shall be included.

          * If the **columnIds** attribute of the MultiRowEmail object is
          specified as empty, no columns shall be included. (**NOTE:** In this
          case, either **includeAttachments=true** or
          **includeDiscussions=true** must be specified.)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest/allOf/0'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
  /sheets/{sheetId}/rows/copy:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Copy Rows to Another Sheet
      description: >-
        Copies rows from the sheet specified in the URL to (the bottom of)
        another sheet.
      operationId: copy-rows
      tags:
        - rows
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of row elements to copy in addition to the
            cell data:
              * **all** - specify a value of **all** to include everything (attachments,
            children, and discussions).
              * **attachments**
              * **children** -  if specified, any child rows of the rows specified in
            the request are also copied to the destination sheet, and
            parent-child relationships amongst rows are preserved within the
            destination sheet; if not specified, only the rows specified in the
            request are copied.
              * **discussions**
          schema:
            type: string
            enum:
              - all
              - attachments
              - children
              - discussions
        - name: ignoreRowsNotFound
          description: >
            **true** or **false**: default is **false**. If set to **true**,
            specifying row Ids that do not exist within the source sheet does
            not cause an error response. If omitted or set to **false**,
            specifying row Ids that do not exist within the source sheet causes
            an error response (and no rows are copied).
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rowIds:
                  description: The Ids of the rows to move or copy from the source sheet.
                  type: array
                  items:
                    type: number
                to:
                  $ref: '#/components/schemas/CopyOrMoveRowDirective/properties/to'
      responses:
        '200':
          description: CopyOrMoveRowResult object
          content:
            application/json:
              schema:
                type: object
                properties:
                  destinationSheetId:
                    description: The Id of the destination sheet.
                    type: number
                  rowMappings:
                    description: Array of rowMapping objects.
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/CopyOrMoveRowResult/properties/rowMappings/items
  /sheets/{sheetId}/rows/move:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Move Rows to Another Sheet
      description: >-
        Moves rows from the sheet specified in the URL to (the bottom of)
        another sheet.
      operationId: move-rows
      tags:
        - rows
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - name: include
          in: query
          required: false
          description: >
            A comma-separate list of row elements to move in addition to the
            cell data.
          schema:
            type: string
            enum:
              - attachments
              - discussions
        - name: ignoreRowsNotFound
          description: >
            **true** or **false**: default is **false**. If set to **true**,
            specifying row Ids that do not exist within the source sheet does
            not cause an error response. If omitted or set to **false**,
            specifying row Ids that do not exist within the source sheet causes
            an error response (and no rows are moved).
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1rows~1copy/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: CopyOrMoveRowResult object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1rows~1copy/post/responses/200/content/application~1json/schema
  /sheets/{sheetId}/rows/{rowId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: rowId
        in: path
        schema:
          type: number
        required: true
        description: Row Id in the sheet being accessed.
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Row
      description: Gets the row specified in the URL.
      operationId: row-get
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of elements to include in the response.


            See [Row Include
            Flags](../../tag/rowsRelated#section/Row-Include-Flags).


            Also supports the **columns** include flag, which adds a columns
            array that specifies all of the columns for the sheet. This enables
            you to have the full context of the cells in the row.


            The **filters** include flag returns a **filteredOut** attribute
            indicating if the row should be displayed or hidden according to the
            sheet's filters.
          schema:
            type: string
            enum:
              - columns
              - filters
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D/get/parameters/3'
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D/get/parameters/7'
      tags:
        - rows
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: >-
            Returns [Row object]() populated according to the specified
            parameters.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        description: Row Id.
                        type: number
                      sheetId:
                        description: Parent sheet Id.
                        type: number
                      rowNumber:
                        description: Row number within the sheet.
                        type: number
                        minimum: 1
                      expanded:
                        description: Indicates whether the row is expanded or collapsed.
                        type: boolean
                      cells:
                        description: Cells objects.
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1sheets~1%7BsheetId%7D~1rows/post/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/cells/items
                      createdAt:
                        $ref: '#/components/schemas/Attachment/properties/createdAt'
                      modifiedAt:
                        $ref: '#/components/schemas/Attachment/properties/createdAt'
  /sheets/{sheetId}/rows/{rowId}/attachments:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1rows~1%7BrowId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Row Attachments
      description: >
        Gets a list of all attachments that are on the row, including row and
        discussion-level attachments.
      operationId: attachments-listOnRow
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of attachments
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Comment/properties/attachments/items
    post:
      summary: Attach File or URL to Row
      description: |
        Attaches a file to the row. The URL can be any of the following:

        * Normal URL (attachmentType "LINK")
        * Box.com URL (attachmentType "BOX_COM")
        * Dropbox URL (attachmentType "DROPBOX")
        * Egnyte URL (attachmentType "EGNYTE")
        * Evernote URL (attachmentType "EVERNOTE")
        * Google Drive URL (attachmentType "GOOGLE_DRIVE")
        * OneDrive URL (attachmentType "ONEDRIVE")

        For multipart uploads please use "multipart/form-data" content type.
      operationId: row-attachments-attachFile
      tags:
        - attachments
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                filename:
                  type: string
                  format: binary
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1attachments/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1rows~1%7BrowId%7D~1attachments/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/rows/{rowId}/columns/{columnId}/cellimages:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1rows~1%7BrowId%7D/parameters/1'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1columns~1%7BcolumnId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Add Image to Cell
      description: Uploads an image to the specified cell within a sheet.
      operationId: addImageToCell
      tags:
        - cellImages
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/0'
        - name: Content-Length
          in: header
          description: >
            Must be set to the size of the file, in bytes. For example to
            determine file size using in UNIX:

            $ ls -l ProgressReport.docx

            5463 ProgressReport.docx
          schema:
            type: integer
            example: 5463
        - name: altText
          in: query
          description: Url-encoded alternate text for the image
          schema:
            type: string
          required: false
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1rows/post/parameters/3'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/ReportRow/allOf/0'
  /sheets/{sheetId}/rows/{rowId}/columns/{columnId}/history:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1rows~1%7BrowId%7D/parameters/1'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1columns~1%7BcolumnId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Cell History
      description: |
        Gets the cell modification history.
      operationId: cellHistory-get
      parameters:
        - name: include
          in: query
          required: false
          description: |
            A comma-separated list of elements to copy:
              * **columnType** - includes the columnType attribute for each Cell object
              * **objectValue** - when used in combination with a level query parameter,
            includes the email addresses for a multi-contact cell.
          schema:
            type: string
            enum:
              - columnType
              - objectValue
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D/get/parameters/7'
      tags:
        - cells
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: List of cell history objects
                        type: array
                        items:
                          type: object
                          allOf:
                            - $ref: >-
                                #/components/schemas/CellDataItem/properties/cell
                          properties:
                            modifiedAt:
                              $ref: >-
                                #/components/schemas/Attachment/properties/createdAt
                            modifiedBy:
                              description: >-
                                User object containing the name and email of the
                                user that made the change.
                              type: object
                              allOf:
                                - $ref: >-
                                    #/components/schemas/Attachment/properties/createdBy/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sheets/{sheetId}/rows/{rowId}/discussions:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1rows~1%7BrowId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Discussions with a Row
      description: >
        Gets a list of all discussions associated with the specified row.
        Remember that discussions are containers

        for the conversation thread. To see the entire thread, use the
        include=comments parameter.
      operationId: row-discussions-list
      tags:
        - discussions
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1discussions/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of discussions
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Proof/properties/discussions/items
    post:
      summary: Create a Discussion on a Row
      description: >
        Creates a new discussion on a row. To create a discussion with an
        attachment please use "multipart/form-data" content type.
      operationId: row-discussions-create
      tags:
        - discussions
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1discussions/post/requestBody/content/application~1json/schema
          multipart/form-data:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1discussions/post/requestBody/content/multipart~1form-data/schema
            encoding:
              discussion:
                contentType: application/json
              file:
                contentType: application/octet-stream
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1rows~1%7BrowId%7D~1discussions/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/rows/{rowId}/proofs:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1rows~1%7BrowId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Create Proof
      description: |
        Creates a proof on a row.
      operationId: proofs-create
      tags:
        - proofs
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/Row/properties/proofs'
                properties:
                  version:
                    description: >-
                      New version of the sheet. Applicable only for operations
                      which update sheet data.
                    type: number
                    nullable: true
  /sheets/{sheetId}/sentupdaterequests:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Sent Update Requests
      description: |
        Gets a summarized list of all sent update requests on the sheet.
        Only the following fields are returned in the response:
          * **id**
          * **message**
          * **sendTo**
          * **sentAt**
          * **sentBy**
          * **status**
          * **subject**
          * **updateRequestId**
      operationId: sentupdaterequests-list
      tags:
        - updateRequests
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: The list of SentUpdateRequest objects
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of Sent Update Requests
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: The Id of the sent update request.
                              type: number
                            columnIds:
                              description: The Ids of columns included in the request.
                              type: array
                              items:
                                type: number
                            rowIds:
                              description: The Ids of rows where an update is requested.
                              type: array
                              items:
                                type: number
                            updateRequestId:
                              description: The Id of the originating update request.
                              type: number
                            includeAttachments:
                              description: >-
                                Indicates whether the attachments were included
                                in the email.
                              type: boolean
                            includeDiscussions:
                              description: >-
                                Indicates whether the discussions were included
                                in the email.
                              type: boolean
                            message:
                              description: The message of the email. Max 10000 characters.
                              type: string
                            sentAt:
                              description: >-
                                The date and time for when the sent update
                                request was sent to the recipient.
                              allOf:
                                - $ref: >-
                                    #/components/schemas/Attachment/properties/createdAt
                            sentBy:
                              description: >
                                `User` object containing `name` and `email` of
                                the sender.
                              allOf:
                                - $ref: >-
                                    #/components/schemas/Attachment/properties/createdBy/allOf/0
                            sentTo:
                              description: Recipient object.
                              allOf:
                                - $ref: >-
                                    #/components/schemas/AutomationAction/oneOf/1/properties/recipients/items
                            status:
                              description: The status of the sent update request.
                              type: string
                              enum:
                                - CANCELED
                                - COMPLETE
                                - PENDING
                            subject:
                              description: The subject of the email.
                              type: string
              examples:
                EmailResponse:
                  summary: Sent to Individual User
                  value:
                    pageNumber: 1
                    pageSize: 50
                    totalPages: 25
                    totalCount: 136
                    data:
                      - id: 3319834533488516
                        updateRequestId: 6742614230755204
                        message: Some message
                        sentAt: '2020-05-29T03:14:28Z'
                        sentBy:
                          email: jane.doe@smartsheet.com
                          name: Jane Doe
                        sentTo:
                          email: person@company.org
                        status: COMPLETE
                        subject: Sample Bi-Weekly Update Request
                GroupResponse:
                  summary: Sent to Group
                  value:
                    pageNumber: 1
                    pageSize: 50
                    totalPages: 25
                    totalCount: 136
                    data:
                      - id: 3319834533488516
                        updateRequestId: 6742614230755204
                        message: Some message
                        sentAt: '2020-05-29T03:14:28Z'
                        sentBy:
                          email: jane.doe@smartsheet.com
                          name: Jane Doe
                        sentTo:
                          groupId: '197256463378308'
                        status: COMPLETE
                        subject: Sample Bi-Weekly Update Request
  /sheets/{sheetId}/sentupdaterequests/{sentUpdateRequestId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: sentUpdateRequestId
        in: path
        required: true
        description: ID of the sent update request
        schema:
          type: string
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Sent Update Request
      description: |
        Gets the specified sent update request on the sheet.
      operationId: sentupdaterequest-get
      tags:
        - updateRequests
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: SentUpdateRequest object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1sentupdaterequests/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
    delete:
      summary: Delete Sent Update Request
      description: >
        Deletes the specified sent update request.


        **Delete operation is supported only when the specified sent update
        request is in the pending status.

        Deleting a sent update request that was already completed by recipient
        is not allowed.**
      operationId: sentupdaterequest-delete
      tags:
        - updateRequests
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
            - WRITE_SHEETS
      responses:
        '200':
          description: Result object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
  /sheets/{sheetId}/summary:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Sheet Summary
      description: >-
        Returns object containing array of summary fields. Allows for pagination
        of results.
      operationId: list-summary-fields
      tags:
        - sheetSummary
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of elements to include in the response.

            * **format**: includes format info for cells, rows, and summary
            fields

            * **writerInfo**: includes createdBy and modifiedBy attributes for
            rows and summary fields
          schema:
            type: string
            enum:
              - format
              - writerInfo
        - name: exclude
          in: query
          required: false
          description: >
            A comma-separated list of elements to not include in the response.

            * **displayValue**: excludes displayValue info for cells, rows, and
            summary fields

            * **image**: excludes image attributes for cells and summary fields

            * **imageAltText**: excludes alt text for cells and summary fields
          schema:
            type: string
            enum:
              - displayValue
              - image
              - imageAltText
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sheet/properties/summary'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sheets/{sheetId}/summary/fields:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Summary Fields
      description: >-
        Returns object containing array of summary fields. Allows for pagination
        of results.
      operationId: list-summary-fields-paginated
      tags:
        - sheetSummary
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1summary/get/parameters/0'
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1summary/get/parameters/1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: List of Summary Fields
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/CellDataItem/properties/profileField
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    put:
      summary: Update Summary Fields
      description: Updates the summary fields for the given sheet.
      operationId: update-summary-fields
      tags:
        - sheetSummary
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
      parameters:
        - name: renameIfConflict
          description: >-
            Set to true if you want to override the requirement for unique
            summary field names. Repeated names will be adjusted by appending
            "(1)" or similar after the field name.
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        description: Array of SummaryField objects
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                description: SummaryField object to update.
                properties:
                  id:
                    description: SummaryField Id.
                    type: number
                  contactOptions:
                    description: >-
                      Array of ContactOption objects to specify a pre-defined
                      list of values for the column. Column type must be
                      CONTACT_LIST.
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/Column/properties/contactOptions/items
                  format:
                    description: >-
                      The format descriptor. Only returned if the include query
                      string parameter contains format and this column has a
                      non-default format applied to it.
                    type: string
                  formula:
                    description: The formula for a cell, if set.
                    type: string
                  hyperlink:
                    $ref: '#/components/schemas/Cell/properties/hyperlink'
                  image:
                    $ref: '#/components/schemas/Cell/properties/image'
                  index:
                    description: Field index or position. This number is zero-based.
                    type: number
                  locked:
                    description: Indicates whether the field is locked.
                    type: boolean
                  objectValue:
                    $ref: '#/components/schemas/Cell/properties/objectValue'
                  options:
                    description: >-
                      When applicable for PICKLIST column type. Array of the
                      options available for the field.
                    type: array
                    items:
                      type: string
                  symbol:
                    description: When applicable for PICKLIST column type.
                    type: string
                  title:
                    description: Arbitrary name, must be unique within summary.
                    type: string
                  type:
                    type: string
                    enum:
                      - ABSTRACT_DATETIME
                      - CHECKBOX
                      - CONTACT_LIST
                      - DATE
                      - DATETIME
                      - DURATION
                      - MULTI_CONTACT_LIST
                      - MULTI_PICKLIST
                      - PICKLIST
                      - PREDECESSOR
                      - TEXT_NUMBER
                  validation:
                    description: >-
                      Indicates whether summary field values are restricted to
                      the type.
                    type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    description: A list of updated summary fields
                    properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1sheets~1%7BsheetId%7D~1summary~1fields/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1summary~1fields/get/responses/default/content/application~1json/schema
    delete:
      summary: Delete Summary Fields
      description: Deletes summary fields from the specified sheet.
      operationId: delete-summary-fields
      tags:
        - sheetSummary
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
      parameters:
        - name: ids
          in: query
          required: true
          description: |
            A comma-separated list of Sheet Summary Field Ids.
          schema:
            type: string
        - name: ignoreSummaryFieldsNotFound
          description: >-
            If **true**, the operation will succeed even if some fieldIds are
            not found.
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1summary~1fields/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    description: >-
                      A list of fieldIds corresponding to all summary fields
                      that were successfully deleted.
                    properties:
                      result:
                        type: array
                        items:
                          type: number
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1summary~1fields/get/responses/default/content/application~1json/schema
    post:
      summary: Add Summary Fields
      description: Creates one or more summary fields for the specified sheet.
      operationId: add-summary-fields
      tags:
        - sheetSummary
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
      parameters:
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1summary~1fields/put/parameters/0'
      requestBody:
        description: Array of SummaryField objects
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                description: SummaryField object to create.
                properties:
                  contactOptions:
                    description: >-
                      Array of ContactOption objects to specify a pre-defined
                      list of values for the column. Column type must be
                      CONTACT_LIST.
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/Column/properties/contactOptions/items
                  format:
                    description: >-
                      The format descriptor. Only returned if the include query
                      string parameter contains format and this column has a
                      non-default format applied to it.
                    type: string
                  formula:
                    description: The formula for a cell, if set.
                    type: string
                  hyperlink:
                    $ref: '#/components/schemas/Cell/properties/hyperlink'
                  image:
                    $ref: '#/components/schemas/Cell/properties/image'
                  index:
                    description: Field index or position. This number is zero-based.
                    type: number
                  locked:
                    description: Indicates whether the field is locked.
                    type: boolean
                  objectValue:
                    $ref: '#/components/schemas/Cell/properties/objectValue'
                  options:
                    description: >-
                      When applicable for PICKLIST column type. Array of the
                      options available for the field.
                    type: array
                    items:
                      type: string
                  symbol:
                    description: When applicable for PICKLIST column type.
                    type: string
                  title:
                    description: Arbitrary name, must be unique within summary.
                    type: string
                  type:
                    type: string
                    enum:
                      - ABSTRACT_DATETIME
                      - CHECKBOX
                      - CONTACT_LIST
                      - DATE
                      - DATETIME
                      - DURATION
                      - MULTI_CONTACT_LIST
                      - MULTI_PICKLIST
                      - PICKLIST
                      - PREDECESSOR
                      - TEXT_NUMBER
                  validation:
                    description: >-
                      Indicates whether summary field values are restricted to
                      the type.
                    type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1summary~1fields/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    description: A list of created summary fields
                    properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1sheets~1%7BsheetId%7D~1summary~1fields/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1summary~1fields/get/responses/default/content/application~1json/schema
  /sheets/{sheetId}/summary/fields/{fieldId}/images:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: fieldId
        in: path
        schema:
          type: number
        required: true
        description: Summary Field Id of the sheet summary field being accessed.
      - $ref: '#/paths/~1contacts/parameters/0'
    post:
      summary: Add Image to Sheet Summary
      description: Adds an image to the summary field.
      operationId: add-image-summaryField
      tags:
        - sheetSummary
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/0'
        - $ref: >-
            #/paths/~1sheets~1%7BsheetId%7D~1rows~1%7BrowId%7D~1columns~1%7BcolumnId%7D~1cellimages/post/parameters/2
        - $ref: >-
            #/paths/~1sheets~1%7BsheetId%7D~1rows~1%7BrowId%7D~1columns~1%7BcolumnId%7D~1cellimages/post/parameters/3
        - $ref: '#/paths/~1sheets~1%7BsheetId%7D~1rows/post/parameters/3'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          id:
                            description: SummaryField Id.
                            type: number
                          index:
                            description: >-
                              Field index or position. This number is
                              zero-based.
                            type: number
                          title:
                            description: Arbitrary name, must be unique within summary.
                            type: string
                          type:
                            type: string
                            enum:
                              - ABSTRACT_DATETIME
                              - CHECKBOX
                              - CONTACT_LIST
                              - DATE
                              - DATETIME
                              - DURATION
                              - MULTI_CONTACT_LIST
                              - MULTI_PICKLIST
                              - PICKLIST
                              - PREDECESSOR
                              - TEXT_NUMBER
                          locked:
                            description: Indicates whether the field is locked.
                            type: boolean
                          lockedForUser:
                            description: >-
                              Indicates whether the field is locked for the
                              requesting user.
                            type: boolean
                          objectValue:
                            $ref: '#/components/schemas/Cell/properties/objectValue'
                          formula:
                            description: The formula for a cell, if set.
                            type: string
                          image:
                            $ref: '#/components/schemas/Cell/properties/image'
                          createdAt:
                            $ref: >-
                              #/components/schemas/Attachment/properties/createdAt
                          modifiedAt:
                            $ref: >-
                              #/components/schemas/Attachment/properties/createdAt
                          version:
                            description: >-
                              Sheet version number that is incremented every
                              time a sheet is modified.
                            type: number
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sheets/{sheetId}/updaterequests:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Update Requests
      description: >
        Gets a summarized list of all update requests that have future schedules
        associated with the specified sheet.

        Only the following fields are returned in the response:
          * **id**
          * **ccMe**
          * **createdAt**
          * **message**
          * **modifiedAt**
          * **schedule**
          * **sendTo**
          * **sentBy**
          * **subject**
      operationId: updaterequests-list
      tags:
        - updateRequests
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: The list of UpdateRequest objects
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of UpdateRequest objects
                        type: array
                        items:
                          type: object
                          allOf:
                            - $ref: '#/components/schemas/UpdateRequest/allOf/0'
                            - type: object
                              properties:
                                id:
                                  description: Id of the update request.
                                  type: number
                                createdAt:
                                  description: >-
                                    The date and time for when this request was
                                    originally created. Read-only.
                                  allOf:
                                    - $ref: >-
                                        #/components/schemas/Attachment/properties/createdAt
                                modifiedAt:
                                  description: >-
                                    The date and time for when the last change
                                    was made to this request. Read-only.
                                  allOf:
                                    - $ref: >-
                                        #/components/schemas/Attachment/properties/createdAt
                                schedule:
                                  description: >-
                                    The schedule for which update requests are
                                    sent out.
                                  allOf:
                                    - $ref: >-
                                        #/components/schemas/UpdateRequest/allOf/1/properties/schedule/allOf/0
                                sentBy:
                                  description: >
                                    `User` object containing `name` and `email`
                                    of the sender.
                                  allOf:
                                    - $ref: >-
                                        #/components/schemas/Attachment/properties/createdBy/allOf/0
    post:
      summary: Create an Update Request
      description: >
        Creates an update request for the specified rows within the sheet. An
        email notification (containing a link to the update request) is sent to
        the specified recipients according to the specified schedule.


        The recipients of an update request must be specified by using email
        addresses only. Sending an update request to a group is not supported.


        The following attributes have the following values when not specified:

        * **ccMe:** false

        * **message:** Please update the following rows in my online sheet.

        * **subject:** Update Request: {Sheet Name}


        When the Schedule object is not specified, the request is sent to the
        recipients immediately.


        If an error occurs because the request specified one or more *alternate
        email addresses*,

        please retry using the primary email address.
      operationId: updaterequests-create
      tags:
        - updateRequests
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1updaterequests/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
      responses:
        '200':
          description: Result object containing the newly created UpdateRequest object.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1updaterequests/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
  /sheets/{sheetId}/updaterequests/{updateRequestId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - name: updateRequestId
        in: path
        required: true
        description: ID of the Update Request
        schema:
          type: string
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get an Update Request
      description: >
        Gets the specified update request for the sheet that has a future
        schedule.


        The rowIds and columnIds in the returned UpdateRequest object represent
        the list at the time

        the update request was created or last modified. The lists may contain
        Ids of rows or columns

        that are no longer valid (for example, they have been removed from the
        sheet).
      operationId: updaterequests-get
      tags:
        - updateRequests
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: UpdateRequest object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1updaterequests/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
    put:
      summary: Update an Update Request
      description: >
        Changes the specified update request for the sheet.


        **Making changes to update requests that do not have future scheduled
        delivery is not allowed.**


        The UpdateRequest object in the request body must specify one or more of
        the following attributes:


        * **ccMe:** Boolean

        * **columnIds:** number[]

        * **includeAttachments:** Boolean

        * **includeDiscussions:** Boolean

        * **message:** string

        * **schedule:** Schedule object

        * **sendTo:** Recipient[]

        * **subject:** string


        If an error occurs because the request specified one or more *alternate
        email addresses*,

        please retry using the primary email address.
      operationId: updaterequests-update
      tags:
        - updateRequests
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      responses:
        '200':
          description: Result object containing the modified UpdateRequest object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sheets~1%7BsheetId%7D~1updaterequests~1%7BupdateRequestId%7D/get/responses/200/content/application~1json/schema
    delete:
      summary: Delete an Update Request
      description: >
        Terminates the future scheduled delivery of the update request specified
        in the URL.
      operationId: updaterequests-delete
      tags:
        - updateRequests
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SHEETS
            - WRITE_SHEETS
      responses:
        '200':
          description: Result object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1updaterequests~1%7BupdateRequestId%7D/put/responses/200/content/application~1json/schema/allOf/0
  /sheets/{sheetId}/shares:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
    post:
      summary: Share Sheet
      description: Shares a sheet with the specified users and groups.
      operationId: share-sheet
      tags:
        - sharing
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SHEETS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D~1shares/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
                - type: array
                  items:
                    $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >
            Result object containing either a single Share object or an array of
            Share objects, corresponding to what

            was specified in the request. All shares have scope=ITEM.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1sheets~1%7BsheetId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
                          - type: array
                            items:
                              $ref: >-
                                #/paths/~1sheets~1%7BsheetId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        '400':
          description: >
            If called with a single Share object, and that user or group share
            already exists, error code 1025 is returned.

            If called with an array of Share objects, and one or more user or
            group shares in the array already exist,

            they are ignored and omitted from the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1shares/post/responses/400/content/application~1json/schema
    get:
      summary: List Sheet Shares
      description: >
        Gets a list of all users and groups to whom the specified Sheet is
        shared, and their access level. This operation

        supports query string parameters for pagination of results. For more
        information, see Paging Query String Parameters.
      operationId: list-sheet-shares
      tags:
        - sharing
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D~1shares/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: >
            IndexResult object containing an array of Share objects. By default,
            this operation returns only item-level

            shares (scope=ITEM). Use the sharingInclude parameter to request
            that workspace-level shares

            (include=workspaceShares) also be returned.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1sheets~1%7BsheetId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1shares/post/responses/400/content/application~1json/schema
  /sheets/{sheetId}/shares/{shareId}:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1reports~1%7BreportId%7D~1shares~1%7BshareId%7D/parameters/1'
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Sheet Share.
      description: Gets the share specified in the URL.
      operationId: share-sheet-get
      tags:
        - sharing
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: Returns Share object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      summary: Delete Sheet Share
      description: Deletes the share specified in the URL.
      operationId: delete-sheet-share
      tags:
        - sharing
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SHEETS
      responses:
        '200':
          description: Returns Result object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1shares~1%7BshareId%7D/get/responses/default/content/application~1json/schema
    put:
      summary: Update Sheet Share.
      description: Updates the access level of a user or group for the specified sheet.
      operationId: update-sheet-share
      tags:
        - sharing
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SHEETS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessLevel:
                  $ref: '#/components/schemas/Discussion/properties/accessLevel'
      responses:
        '200':
          description: Returns Result object containing the modified Share object.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sheets~1%7BsheetId%7D~1shares~1%7BshareId%7D/delete/responses/200/content/application~1json/schema
                  - type: object
                    properties:
                      result:
                        type: object
                        items:
                          $ref: >-
                            #/paths/~1sheets~1%7BsheetId%7D~1shares~1%7BshareId%7D/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D~1shares~1%7BshareId%7D/get/responses/default/content/application~1json/schema
  /sheets/{sheetId}/sort:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1favorites/post/parameters/0'
    post:
      summary: Sort Rows in Sheet
      description: Sorts the rows of a sheet, either in ascending or descending order.
      operationId: rows-sort
      tags:
        - rows
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - name: include&exclude
          in: query
          required: false
          description: >
            (Optional) Any of the relevant parameters or query parameters listed
            for [Get Sheet](../../tag/sheets#operation/getSheet).
          schema:
            type: string
      requestBody:
        description: >
          [SortSpecifier](../../tag/sheetsObjects#section/SortSpecifier-Object)
          with the following attribute:

          * **sortCriteria** --
          [SortCriterion](../../tag/sheetsObjects#section/SortCriterion-Object)
          array in priority order. Specifies sort order.
        content:
          application/json:
            schema:
              type: object
              properties:
                sortCriteria:
                  description: Specifies sort order. Array is in priority order.
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/SortSpecifier/properties/sortCriteria/items
      responses:
        '200':
          description: >-
            Returns [Sheet
            object](../../tag/sheetsObjects#section/Sheet-Object), populated
            according to the specified parameters.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Folder/properties/sheets/items'
  /sheets/{sheetId}/version:
    parameters:
      - $ref: '#/paths/~1search~1sheets~1%7BsheetId%7D/parameters/0'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Sheet Version
      description: |
        Gets the sheet version without loading the entire sheet.
        The following actions increment sheet version:
        * add/modify cell value
        * add/modify discussion/comment
        * add/modify row
        * add/remove/update version attachment
        * cell updated via cell link
        * change formatting
      operationId: get-sheetVersion
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sheets~1%7BsheetId%7D/get/responses/200/content/application~1json/schema/oneOf/1
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sights:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      operationId: list-sights
      summary: List Dashboards
      description: Gets a list of all dashboards that the user has access to.
      tags:
        - dashboards
      security:
        - APIToken: []
        - OAuth2:
            - READ_SIGHTS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/1'
        - $ref: '#/paths/~1contacts/get/parameters/2'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: >
            IndexResult object containing an array of Dashboard objects with a
            subset of attributes.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: List of Dashboards
                        type: array
                        items:
                          type: object
                          allOf:
                            - type: object
                              allOf:
                                - type: object
                                  properties:
                                    name:
                                      description: Dashboard name.
                                      type: string
                              properties:
                                id:
                                  description: Dashboard Id.
                                  type: number
                                  readOnly: true
                                accessLevel:
                                  $ref: >-
                                    #/components/schemas/Discussion/properties/accessLevel
                                permalink:
                                  description: >-
                                    URL that represents a direct link to the
                                    dashboard in Smartsheet.
                                  type: string
                                  readOnly: true
                          properties:
                            createdAt:
                              $ref: >-
                                #/components/schemas/Attachment/properties/createdAt
                            modifiedAt:
                              $ref: >-
                                #/components/schemas/Attachment/properties/createdAt
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sights/{sightId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - name: sightId
        in: path
        required: true
        description: SightID of the sight being accessed.
        schema:
          type: string
    get:
      summary: Get Dashboard
      description: Gets the specified dashboard.
      operationId: get-sight
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of optional elements to include in the
            response:
              * **objectValue** - when used in combination with a **level** query parameter,
            includes the email addresses for multi-contact data.
              * **source** - the Source object for any Sight that was created from another
            Sight, if any
          schema:
            type: string
            enum:
              - objectValue
              - source
        - name: level
          in: query
          required: false
          description: >-
            Specifies whether new functionality, such as multi-contact data is
            returned in a backwards-compatible, text format (**level=0**,
            default), multi-contact data (**level=2**), multi-picklist data
            (**level=3**), or Metric widget with sheet summary (**level=4**).
          schema:
            type: integer
            default: 0
        - $ref: '#/paths/~1contacts/get/parameters/2'
      tags:
        - dashboards
      security:
        - APIToken: []
        - OAuth2:
            - READ_SIGHTS
      responses:
        '200':
          description: Dashboard object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder/properties/sights/items'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    put:
      summary: Update Dashboard
      description: Updates (renames) the specified dashboard.
      operationId: update-sight
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/2'
        - $ref: '#/paths/~1favorites/post/parameters/0'
      tags:
        - dashboards
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SIGHTS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Dashboard name.
                  type: string
      responses:
        '200':
          description: Result object containing the updated Dashboard object.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1reports~1%7BreportId%7D~1publish/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sights~1%7BsightId%7D/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sights~1%7BsightId%7D/get/responses/default/content/application~1json/schema
    delete:
      summary: Delete Dashboard
      description: Deletes the dashboard specified in the URL.
      operationId: delete-sight
      tags:
        - dashboards
      security:
        - APIToken: []
        - OAuth2:
            - DELETE_SIGHTS
      responses:
        '200':
          description: Generic response result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sights~1%7BsightId%7D/get/responses/default/content/application~1json/schema
  /sights/{sightId}/copy:
    post:
      summary: Copy Dashboard
      description: Creates a copy of the specified dashboard.
      operationId: copy-sight
      tags:
        - dashboards
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SIGHTS
      parameters:
        - $ref: '#/paths/~1contacts/parameters/0'
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - $ref: '#/paths/~1sights~1%7BsightId%7D/parameters/1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1folders~1%7BfolderId%7D~1copy/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >
            Result object containing a dashboard with a subset of attributes for
            the newly created dashboard.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1reports~1%7BreportId%7D~1publish/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: object
                        allOf:
                          - type: object
                            properties:
                              name:
                                description: Dashboard name.
                                type: string
                        properties:
                          id:
                            description: Dashboard Id.
                            type: number
                            readOnly: true
                          accessLevel:
                            $ref: >-
                              #/components/schemas/Discussion/properties/accessLevel
                          permalink:
                            description: >-
                              URL that represents a direct link to the dashboard
                              in Smartsheet.
                            type: string
                            readOnly: true
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sights/{sightId}/move:
    post:
      summary: Move Dashboard
      description: Moves the specified dashboard to a new location.
      operationId: move-sight
      tags:
        - dashboards
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SIGHTS
      parameters:
        - $ref: '#/paths/~1contacts/parameters/0'
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - $ref: '#/paths/~1sights~1%7BsightId%7D/parameters/1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1folders~1%7BfolderId%7D~1copy/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >
            Result object containing a Dashboard object with a subset of
            attributes for the moved dashboard.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1reports~1%7BreportId%7D~1publish/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sights~1%7BsightId%7D~1copy/post/responses/200/content/application~1json/schema/allOf/1/properties/result
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /sights/{sightId}/publish:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1sights~1%7BsightId%7D/parameters/1'
    get:
      summary: Get Dashboard Publish Status
      description: Gets the dashboard 'publish' settings.
      operationId: get-sight-publish-status
      tags:
        - dashboards
      security:
        - APIToken: []
        - OAuth2:
            - READ_SIGHTS
      responses:
        '200':
          description: SightPublish object
          content:
            application/json:
              schema:
                description: Describes the dashboard's publish settings.
                type: object
                properties:
                  readOnlyFullAccessibleBy:
                    description: >
                      Indicates who can access the 'Read-Only Full' view of the
                      published dashboard. Only returned in the response if
                      **readOnlyFullEnabled = true**.
                        * **ALL** - available to anyone who has the link.
                        * **ORG** - available only to members of the dashboard owner's
                      Smartsheet organization account.
                        * **SHARED** - available only to users shared to the item.

                      ---

                      If **readOnlyFullEnabled** is set to true in the request,
                      but **readOnlyFullAccessibleBy** is not specified, the
                      value of **readOnlyFullAccessibleBy** defaults to the
                      organization-level 'Dashboard Publishing' setting (if the
                      dashboard owner belongs to an organization account) or to
                      **ALL** (if the dashboard owner does not belong to an
                      organization account).
                    type: string
                    enum:
                      - ALL
                      - ORG
                  readOnlyFullEnabled:
                    description: >-
                      If true, a rich version of the dashboard is published with
                      the ability to use shortcuts and widget interactions.
                    type: boolean
                  readOnlyFullUrl:
                    description: >-
                      URL for 'Read-Only Full' view of the published dashboard.
                      Only returned in a response if readOnlyFullEnabled = true.
                    type: string
                    readOnly: true
                required:
                  - readOnlyFullEnabled
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    put:
      summary: Set Dashboard Publish Status
      description: Publishes or unpublishes a dashboard.
      operationId: set-sight-publish-status
      tags:
        - dashboards
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_SIGHTS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1sights~1%7BsightId%7D~1publish/get/responses/200/content/application~1json/schema
      responses:
        '200':
          description: SightPublish object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1reports~1%7BreportId%7D~1publish/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1sights~1%7BsightId%7D~1publish/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sights~1%7BsightId%7D~1publish/get/responses/default/content/application~1json/schema
  /sights/{sightId}/shares:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      - $ref: '#/paths/~1sights~1%7BsightId%7D/parameters/1'
    post:
      summary: Share Dashboard
      description: Shares a dashboard with the specified users and groups.
      operationId: share-sight
      tags:
        - dashboards
        - sharing
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SIGHTS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D~1shares/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >
            Result object containing either a single Share object or an array of
            Share objects, corresponding to what was

            specified in the request. All shares have scope=ITEM.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1sights~1%7BsightId%7D~1shares/post/requestBody/content/application~1json/schema
                          - type: array
                            items:
                              $ref: >-
                                #/paths/~1sights~1%7BsightId%7D~1shares/post/requestBody/content/application~1json/schema
        '400':
          description: >
            If called with a single Share object, and that user or group share
            already exists, error code 1025 is returned.

            If called with an array of Share objects, and one or more user or
            group shares in the array already exist,

            they are ignored and omitted from the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sights~1%7BsightId%7D~1shares/post/responses/400/content/application~1json/schema
    get:
      summary: List Dashboard Shares
      description: >-
        Gets a list of all users and groups to whom the specified dashboard is
        shared, and their access level.
      operationId: list-sight-shares
      tags:
        - dashboards
        - sharing
      security:
        - APIToken: []
        - OAuth2:
            - READ_SIGHTS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D~1shares/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: >
            IndexResult object containing an array of Share objects. By default,
            this operation returns only item-level

            shares (scope=ITEM). Use the sharingInclude parameter to request
            that workspace-level shares (scope=WORKSPACE)

            also be returned.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1sights~1%7BsightId%7D~1shares/post/requestBody/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sights~1%7BsightId%7D~1shares/post/responses/400/content/application~1json/schema
  /sights/{sightId}/shares/{shareId}:
    parameters:
      - $ref: '#/paths/~1sights~1%7BsightId%7D/parameters/1'
      - $ref: '#/paths/~1reports~1%7BreportId%7D~1shares~1%7BshareId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Dashboard Share
      description: >-
        Gets a list of all users and groups to whom the specified dashboard is
        shared, and their access level.
      operationId: share-sight-get
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      tags:
        - dashboards
        - sharing
      security:
        - APIToken: []
        - OAuth2:
            - READ_SIGHTS
      responses:
        '200':
          description: Returns Share object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      summary: Delete Dashboard Share
      description: Deletes the share specified in the URL.
      operationId: delete-sight-share
      tags:
        - dashboards
        - sharing
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SIGHTS
      responses:
        '200':
          description: Returns Result object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sights~1%7BsightId%7D~1shares~1%7BshareId%7D/get/responses/default/content/application~1json/schema
    put:
      summary: Update Dashboard Share
      description: Updates the access level of a user or group for the specified dashboard.
      operationId: update-sight-share
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      tags:
        - dashboards
        - sharing
      security:
        - APIToken: []
        - OAuth2:
            - SHARE_SIGHTS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessLevel:
                  $ref: '#/components/schemas/Discussion/properties/accessLevel'
      responses:
        '200':
          description: Returns Result object containing the modified Share object.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1sights~1%7BsightId%7D~1shares~1%7BshareId%7D/delete/responses/200/content/application~1json/schema
                  - type: object
                    properties:
                      result:
                        type: object
                        items:
                          $ref: >-
                            #/paths/~1sights~1%7BsightId%7D~1shares~1%7BshareId%7D/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1sights~1%7BsightId%7D~1shares~1%7BshareId%7D/get/responses/default/content/application~1json/schema
  /templates:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List User-Created Templates
      description: Gets a list of user-created templates that the user has access to.
      operationId: templates-list
      tags:
        - templates
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of Templates
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Folder/properties/templates/items
  /templates/public:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: List Public Templates
      description: Gets a list of public templates that the user has access to.
      operationId: templates-listPublic
      tags:
        - templates
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - name: level
          in: query
          required: false
          description: >-
            Level of public template types. 0 refers to only Sheet types, 1
            refers to all types.
          schema:
            type: number
            enum:
              - 0
              - 1
            default: 0
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of Templates
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Folder/properties/templates/items
  /token:
    post:
      summary: Gets or Refreshes an Access Token
      description: Gets or refreshes an access token, as part of the OAuth process.
      operationId: tokens-getOrRefresh
      tags:
        - token
      parameters:
        - name: Content-Type
          in: header
          description: >
            Required for POST and PUT requests. Defines the structure for the
            response.
          schema:
            type: string
            enum:
              - application/x-www-form-urlencoded
        - in: query
          name: client_id
          schema:
            type: string
          description: The client Id you obtained when you registered your app.
          required: true
        - in: query
          name: client_secret
          schema:
            type: string
          description: >-
            (Optional) Must use either this value or hash. Plain text method for
            sending this value. For example, client_secret={app_secret}.
            Encryption occurs at the HTTPS level.
        - in: query
          name: code
          schema:
            type: string
          description: >-
            Authorization code acquired after user selects "Allow" in the Web
            login UI.
        - in: query
          name: grant_type
          schema:
            type: string
            enum:
              - authorization_code
              - refresh_token
          required: true
          description: Must be set to "authorization_code".
        - in: query
          name: hash
          schema:
            type: string
          description: >-
            (Optional) Must use either this value or client_secret. SHA-256 hash
            of your app secret concatenated with a pipe and the authorization
            code. For example, hash={SHA_256(app_secret|code)}.
        - in: query
          name: refresh_token
          schema:
            type: string
          description: refresh_token value that came with the access token.
        - in: query
          name: redirect_url
          schema:
            type: string
          description: >-
            Deprecated. If supplied, must match the redirect URI you registered
            for your app.
      responses:
        '200':
          description: An access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    description: >-
                      A credential that can be used by a client to access the
                      Smartsheet API.
                    type: string
                    readOnly: true
                  token_type:
                    description: >-
                      How an access token will be generated and presented.
                      Smartsheet uses the bearer parameter, which means
                      essentially give access to the bearer of this token.
                    type: string
                    readOnly: true
                  expires_in:
                    description: Number of seconds token is valid once issued.
                    type: number
                    default: 604799
                    readOnly: true
                  refresh_token:
                    description: >-
                      A credential tied to the access token that can be used to
                      obtain a fresh access token with the same permissions,
                      without further involvement from a user.
                    type: string
                    readOnly: true
        default:
          description: Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      summary: Revoke Access Token
      description: >-
        Revokes the access token used to make this request. The access token is
        no longer valid, and subsequent API calls made using the token fail.
      operationId: tokens-delete
      tags:
        - token
      parameters:
        - $ref: '#/paths/~1contacts/parameters/0'
        - name: deleteAllForApiClient
          in: query
          schema:
            type: boolean
            default: false
          description: >-
            The client Id and user Id is fetched based on the token that is used
            to make this API call. A value of true deletes all tokens associated
            to the given client Id and user Id.
          required: false
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1token/post/responses/default/content/application~1json/schema
  /users:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      operationId: list-users
      summary: List Users
      description: >
        Gets a list of users in the organization account. To filter by email,
        use the optional email query string parameter to specify a list of
        users' email addresses.


        **NOTE:** If the API request is submitted by a system administrator, the
        following User object attributes are included in the response (else,
        they are omitted from the response):
          * **admin**
          * **groupAdmin**
          * **licensedSheetCreator**
          * **resourceViewer**
          * **sheetCount (omitted if the status attribute is not ACTIVE)**
          * **status**

        **NOTE:** If the API request is submitted by a system administrator of
        an Enterprise account, and [Custom Welcome
        Screen](https://help.smartsheet.com/articles/1392225-customizing-a-welcome-message-upgrade-screen-enterprise-only)
        is enabled, the following [User
        object](../../tag/usersObjects#section/User-Object) attributes are
        included in the response (else, they are omitted from the response):
          * **customWelcomeScreenViewed** (omitted if the user has never viewed the
        [Custom Welcome
        Screen](https://help.smartsheet.com/articles/1392225-customizing-a-welcome-message-upgrade-screen-enterprise-only))
      tags:
        - users
      security:
        - APIToken: []
        - OAuth2:
            - READ_USERS
      parameters:
        - name: email
          description: >-
            Comma-separated list of email addresses on which to filter the
            results.
          in: query
          required: false
          schema:
            type: string
        - name: include
          description: >
            If the API request is submitted by a system administrator and when
            specified with a value of 'lastLogin', response includes a lastLogin
            attribute for each user that indicates the Last login date/time of
            the user.


            **Note** If the number of users included in the response is > 100,
            you must paginate your query to see the lastLogin attribute. For
            large responses, the lastLogin attribute is never included.
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/1'
        - $ref: '#/paths/~1contacts/get/parameters/2'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: >
            IndexResult object containing an array of [User
            objects](../../tag/usersObjects#section/User-Object)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: List of User Objects
                        type: array
                        items:
                          description: User Object
                          type: object
                          properties:
                            id:
                              description: User Id.
                              type: number
                              readOnly: true
                              example: 48569348493401200
                            admin:
                              description: >-
                                Indicates whether the user is a system admin
                                (can manage user accounts and organization
                                account).
                              type: boolean
                              default: false
                              example: true
                            customWelcomeScreenViewed:
                              description: >-
                                Timestamp of viewing an [Enterprise Custom
                                Welcome
                                Screen](https://help.smartsheet.com/articles/1392225-customizing-a-welcome-message-upgrade-screen-enterprise-only)
                                by the current user.
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-25T12:15:47Z'
                            email:
                              description: User's primary email address.
                              type: string
                              format: email
                              example: jane.doe@smartsheet.com
                            firstName:
                              description: User's first name.
                              type: string
                              example: Jane
                            groupAdmin:
                              description: >-
                                Indicates whether the user is a group admin (can
                                create and edit groups).
                              type: boolean
                              default: false
                              example: true
                            lastLogin:
                              description: Last login time of the current user.
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-10-04T18:32:47Z'
                            lastName:
                              description: User's last name.
                              type: string
                              example: Doe
                            licensedSheetCreator:
                              description: >-
                                Indicates whether the user is a licensed user
                                (can create and own sheets).
                              type: boolean
                              default: false
                              example: true
                            name:
                              description: User's full name (read-only).
                              type: string
                              readOnly: true
                              example: Jane Doe
                            profileImage:
                              $ref: >-
                                #/components/schemas/User/properties/profileImage
                            resourceViewer:
                              description: >-
                                Indicates whether the user is a resource viewer
                                (can access resource views).
                              type: boolean
                              default: false
                              example: true
                            sheetCount:
                              description: >-
                                The number of sheets owned by the current user
                                within the organization account.
                              type: number
                              readOnly: true
                              example: 42
                            status:
                              description: >-
                                User status, set to one of the listed enum
                                values.
                              type: string
                              enum:
                                - ACTIVE
                                - DECLINED
                                - PENDING
                                - DEACTIVATED
                              example: ACTIVE
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      operationId: add-user
      summary: Add User
      description: >
        Adds a user to the organization account.


        * **_This operation is only available to system administrators_**


        * **If successful, and user auto provisioning (UAP) is on, and user
        matches the auto provisioning rules, user is added to the org. If UAP is
        off, or user does not match UAP rules, user is invited to the org and
        must explicitly accept the invitation to join.**


        * **In some specific scenarios, supplied attributes such as firstName
        and lastName may be ignored. For example, if you are inviting an
        existing Smartsheet user to join your organization account, and the
        invited user has not yet accepted your invitation, any supplied
        firstName and lastName are ignored.**
      tags:
        - users
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D~1shares/post/parameters/0'
      requestBody:
        description: The User to be created
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1users/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
      responses:
        '200':
          description: >
            Result object containing the newly created [User
            object](../../tag/usersObjects#section/User-Object).
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1users/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: >
            If an error occurs because the request specified the alternate email
            address (that is, not the primary email address) of an existing
            Smartsheet user (to invite the user into the org), the Error object
            returned contains a detail attribute set to an array of objects,
            each object in the array having the following attributes:

              * alternateEmailAddress: User's alternate email address that was specified
            in the request
              * primaryEmailAddress: User's primary email address that must instead
            be specified for the operation

            For example:

            ```

            {
              "errorCode": 5xxx,
              "message": "The specified email address (u1+1@smartsheet.com) is an
            alternate address for a user with the primary email address of
            u1@smartsheet.com. Please retry using their primary address."
              "detail": [
                  {
                    "alternateEmailAddress": "u1+1@smartsheet.com",
                    "primaryEmailAddress": "u1@smartsheet.com"
                  }
              ]
            }

            ```
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1users/get/responses/default/content/application~1json/schema
  /users/me:
    get:
      operationId: get-current-user
      summary: Get Current User
      description: >
        Gets the current user


        **NOTE:** For system administrators, the following UserProfile
        attributes are included in the response:
          * **customWelcomeScreenViewed** (only returned when an Enterprise user has
        viewed the [Custom Welcome
        Screen](https://help.smartsheet.com/articles/1392225-customizing-a-welcome-message-upgrade-screen-enterprise-only))
          * **lastLogin** (only returned if the user has logged in)
          * **sheetCount** (only returned if the status attribute is ACTIVE; however,
        to increase performance, this returns a static '0')
      tags:
        - users
      security:
        - APIToken: []
        - OAuth2: []
      parameters:
        - $ref: '#/paths/~1contacts/parameters/0'
        - name: include
          description: >-
            When specified with a value of 'groups', response includes an array
            of groups (groupId, name, and description only) that the user is a
            member of.
          in: query
          required: false
          schema:
            type: string
            enum:
              - groups
      responses:
        '200':
          description: |
            IndexResultUnknownPages object containing a UserProfile object.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        description: Current user's Id.
                        type: number
                        example: 48569348493401200
                      account:
                        $ref: '#/components/schemas/UserProfile/properties/account'
                      admin:
                        description: >-
                          Indicates whether the user is a system admin (can
                          manage user accounts and organization account).
                        type: boolean
                        example: true
                      alternateEmails:
                        $ref: >-
                          #/components/schemas/UserProfile/properties/alternateEmails
                      company:
                        description: User's company.
                        type: string
                        example: Smartsheet
                      customWelcomeScreenViewed:
                        description: >-
                          Timestamp of viewing an [Enterprise Custom Welcome
                          Screen](https://help.smartsheet.com/articles/1392225-customizing-a-welcome-message-upgrade-screen-enterprise-only)
                          by the current user.
                        type: string
                        format: date-time
                        example: '2020-08-25T12:15:47Z'
                      department:
                        description: User's department.
                        type: string
                        example: Engineering
                      email:
                        description: Current user's primary email address.
                        type: string
                        example: john.doe@smartsheet.com
                      firstName:
                        description: Current user's first name.
                        type: string
                        example: John
                      groupAdmin:
                        description: >-
                          Indicates whether the user is a group admin (can
                          create and edit groups).
                        type: boolean
                        example: true
                      jiraAdmin:
                        description: Indicates whether the user is a JIRA admin.
                        type: boolean
                        example: true
                      lastLogin:
                        description: Last login time of the current user.
                        type: string
                        format: date-time
                        example: '2020-10-31T12:15:47Z'
                      lastName:
                        description: Current user's last name.
                        type: string
                        example: Doe
                      licensedSheetCreator:
                        description: >-
                          Indicates whether the user is a licensed user (can
                          create and own sheets).
                        type: boolean
                        example: true
                      locale:
                        description: >-
                          Current user's locale (see [Server
                          Information](../../tag/serverInfoObjects#section/Server-Info-Object)).
                        type: string
                        example: en_US
                      mobilePhone:
                        description: User's mobile phone number.
                        type: string
                        example: 555-867-5309
                      profileImage:
                        $ref: '#/components/schemas/User/properties/profileImage'
                      resourceViewer:
                        description: >-
                          Indicates whether the user is a resource viewer (can
                          access resource views).
                        type: boolean
                        example: true
                      role:
                        description: User's role.
                        type: string
                        example: Software Developer
                      salesforceAdmin:
                        description: Indicates whether the user is a Salesforce admin.
                        type: boolean
                        example: false
                      salesforceUser:
                        description: >-
                          Indicates whether the user is a registered Salesforce
                          user.
                        type: boolean
                        example: false
                      sheetCount:
                        description: >-
                          Typically, the number of sheets owned by the current
                          user within the organization account. For GET
                          /users/me, this returns a static '0'.
                        type: number
                        example: 0
                      timeZone:
                        description: Current user's time zone Id.
                        type: string
                        example: US/Pacific
                      title:
                        description: User's title.
                        type: string
                        example: Senior Software Engineer
                      workPhone:
                        description: User's work phone number.
                        type: string
                        example: 844-324-2360
                  - type: object
                    properties:
                      data:
                        description: List of Groups
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1groups/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /users/sheets:
    get:
      operationId: list-org-sheets
      summary: List Org Sheets
      description: >
        Gets a summarized list of all sheets owned by the members of the
        organization account.


        * **_This operation is only available to system administrators_**


        * **_You may use the query string parameter numericDates with a value of
        true to enable strict parsing of dates in numeric format. See [Dates and
        Times](#section/API-Basics/Dates-and-Times) for more information._**
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      parameters:
        - $ref: '#/paths/~1contacts/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/1'
      responses:
        '200':
          description: >
            IndexResultUnknownPages object containing an array of Sheet objects,
            limited to the following attributes:


            * id

            * name

            * owner: empty string

            * ownerId: (static "0")
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      pageNumber:
                        description: >-
                          The current page in the full result set that the data
                          array represents. NOTE when a page number greater than
                          totalPages is requested, the last page is instead
                          returned.
                        type: number
                        example: 1
                        readOnly: true
                      pageSize:
                        description: >-
                          The number of items in a page. Omitted if there is no
                          limit to page size (and hence, all results are
                          included). Unless otherwise specified, this defaults
                          to 100 for most endpoints.
                        type: number
                        example: 50
                        nullable: true
                        readOnly: true
                      totalPages:
                        description: >-
                          If the data field value is not empty, returns a static
                          value of -1. When you reach the first empty page after
                          the end of the result set, then all four fields are
                          set with a static value of “0”.
                        type: number
                        example: -1
                        readOnly: true
                      totalCount:
                        description: >-
                          If the data field value is not empty, returns a static
                          value of -1. When you reach the first empty page after
                          the end of the result set, then all four fields are
                          set with a static value of “0”.
                        type: number
                        example: -1
                        readOnly: true
                  - type: object
                    properties:
                      data:
                        description: List of Sheets
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: Sheet Id.
                              type: number
                            name:
                              description: Sheet name.
                              type: string
                            owner:
                              description: Empty string
                              example: ''
                              type: string
                            ownerId:
                              description: Set to a static value of "0".
                              example: 0
                              type: number
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /users/{userId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1groups~1%7BgroupId%7D~1members~1%7BuserId%7D/parameters/2'
    get:
      operationId: get-user
      summary: Get User
      description: >
        Gets the user specified in the URL.


        * NOTE: For system administrators, the following UserProfile attributes
        are included in the response):
          * **admin**
          * **customWelcomeScreenViewed** (only returned when an Enterprise user has
        viewed the [Custom Welcome
        Screen](https://help.smartsheet.com/articles/1392225-customizing-a-welcome-message-upgrade-screen-enterprise-only))
          * **groupAdmin**
          * **lastLogin** (only returned if the user has logged in)
          * **licensedSheetCreator**
          * **resourceViewer**
          * **sheetCount** (only returned if the status attribute is ACTIVE)
          * **status**
      tags:
        - users
      security:
        - APIToken: []
        - OAuth2:
            - READ_USERS
      responses:
        '200':
          description: |
            Returns UserProfile object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1users~1me/get/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      operationId: remove-user
      summary: Remove User
      description: >
        Removes a user from an organization account. User is transitioned to a
        free collaborator with read-only access to owned reports, sheets,
        Sights, workspaces, and any shared templates (unless those are
        optionally transferred to another user).


        * **_This operation is only available to system administrators_**


        * If the **transferTo** parameter is specified and the removed user owns
        groups, the user specified via the **transferTo** parameter must have
        group admin rights.


        * The **transferTo** and **transferSheets** parameters cannot be
        specified for a user who has not yet accepted an invitation to join the
        organization account (that is, if user **status=PENDING**).
      tags:
        - users
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      requestBody:
        content:
          application/json:
            schema:
              description: >
                Removes a user from an organization account. User is
                transitioned to a free collaborator with read-only access to
                owned reports, sheets, Sights, workspaces, and any shared
                templates (unless those are optionally transferred to another
                user).
              type: object
              properties:
                removeFromSharing:
                  description: >
                    * Set to **true** to remove the user from sharing for all
                    sheets/workspaces in the organization account. If not
                    specified, user is not removed from sharing.
                  type: boolean
                  example: true
                transferSheets:
                  description: >
                    * If **true**, and **transferTo** is specified, the removed
                    user's sheets are transferred. Else, sheets are not
                    transferred.
                  type: boolean
                  default: false
                  example: true
                transferTo:
                  description: >
                    (Required if user owns groups.)

                     * The Id of the user to transfer ownership to.
                     * If the user being removed owns groups, they are transferred
                    to this user. If the user owns sheets, and
                    **transferSheets** is true, the removed user's sheets are
                    transferred to this user.
                  type: number
                  example: 94094820842
      responses:
        '200':
          description: |
            Returns Result object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1users~1%7BuserId%7D/get/responses/default/content/application~1json/schema
    put:
      operationId: update-user
      summary: Update User
      description: Updates the user specified in the URL.
      tags:
        - users
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      requestBody:
        description: |
          User object containing at least one of the following attributes:
            * admin (required)
            * licensedSheetCreator (required)
            * firstName (optional)
            * groupAdmin (optional)
            * lastName (optional)
            * resourceViewer (optional)
        content:
          application/json:
            schema:
              description: |
                Updates User for the following attributes:

                * **admin** (required).
                * **licensedSheetCreator** (required).
                * **firstName** (optional).
                * **groupAdmin** (optional).
                * **lastName** (optional).
                * **resourceViewer** (optional).
              type: object
              properties:
                admin:
                  description: >-
                    Indicates whether the user is a system admin (can manage
                    user accounts and organization account).
                  type: boolean
                  default: false
                  example: true
                licensedSheetCreator:
                  description: >-
                    Indicates whether the user is a licensed user (can create
                    and own sheets).
                  type: boolean
                  default: false
                  example: true
                firstName:
                  description: User's first name.
                  type: string
                  example: Jane
                lastName:
                  description: User's last name.
                  type: string
                  example: Doe
                groupAdmin:
                  description: >-
                    Indicates whether the user is a group admin (can create and
                    edit groups).
                  type: boolean
                  default: false
                  example: true
                resourceViewer:
                  description: >-
                    Indicates whether the user is a resource viewer (can access
                    resource views).
                  type: boolean
                  default: false
                  example: true
      responses:
        '200':
          description: >
            Result object containing the [User
            object](../../tag/usersObjects#section/User-Object) for the updated
            user
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1users~1%7BuserId%7D/delete/responses/200/content/application~1json/schema
                  - type: object
                    properties:
                      data:
                        description: Updated User Properties
                        type: array
                        items:
                          description: User profile image response.
                          properties:
                            email:
                              description: User's primary email address.
                              type: string
                              format: email
                              example: jane.doe@smartsheet.com
                            name:
                              description: User's full name (read-only).
                              type: string
                              readOnly: true
                              example: Jane Doe
                            firstName:
                              description: User's first name.
                              type: string
                              example: Jane
                            lastName:
                              description: User's last name.
                              type: string
                              example: Doe
                            profileImage:
                              $ref: >-
                                #/components/schemas/User/properties/profileImage
                            id:
                              description: User Id.
                              type: number
                              readOnly: true
                              example: 48569348493401200
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1users~1%7BuserId%7D/get/responses/default/content/application~1json/schema
  /users/{userId}/alternateemails:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1groups~1%7BgroupId%7D~1members~1%7BuserId%7D/parameters/2'
    get:
      operationId: list-alternate-emails
      summary: List Alternate Emails
      description: Gets a list of the alternate emails for the specified user.
      tags:
        - alternateEmailAddress
      security:
        - APIToken: []
        - OAuth2:
            - READ_USERS
      responses:
        '200':
          description: >
            IndexResult object containing an array of [AlternateEmail
            object](/section/AlternateEmail-Object)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of attachments
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UserProfile/properties/alternateEmails
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      operationId: add-alternate-email
      summary: Add Alternate Emails
      description: |
        Adds one or more alternate email addresses for the specified user.

        **_This operation is only available to system administrators._**
      tags:
        - alternateEmailAddress
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    email:
                      description: User's alternate email address.
                      type: string
                      example: johnathan.doe@smartsheet.com
                - type: array
                  items:
                    $ref: >-
                      #/paths/~1users~1%7BuserId%7D~1alternateemails/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >
            Result object containing an array of the newly created
            [AlternateEmail objects](/section/AlternateEmail-Object).
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: Updated User Properties
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1users~1%7BuserId%7D~1alternateemails/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: >
            If a single email address is specified in the request and an error
            occurs, the response contains an Error object.


            If multiple email addresses are specified in the request and an
            error occurs, the Error object returned contains a detail attribute
            set to an array of objects, each object in the array having the
            following attributes:
              * email: Problematic email address specified in the request
              * errorCode: Smartsheet error code
              * message: Message that describes the problem with the specified email
            address

            For example:

            ```

            {
              "errorCode": 1160,
              "message": "Invalid bulk request. See detail for more information."
              "detail": [
                  {
                    "email": "altEmail1@smartsheet.com",
                    "errorCode": 1157,
                    "message": "This address is already associated with another Smartsheet
            account, so it cannot be added as an alternate address for this
            account."
                  }
              ]
            }

            ```
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1users~1%7BuserId%7D~1alternateemails/get/responses/default/content/application~1json/schema
  /users/{userId}/alternateemails/{alternateEmailId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1groups~1%7BgroupId%7D~1members~1%7BuserId%7D/parameters/2'
      - name: alternateEmailId
        description: Alternate Email Id
        in: path
        required: true
        schema:
          type: number
    get:
      operationId: get-alternate-email
      summary: Get Alternate Email
      description: Gets the specified alternate email.
      tags:
        - alternateEmailAddress
      security:
        - APIToken: []
        - OAuth2:
            - READ_USERS
      responses:
        '200':
          description: |
            Returns [AlternateEmail object](/section/AlternateEmail-Object)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile/properties/alternateEmails'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      operationId: delete-alternate-email
      summary: Delete Alternate Email
      description: Deletes the specified alternate email address for the specified user.
      tags:
        - alternateEmailAddress
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      responses:
        '200':
          description: |
            Returns Result object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1users~1%7BuserId%7D~1alternateemails~1%7BalternateEmailId%7D/get/responses/default/content/application~1json/schema
  /users/{userId}/alternateemails/{alternateEmailId}/makeprimary:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1groups~1%7BgroupId%7D~1members~1%7BuserId%7D/parameters/2'
      - $ref: >-
          #/paths/~1users~1%7BuserId%7D~1alternateemails~1%7BalternateEmailId%7D/parameters/2
    post:
      operationId: promote-alternate-email
      summary: Make Alternate Email Primary
      description: >
        Makes the specified alternate email address to become the primary email
        address for the specified user.


        * **_This operation is only available to system administrators_**


        The alternate email address can only be made primary if both conditions
        are met:
          * The primary email address domain is validated
          * The alternate email address is confirmed or the alternate email address
        domain is validated
      tags:
        - alternateEmailAddress
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of alternate email results
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/UserProfile/properties/alternateEmails
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /users/{userId}/deactivate:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1groups~1%7BgroupId%7D~1members~1%7BuserId%7D/parameters/2'
    post:
      operationId: deactivate-user
      summary: Deactivate User
      description: >
        Deactivates a user in an organization account. User will no longer be
        able to access Smartsheet in any way. User's assets will continue to be
        owned by this user until they are transferred to another user.


        **This operation is only available to system administrators of
        Enterprise organizations.**

        **Additionally, if organizations have Enterprise Plan Manager (EPM)
        enabled, a system administrator of the main plan can provide a userId
        for a user belonging to a managed plan within the EPM hierarchy.**


        **NOTES:**

        * Currently unavailable for Smartsheet GOV (aka the Gov environment).

        * This operation does not apply to users with an ISP based domain
        account (outlook.com, gmail.com, hotmail.com, live.com, yahoo.com,
        aol.com, verizon.net, rocketmail.com, comcast.net, icloud.com,
        charter.net, web.de, mail.com, email.com, usa.com, duck.com, mail.ru).
      tags:
        - users
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      responses:
        '200':
          description: |
            Returns Result object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /users/{userId}/profileimage:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1groups~1%7BgroupId%7D~1members~1%7BuserId%7D/parameters/2'
    post:
      operationId: update-user-profile-image
      summary: Update User Profile Image
      description: >
        Uploads an image to the user profile.


        Uploading a profile image differs from Adding an Image to a Cell in the
        following ways:
          * A **Content-Length** header is not required
          * Allowable file types are limited to: gif, jpg, and png
          * Maximum file size is determined by the following rules:
              * If you have not defined a custom size and the image is larger than
        1050 x 1050 pixels, Smartsheet scales the image down to 1050 x 1050
              * If you have defined a custom size, Smartsheet uses that as the file
        size max
          * If the image is not square, Smartsheet uses a solid color to pad the image
      tags:
        - users
      security:
        - APIToken: []
        - OAuth2:
            - WRITE_SHEETS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                filename:
                  type: string
                  format: binary
          application/json:
            schema:
              $ref: >-
                #/paths/~1sheets~1%7BsheetId%7D~1attachments/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: |
            Returns Result object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: Updated User Properties
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1users~1%7BuserId%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /users/{userId}/reactivate:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1groups~1%7BgroupId%7D~1members~1%7BuserId%7D/parameters/2'
    post:
      operationId: reactivate-user
      summary: Reactivate User
      description: >
        Reactivates a user in an organization account. User will regain to
        access Smartsheet and will have the same roles as when they were
        deactivated.


        **This operation is only available to system administrators of
        Enterprise organizations.**

        **Additionally, if organizations have Enterprise Plan Manager (EPM)
        enabled, a system administrator of the main plan can provide a userId
        for a user belonging to a managed plan within the EPM hierarchy.**


        **NOTES:**

        * Currently unavailable for Smartsheet GOV (aka the Gov environment).

        * This operation does not apply to users with an ISP based domain
        account (outlook.com, gmail.com, hotmail.com, live.com, yahoo.com,
        aol.com, verizon.net, rocketmail.com, comcast.net, icloud.com,
        charter.net, web.de, mail.com, email.com, usa.com, duck.com, mail.ru).
      tags:
        - users
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_USERS
      responses:
        '200':
          description: |
            Returns Result object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /webhooks:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      operationId: list-webhooks
      summary: List Webhooks
      description: >-
        Gets the list of all *webhooks* that the user owns (if a user-generated
        token was used to make the request) or the list of all webhooks
        associated with the third-party app (if a third-party app made the
        request). Items in the response are ordered by API cient name > webhook
        name > creation date.
      tags:
        - webhooks
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WEBHOOKS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: The List of Webhooks
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        description: list of Webhooks
                        type: array
                        items:
                          allOf:
                            - type: object
                              properties:
                                callbackUrl:
                                  description: HTTPS URL where callbacks are sent.
                                  type: string
                                  example: https://www.myApp.com/webhooks
                                enabled:
                                  description: >-
                                    Indicates whether the webhook is on (true)
                                    or off (false). ReadOnly for POST commands.
                                  type: boolean
                                  example: true
                                events:
                                  description: >-
                                    Array of the events that are subscribed to.
                                    Currently, must be an array of size 1 that
                                    contains the string value '\*.\*' (asterisk
                                    period asterisk), which means "all objects"
                                    and "all events".
                                  type: array
                                  items:
                                    type: string
                                    example: '*.*'
                                name:
                                  description: Webhook name.
                                  type: string
                                  example: Webhook for Sheet Creation
                                version:
                                  description: >-
                                    Webhook version. Currently, the only
                                    supported value is 1. This attribute is
                                    intended to ensure backward compatibility as
                                    new webhook functionality is released. For
                                    example, a webhook with a version of 1 is
                                    guaranteed to always be sent callback
                                    objects that are compatible with the version
                                    1 release of webhooks.
                                  type: number
                                  example: 1
                                  minimum: 1
                                  maximum: 1
                            - type: object
                              properties:
                                id:
                                  description: Webhook Id.
                                  type: number
                                  readOnly: true
                                  example: 8444254503626628
                                apiClientId:
                                  type: string
                                  description: >-
                                    API client Id corresponding to third-party
                                    app that created the webhook. Read-only.
                                    Only present if webhook was created by
                                    third-party app.
                                  readOnly: true
                                  example: 555555
                                scopeObjectId:
                                  type: number
                                  description: >-
                                    Id of the object that is subscribed to.
                                    Specified when a webhook is created and
                                    cannot be changed.
                                  example: 3285357287499652
                                apiClientName:
                                  type: string
                                  description: >-
                                    API client name corresponding to third-party
                                    app that created the webhook. Read-only.
                                    Only present if webhook was created by
                                    third-party app.
                                  readOnly: true
                                  example: Awesome Smartsheet Application
                                createdAt:
                                  readOnly: true
                                  allOf:
                                    - $ref: >-
                                        #/components/schemas/Attachment/properties/createdAt
                                disabledDetails:
                                  description: >-
                                    Details about the reason the webhook was
                                    disabled. Read-only. Only present when
                                    enabled=false.
                                  type: string
                                  readOnly: true
                                modifiedAt:
                                  readOnly: true
                                  allOf:
                                    - $ref: >-
                                        #/components/schemas/Attachment/properties/createdAt
                                scope:
                                  description: >-
                                    Scope of the subscription. Currently, the
                                    only supported value is sheet. Specified
                                    when a webhook is created and cannot be
                                    changed.
                                  type: string
                                  example: sheet
                                sharedSecret:
                                  description: >-
                                    Shared secret for this Webhook, randomly
                                    generated by Smartsheet. Read-only. See
                                    [Authenticating
                                    Callbacks](../../tag/webhooksDescription#section/Webhook-Callbacks/Authenticating-Callbacks-(optional))
                                    for details about how this value can be
                                    used.
                                  type: string
                                  readOnly: true
                                  example: 216ejjzdnq17mq1q8xs7d4hu8b
                                stats:
                                  type: object
                                  readOnly: true
                                  properties:
                                    lastCallbackAttempt:
                                      type: string
                                      format: date-time
                                      readOnly: true
                                      description: >-
                                        When this webhook last made a callback
                                        attempt.
                                    lastCallbackAttemptRetryCount:
                                      type: number
                                      readOnly: true
                                      description: >-
                                        The number of retries the webhook had
                                        performed as of the last callback
                                        attempt.
                                    lastSuccessfulCallback:
                                      type: string
                                      format: date-time
                                      readOnly: true
                                      description: >-
                                        When this webhook last made a successful
                                        callback.
                                status:
                                  description: >-
                                    Webhook status. Read-only. See Webhook
                                    Status for list of possible values.
                                  type: string
                                  readOnly: true
                                  enum:
                                    - DISABLED_ADMINISTRATIVE
                                    - DISABLED_APP_REVOKED
                                    - DISABLED_BY_OWNER
                                    - DISABLED_CALLBACK_FAILED
                                    - DISABLED_SCOPE_INACCESSIBLE
                                    - DISABLED_VERIFICATION_FAILED
                                    - ENABLED
                                    - NEW_NOT_VERIFIED
                                  example: ENABLED
                                subscope:
                                  $ref: >-
                                    #/components/schemas/Webhook/allOf/1/properties/subscope
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      summary: Create Webhook
      description: >
        Creates a new Webhook.


        A webhook is not enabled by default when it is created.

        Once you've created a webhook, you can enable it by using the Update
        Webhook operation to set **enabled** to **true**.


        When a row is deleted on a sheet, even if you are using a **subscope**
        to monitor columns only

        and the cell in that column for that row is empty, you will receive a
        "row.deleted" event.
      operationId: createWebhook
      tags:
        - webhooks
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WEBHOOKS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: >-
                    #/paths/~1webhooks/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
                - type: object
                  required:
                    - callbackUrl
                    - events
                    - name
                    - scope
                    - scopeObjectId
                    - version
      responses:
        '200':
          description: >-
            Result object, containing a Webhook object for the newly created
            webhook
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1webhooks/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1webhooks/get/responses/default/content/application~1json/schema
  /webhooks/{webhookId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - name: webhookId
        in: path
        required: true
        description: The Id of a Webhook
        schema:
          type: string
    get:
      summary: Get Webhook
      description: Gets a Webhook based on the specified ID
      operationId: getWebhook
      tags:
        - webhooks
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WEBHOOKS
      responses:
        '200':
          description: Webhook object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1webhooks/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
    put:
      summary: Update Webhook
      description: >
        Updates the specified Webhook. The following properties can be updated:

        * callbackUrl (optional)

        * enabled (optional)

        * events (optional)

        * name (optional)

        * version (optional)


        When setting a webhook's **enabled** to **true** using this operation,

        the behavior and result depend on the webhook's **status** and may
        result in a webhook verification being triggered,

        or in some cases, an error being returned. See Webhook Status for more
        details.
      operationId: updateWebhook
      tags:
        - webhooks
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WEBHOOKS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callbackUrl:
                  description: HTTPS URL where callbacks are sent.
                  type: string
                  example: https://www.myApp.com/webhooks
                enabled:
                  description: >-
                    Indicates whether the webhook is on (true) or off (false).
                    ReadOnly for POST commands.
                  type: boolean
                  example: true
                events:
                  description: >-
                    Array of the events that are subscribed to. Currently, must
                    be an array of size 1 that contains the string value '\*.\*'
                    (asterisk period asterisk), which means "all objects" and
                    "all events".
                  type: array
                  items:
                    type: string
                    example: '*.*'
                name:
                  description: Webhook name.
                  type: string
                  example: Webhook for Sheet Creation
                version:
                  description: >-
                    Webhook version. Currently, the only supported value is 1.
                    This attribute is intended to ensure backward compatibility
                    as new webhook functionality is released. For example, a
                    webhook with a version of 1 is guaranteed to always be sent
                    callback objects that are compatible with the version 1
                    release of webhooks.
                  type: number
                  example: 1
                  minimum: 1
                  maximum: 1
      responses:
        '200':
          description: Result object containing the Webhook object for the updated webhook
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1webhooks~1%7BwebhookId%7D/get/responses/200/content/application~1json/schema
    delete:
      summary: Delete Webhook
      description: >
        Deletes the specified Webhook.


        Using this operation permanently deletes the specified webhook.

        To temporarily disable a webhook, use the Update Webhook operation to
        set **enabled** to **false**.
      operationId: deleteWebhook
      tags:
        - webhooks
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WEBHOOKS
      responses:
        '200':
          description: Result object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1webhooks~1%7BwebhookId%7D/put/responses/200/content/application~1json/schema/allOf/0
  /webhooks/{webhookId}/resetSharedSecret:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1webhooks~1%7BwebhookId%7D/parameters/1'
    post:
      summary: Reset Shared Secret
      description: >-
        Resets the shared secret for the specified webhook. For more information
        about how a shared secret is used, see Authenticating Callbacks.

        This operation can be used to rotate an API client's webhooks' shared
        secrets at periodic intervals to provide additional security.
      operationId: resetSharedSecret
      tags:
        - webhooks
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WEBHOOKS
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          sharedSecret:
                            description: Value for the shared secret.
                            type: string
  /workspaces:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
    get:
      summary: List Workspaces
      description: >
        Gets a list of workspaces that the user has access to. The list contains
        an abbreviated Workspace object for each workspace.
      tags:
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      operationId: list-workspaces
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: IndexResult object containing an array of Workspace objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/Scope/properties/workspaces/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      summary: Create Workspace
      description: |
        Creates a new workspace.
      operationId: create-workspace
      tags:
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - name: include
          in: query
          required: false
          description: >
            A comma-separated list of elements to include:
              * **all**
              * **attachments**
              * **brand**
              * **cellLinks** - includes cross-sheet references
              * **data** - includes formatting
              * **discussions** - includes comments
              * **filters**
              * **forms**
              * **ruleRecipients**
              * **rules**
              * **shares**
            NOTE: Cell history is not copied, regardless of which include
            parameter values are specified.
          schema:
            type: string
            enum:
              - all
              - attachments
              - brand
              - cellLinks
              - data
              - discussions
              - filters
              - forms
              - ruleRecipients
              - rules
              - shares
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1copy/post/parameters/3'
      requestBody:
        description: Workspace to create.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1workspaces/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
      responses:
        '200':
          description: >-
            Result object containing a Workspace object for newly created
            workspace.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - $ref: >-
                              #/paths/~1workspaces/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1workspaces/get/responses/default/content/application~1json/schema
  /workspaces/{workspaceId}:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - name: workspaceId
        in: path
        schema:
          type: string
        required: true
        description: WorkspaceID of the worksheet being accessed.
    get:
      summary: Get Workspace
      description: Gets a Workspace object.
      tags:
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      operationId: get-workspace
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D/get/parameters/0'
      responses:
        '200':
          description: A single Workspace object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope/properties/workspaces/items'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      summary: Delete Workspace
      description: Deletes a workspace.
      tags:
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      operationId: delete-workspace
      responses:
        '200':
          description: |
            Returns Result object
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1workspaces~1%7BworkspaceId%7D/get/responses/default/content/application~1json/schema
    put:
      summary: Update Workspace
      description: Updates a workspace.
      operationId: update-workspace
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      tags:
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Workspace name.
                  type: string
      responses:
        '200':
          description: Result object containing the modified Workspace object.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1workspaces~1%7BworkspaceId%7D/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1workspaces~1%7BworkspaceId%7D/get/responses/default/content/application~1json/schema
  /workspaces/{workspaceId}/copy:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1workspaces~1%7BworkspaceId%7D/parameters/1'
    post:
      summary: Copy Workspace
      description: Copies a workspace.
      tags:
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      operationId: copy-workspace
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - $ref: '#/paths/~1workspaces/post/parameters/1'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1copy/post/parameters/3'
      requestBody:
        description: New workspace name.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1folders~1%7BfolderId%7D~1copy/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >-
            Result object containing a Workspace object for the new workspace
            destination.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1workspaces~1%7BworkspaceId%7D~1copy/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /workspaces/{workspaceId}/folders:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1workspaces~1%7BworkspaceId%7D/parameters/1'
    get:
      summary: Get Workspace folders
      description: Gets a workspace's folders.
      tags:
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      operationId: get-workspace-folders
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/0'
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
      responses:
        '200':
          description: An array of Folder objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/Folder/properties/folders/items'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    post:
      summary: Create a Folder
      description: |
        Creates a new folder.
      operationId: create-workspace-folder
      tags:
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      parameters:
        - $ref: '#/paths/~1favorites/post/parameters/0'
      requestBody:
        description: Folder to create.
        required: true
        content:
          application/json:
            schema:
              description: Can contain dashboards, folders, reports, sheets, or templates.
              type: object
              properties:
                name:
                  description: Folder name.
                  type: string
      responses:
        '200':
          description: Result object containing a Folder object for newly created folder.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        description: >-
                          Can contain dashboards, folders, reports, sheets, or
                          templates.
                        type: object
                        properties:
                          name:
                            description: Folder name.
                            type: string
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1workspaces~1%7BworkspaceId%7D~1folders/get/responses/default/content/application~1json/schema
  /workspaces/{workspaceId}/shares:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      - $ref: '#/paths/~1workspaces~1%7BworkspaceId%7D/parameters/1'
    post:
      summary: Share Workspace
      description: >
        Shares a Workspace with the specified users and groups. This operation
        supports both single-object and bulk semantics.


        **_This operation is only available to system administrators._**
      operationId: share-workspace
      tags:
        - sharing
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D~1shares/post/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
                - type: array
                  items:
                    $ref: >-
                      #/paths/~1workspaces~1%7BworkspaceId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
      responses:
        '200':
          description: >
            This operation supports both single-object and bulk semantics. For
            more information, see Optional Bulk Operations.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1workspaces~1%7BworkspaceId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
                          - type: array
                            items:
                              $ref: >-
                                #/paths/~1workspaces~1%7BworkspaceId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        '400':
          description: >
            If called with a single Share object, and that user or group share
            already exists, error code 1025 is returned.

            If called with an array of Share objects, and one or more user or
            group shares in the array already exist,

            they are ignored and omitted from the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1workspaces~1%7BworkspaceId%7D~1shares/post/responses/400/content/application~1json/schema
    get:
      summary: List Workspace Shares
      description: >-
        Gets a list of all users and groups to whom the specified Workspace is
        shared, and their access level.
      operationId: list-workspace-shares
      tags:
        - sharing
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      parameters:
        - $ref: '#/paths/~1contacts/get/parameters/3'
        - $ref: '#/paths/~1contacts/get/parameters/4'
        - $ref: '#/paths/~1contacts/get/parameters/0'
      responses:
        '200':
          description: IndexResult object containing an array of Share objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1contacts/get/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/paths/~1workspaces~1%7BworkspaceId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1workspaces~1%7BworkspaceId%7D~1shares/post/responses/400/content/application~1json/schema
  /workspaces/{workspaceId}/shares/{shareId}:
    parameters:
      - $ref: '#/paths/~1workspaces~1%7BworkspaceId%7D/parameters/1'
      - $ref: '#/paths/~1reports~1%7BreportId%7D~1shares~1%7BshareId%7D/parameters/1'
      - $ref: '#/paths/~1contacts/parameters/0'
    get:
      summary: Get Workspace Share
      description: Gets the share specified in the URL.
      operationId: share-workspace-get
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      tags:
        - sharing
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - READ_SHEETS
      responses:
        '200':
          description: Returns Share object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1reports~1%7BreportId%7D~1shares/post/requestBody/content/application~1json/schema/oneOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
    delete:
      summary: Delete Workspace Share
      description: |
        Deletes the share specified in the URL.

        **_This operation is only available to system administrators._**
      operationId: delete-workspace-share
      tags:
        - sharing
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      responses:
        '200':
          description: Returns Result object.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1folders~1%7BfolderId%7D/put/responses/200/content/application~1json/schema/allOf/0
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1workspaces~1%7BworkspaceId%7D~1shares~1%7BshareId%7D/get/responses/default/content/application~1json/schema
    put:
      summary: Update Workspace Share
      description: |
        Updates the access level of a user or group for the specified workspace.

        **_This operation is only available to system administrators._**
      operationId: update-workspace-share
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
      tags:
        - sharing
        - workspaces
      security:
        - APIToken: []
        - OAuth2:
            - ADMIN_WORKSPACES
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessLevel:
                  $ref: '#/components/schemas/Discussion/properties/accessLevel'
      responses:
        '200':
          description: Result object containing the modified Share object.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1workspaces~1%7BworkspaceId%7D~1shares~1%7BshareId%7D/delete/responses/200/content/application~1json/schema
                  - type: object
                    properties:
                      result:
                        type: object
                        items:
                          $ref: >-
                            #/paths/~1workspaces~1%7BworkspaceId%7D~1shares~1%7BshareId%7D/get/responses/200/content/application~1json/schema
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1workspaces~1%7BworkspaceId%7D~1shares~1%7BshareId%7D/get/responses/default/content/application~1json/schema
  /workspaces/{workspaceId}/sheets:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1workspaces~1%7BworkspaceId%7D/parameters/1'
    post:
      summary: Create Sheet in Workspace
      description: >
        Creates a sheet from scratch or from the specified template at the
        top-level of the specified workspace.

        For subfolders, use Create Sheet in Folder.
      operationId: create-sheet-in-workspace
      tags:
        - sheets
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SHEETS
      parameters:
        - $ref: '#/paths/~1reports~1%7BreportId%7D/parameters/2'
        - $ref: '#/paths/~1favorites/post/parameters/0'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets/post/parameters/1'
      requestBody:
        description: Sheet to create.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/paths/~1folders~1%7BfolderId%7D~1sheets/post/requestBody/content/application~1json/schema/oneOf/0
                - $ref: >-
                    #/paths/~1folders~1%7BfolderId%7D~1sheets/post/requestBody/content/application~1json/schema/oneOf/1
      responses:
        '200':
          description: >-
            Result object containing a Sheet object for newly created sheet,
            corresponding to what was specified in the request.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/paths/~1folders~1%7BfolderId%7D~1sheets/post/responses/200/content/application~1json/schema/allOf/1/properties/result/oneOf/0
                          - $ref: >-
                              #/paths/~1folders~1%7BfolderId%7D~1sheets/post/responses/200/content/application~1json/schema/allOf/1/properties/result/oneOf/1
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
  /workspaces/{workspaceId}/sheets/import:
    parameters:
      - $ref: '#/paths/~1contacts/parameters/0'
      - $ref: '#/paths/~1workspaces~1%7BworkspaceId%7D/parameters/1'
    post:
      summary: Import Sheet into Workspace
      description: >
        Imports CSV or XLSX data into a new sheet in the specified workspace.


        Note the following:

        * Both sheetName and the file name must use ASCII characters.

        * The source data must be basic text. To include rich formula data,
        import and create a sheet first, and then use Update Rows. To work with
        images, see Cell Images.

        * XLS is not supported. You must use XLSX.

        * Hierarchical relationships between rows in an external file won't
        import.
      operationId: import-sheet-into-workspace
      tags:
        - import
      security:
        - APIToken: []
        - OAuth2:
            - CREATE_SHEETS
      parameters:
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/0'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/1'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/2'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/3'
        - $ref: '#/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/parameters/4'
      requestBody:
        description: Binary content for the CSV / XLSX file.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Result object containing a Sheet object for imported sheet.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/paths/~1favorites/post/responses/200/content/application~1json/schema/allOf/0
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/paths/~1folders~1%7BfolderId%7D~1sheets~1import/post/responses/200/content/application~1json/schema/allOf/1/properties/result
        default:
          description: Generic Error Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
components:
  schemas:
    AccessLevel:
      type: string
      enum:
        - ADMIN
        - COMMENTER
        - EDITOR
        - EDITOR_SHARE
        - OWNER
        - VIEWER
    Account:
      type: object
      properties:
        id:
          description: Account Id.
          type: number
          example: 122454719915908
        name:
          description: Account name.
          type: string
          example: Smartsheet Org
    AlternateEmail:
      type: object
      properties:
        id:
          description: AlternateEmail Id.
          type: number
          example: 8150532427671428
        confirmed:
          description: Indicates whether the alternate email address has been confirmed.
          type: boolean
          example: true
        email:
          description: User's alternate email address.
          type: string
          example: johnathan.doe@smartsheet.com
    Attachment:
      description: Attachment Object
      type: object
      properties:
        id:
          description: Attachment Id.
          type: number
        parentId:
          description: The Id of the parent.
          type: number
        attachmentType:
          description: >-
            Attachment type. Note--Dropbox, Egnyte, and Evernote are not
            supported for Smartsheet.gov accounts.
          type: string
          enum:
            - BOX_COM
            - DROPBOX
            - EGNYTE
            - EVERNOTE
            - FILE
            - GOOGLE_DRIVE
            - LINK
            - ONEDRIVE
            - TRELLO
        attachmentSubType:
          description: >-
            Attachment sub type. Note--Folder type is for EGNYTE values and the
            rest are GOOGLE_DRIVE values.
          type: string
          enum:
            - DOCUMENT
            - DRAWING
            - FOLDER
            - PDF
            - PRESENTATION
            - SPREADSHEET
        mimeType:
          description: Attachment MIME type.
          type: string
          example: PNG
        parentType:
          description: The type of object the attachment belongs to.
          type: string
          enum:
            - COMMENT
            - PROOF
            - ROW
            - SHEET
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - type: number
          readOnly: true
        createdBy:
          description: >
            `User` object containing `name` and `email` of the user who created
            this attachment.
          allOf:
            - description: MiniUser Object
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: jane.doe@smartsheet.com
                name:
                  type: string
                  readOnly: true
                  example: Jane Doe
        name:
          description: Attachment name.
          type: string
        sizeInKb:
          description: The size of the file, if the attachmentType is FILE.
          type: number
        url:
          description: Attachment temporary URL (files only).
          type: string
        urlExpiresInMillis:
          description: Attachment temporary URL time to live (files only).
          type: number
    AutomationAction:
      type: object
      properties:
        includedColumnIds:
          description: Specifies which columns to include in message.
          type: array
          items:
            type: number
        type:
          type: string
          enum:
            - APPROVAL_REQUEST_ACTION
            - NOTIFICATION_ACTION
            - UPDATE_REQUEST_ACTION
        frequency:
          type: string
          enum:
            - DAILY
            - HOURLY
            - IMMEDIATELY
            - WEEKLY
        includeAllColumns:
          description: If true, all columns are included in email contents.
          type: boolean
          default: true
        includeAttachments:
          description: If true, all attachments are included in email contents.
          type: string
        includeDiscussions:
          description: If true, all discussions are included in email contents.
          type: boolean
        message:
          description: Email body.
          type: string
        subject:
          description: Email subject line.
          type: string
      oneOf:
        - properties:
            notifyAllSharedUsers:
              description: >-
                If true, notifications are sent to all users shared to the
                sheet.
              type: boolean
        - properties:
            recipients:
              type: array
              items:
                description: >
                  Specifies the recipient of an email. The recipient may be
                  either an individual or a group. To specify an individual, set
                  the email attribute; to specify a group, set the groupId
                  attribute. Either email and groupId may be set, but not both.
                oneOf:
                  - type: object
                    description: >
                      Specifies the recipient of an [Email]($ref:
                      'Email.yaml#/components/schemas/Email'). The recipient may
                      be either an individual or a group. To specify an
                      individual, set the **email** attribute; to specify a
                      group, set the **groupId** attribute. Either **email** and
                      **groupId** may be set, but not both.
                    properties:
                      email:
                        description: The email address of an individual recipient.
                        type: string
                        format: email
                        example: john.doe@smartsheet.com
                  - type: object
                    description: >
                      Specifies the recipient of an [Email]($ref:
                      'Email.yaml#/components/schemas/Email'). The recipient may
                      be either an individual or a group. To specify an
                      individual, set the **email** attribute; to specify a
                      group, set the **groupId** attribute. Either **email** and
                      **groupId** may be set, but not both.
                    properties:
                      groupId:
                        description: The Id of a group recipient.
                        type: number
                        example: 2258118617917316
        - properties:
            recipientColumnIds:
              description: Array of column Ids from which to collect email recipients.
              type: array
              items:
                type: number
    AutomationRule:
      type: object
      properties:
        id:
          description: AutomationRule Id.
          type: number
        action:
          description: >-
            An [AutomationAction object](#section/AutomationAction-Object)
            containing information for this rule, such as type, recipients, and
            frequency.
        createdAt:
          description: A timestamp of when the rule was originally added.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdAt'
        createdBy:
          description: >
            `User` object containing `name` and `email` of the creator of this
            rule.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        disabledReason:
          description: >
            Machine-readable reason a rule is disabled:

            * `APPROVAL_COLUMN_MISSING` This rule's approval status column has
            been deleted.


            * `APPROVAL_COLUMN_WRONG_TYPE` The approval column must be a
            dropdown column.


            * `AUTOMATION_NOT_ENABLED_FOR_ORG` To create or edit automated
            actions,

            you need to upgrade your organization account to a Business or
            Enterprise plan.


            * `COLUMN_MISSING` A column referenced by this rule has been
            deleted.


            * `COLUMN_TYPE_INCOMPATIBLE` A column referenced by this rule has
            been changed to an incompatible column type.


            * `NO_POTENTIAL_RECIPIENTS` This rule has no recipients that will be
            able to receive

            notifications based on this sheet's permission settings or this
            account's approved domain sharing list.


            * `NO_VALID_SELECTED_COLUMNS` All selected columns for this rule
            have been deleted.
          type: string
          enum:
            - APPROVAL_COLUMN_MISSING
            - APPROVAL_COLUMN_WRONG_TYPE
            - AUTOMATION_NOT_ENABLED_FOR_ORG
            - COLUMN_MISSING
            - COLUMN_TYPE_INCOMPATIBLE
            - NO_POTENTIAL_RECIPIENTS
            - NO_VALID_SELECTED_COLUMNS
        disabledReasonText:
          description: Descriptive reason a rule is disabled.
          type: string
        enabled:
          description: If true, indicates that the rule is active.
          type: boolean
        modifiedAt:
          description: The datetime for when the change was made to the rule.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdAt'
        modifiedBy:
          description: >
            `User` object containing the `name` and `email` of the user that
            made the change.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        name:
          description: Rule name as shown in the UI.
          type: string
        userCanModify:
          description: If true, indicates that the current user can modify the rule.
          type: boolean
    AutoNumberFormat:
      type: object
      description: >-
        Object that describes how the the System Column type of "AUTO_NUMBER" is
        auto-generated.
      properties:
        fill:
          description: >-
            Indicates zero-padding. Must be between 0 and 10 "0" (zero)
            characters.
          type: string
        prefix:
          description: |
            The prefix. Can include the date tokens:
              * {DD}
              * {MM}
              * {YY}
              * {YYYY}
          type: string
        startingNumber:
          description: The starting number for the auto-id.
          type: number
        suffix:
          description: |
            The suffix. Can include the date tokens:
              * {DD}
              * {MM}
              * {YY}
              * {YYYY}
          type: string
    BulkItemFailure:
      type: object
      properties:
        rowId:
          description: >-
            The Id of the row that failed. Applicable only to bulk row
            operations.
          type: number
          nullable: true
        error:
          description: The error caused by the failed item.
          type: object
          properties:
            refId:
              description: >-
                The Id of the specific error occurrence. Please include this
                information when contacting Smartsheet support.
              type: string
            errorCode:
              description: >-
                Custom error code from Smartsheet. See the complete [Error Code
                List](../#section/Error-Code-List).
              type: number
            message:
              description: Descriptive error message.
              type: string
        index:
          description: The index of the failed item in the bulk request array.
          type: number
    Callback:
      type: object
      properties:
        scopeObjectId:
          type: number
          description: Id of the object that corresponds to scope.
          example: 3285357287499652
          readOnly: true
        webhookId:
          type: number
          description: Id of the corresponding webhook.
          example: 8444254503626628
        events:
          description: Array of CallbackEvent objects
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                description: >-
                  Id of the object that corresponds to objectType. Omitted if
                  objectType is cell.
                example: 3285357287499652
              columnId:
                type: number
                description: >-
                  Only present if objectType is cell. The Id of the column where
                  the cell is located.
                nullable: true
              rowid:
                type: number
                description: >-
                  Only present if objectType is cell. The Id of the row where
                  the cell is located.
                nullable: true
              userid:
                type: number
                description: The user Id of the person who caused this event.
                example: 48569348493401210
              objectType:
                description: Type of object for which event occurred.
                type: string
                enum:
                  - attachment
                  - cell
                  - column
                  - comment
                  - discussion
                  - row
                  - sheet
                example: sheet
              changeAgent:
                type: string
                description: >-
                  A comma-delimited list of values that uniquely identify the
                  agents responsible for making the changes that caused the
                  callback to occur. Only present if the change agent included
                  the Smartsheet-Change-Agent header in the API request that
                  changed data in Smartsheet. For more information, see
                  [Preventing Infinite
                  Loops](../../tag/webhooksDescription#section/Preventing-Infinite-Loops).
              eventType:
                type: string
                description: Type of Event that occurred.
                enum:
                  - created
                  - deleted
                  - updated
                example: created
              timestamp:
                type: string
                format: date-time
                description: >-
                  Time that this event occurred. A callback may contain events
                  with different timestamps, as multiple separate events may be
                  aggregated into a single callback request.
        newWebhookStatus:
          type: string
          description: >-
            New status of the corresponding webhook. Only returned for webhook
            status change callbacks (null for event callbacks).
          example: ENABLED
        nonce:
          type: string
          description: Random value that is distinct for each callback.
        scope:
          type: string
          description: Scope of the webhook. Currently, the only supported value is sheet.
          enum:
            - sheet
          example: sheet
        timestamp:
          type: string
          format: date-time
          description: Time that the callback was generated.
    CallbackEvent:
      type: object
      properties:
        id:
          type: number
          description: >-
            Id of the object that corresponds to objectType. Omitted if
            objectType is cell.
          example: 3285357287499652
        columnId:
          type: number
          description: >-
            Only present if objectType is cell. The Id of the column where the
            cell is located.
          nullable: true
        rowid:
          type: number
          description: >-
            Only present if objectType is cell. The Id of the row where the cell
            is located.
          nullable: true
        userid:
          type: number
          description: The user Id of the person who caused this event.
          example: 48569348493401210
        objectType:
          description: Type of object for which event occurred.
          type: string
          enum:
            - attachment
            - cell
            - column
            - comment
            - discussion
            - row
            - sheet
          example: sheet
        changeAgent:
          type: string
          description: >-
            A comma-delimited list of values that uniquely identify the agents
            responsible for making the changes that caused the callback to
            occur. Only present if the change agent included the
            Smartsheet-Change-Agent header in the API request that changed data
            in Smartsheet. For more information, see [Preventing Infinite
            Loops](../../tag/webhooksDescription#section/Preventing-Infinite-Loops).
        eventType:
          type: string
          description: Type of Event that occurred.
          enum:
            - created
            - deleted
            - updated
          example: created
        timestamp:
          type: string
          format: date-time
          description: >-
            Time that this event occurred. A callback may contain events with
            different timestamps, as multiple separate events may be aggregated
            into a single callback request.
    Cell:
      type: object
      properties:
        columnId:
          type: number
          description: The Id of the column that the cell is located in.
        columnType:
          type: string
          description: >-
            Only returned if the include query string parameter contains
            **columnType**.
        conditionalFormat:
          type: string
          description: >-
            The format descriptor describing this cell's conditional format.
            Only returned if the include query string parameter contains
            **format** and this cell has a conditional format applied.
        displayValue:
          type: string
          description: >-
            Visual representation of cell contents, as presented to the user in
            the UI.
        format:
          type: string
          description: >-
            The format descriptor. Only returned if the include query string
            parameter contains **format** and this cell has a non-default format
            applied.
        formula:
          type: string
          description: >-
            The formula for a cell, if set, for instance **=COUNTM([Assigned
            To]3)**. Note that calculation errors or problems with a formula do
            not cause the API call to return an error code. Instead, the
            response contains the same value as in the UI, such as **cell.value
            = "#CIRCULAR REFERENCE"**.
        hyperlink:
          type: object
          properties:
            reportId:
              type: number
              description: >-
                If non-null, this hyperlink is a link to the report with this
                Id.
            sheetId:
              type: number
              description: If non-null, this hyperlink is a link to the sheet with this Id.
            sightId:
              type: number
              description: >-
                If non-null, this hyperlink is a link to the dashboard with this
                Id.
            url:
              type: string
              description: >-
                When the hyperlink is a URL link, this property contains the URL
                value. When the hyperlink is a dashboard/report/sheet link (that
                is, dashboardId, reportId, or sheetId is non-null), this
                property contains the permalink to the dashboard, report, or
                sheet.
        image:
          type: object
          properties:
            altText:
              type: string
              description: Alternate text for the image.
            height:
              type: number
              description: Original height (in pixels) of the uploaded image.
            id:
              type: string
              description: Image Id.
            width:
              type: number
              description: Original width (in pixels) of the uploaded image.
        linkInFromCell:
          type: object
          properties:
            columnId:
              type: number
              description: Column Id of the linked cell.
            rowId:
              type: number
              description: Row Id of the linked cell.
            sheetId:
              type: number
              description: Sheet Id of the sheet that the linked cell belongs to.
            sheetName:
              type: string
              description: Sheet name of the linked cell.
            status:
              type: string
              enum:
                - BLOCKED
                - BROKEN
                - CIRCULAR
                - DISABLED
                - INACCESSIBLE
                - INVALID
                - NOT_SHARED
                - OK
              description: >
                * `BLOCKED` One of several other values indicating unusual error
                conditions.

                * `BROKEN` The row or sheet linked to was deleted.

                * `CIRCULAR` One of several other values indicating unusual
                error conditions.

                * `DISABLED` One of several other values indicating unusual
                error conditions.

                * `INACCESSIBLE` The sheet linked to cannot be viewed by this
                user.

                * `INVALID` One of several other values indicating unusual error
                conditions.

                * `NOT_SHARED` One of several other values indicating unusual
                error conditions.

                * `OK` The link is in a good state.
        linksOutToCells:
          type: array
          items:
            $ref: '#/components/schemas/Cell/properties/linkInFromCell'
        objectValue:
          description: >-
            The base object for values found in the **Cell.objectValue**
            attribute. Its **objectType** attribute indicates the type of the
            object. This object itself is not used directly.
          type: object
          properties:
            objectType:
              type: string
              enum:
                - ABSTRACT_DATETIME
                - CONTACT
                - DATE
                - DATETIME
                - DURATION
                - MULTI_CONTACT
                - MULTI_PICKLIST
                - PREDECESSOR_LIST
        overrideValidation:
          type: boolean
          description: >-
            (Admin only) Indicates whether the cell value can contain a value
            outside of the validation limits (value = **true**). When using this
            parameter, you must also set **strict** to **false** to bypass value
            type checking. This property is honored for POST or PUT actions that
            update rows.
        strict:
          type: boolean
          description: >-
            Set to **false** to enable lenient parsing. Defaults to **true**.
            You can specify this attribute in a request, but it is never present
            in a response.
        value:
          anyOf:
            - type: string
            - type: number
            - type: boolean
          description: >-
            A string, number, or a Boolean value -- depending on the cell type
            and the data in the cell. Cell values larger than 4000 characters
            are silently truncated. An empty cell returns no value.
    CellDataItem:
      type: object
      properties:
        columnId:
          description: Column Id for each item.
          type: number
        rowId:
          description: Row Id for each item.
          type: number
        sheetId:
          description: Sheet Id for each item.
          type: number
        objectValue:
          description: >-
            The type of data returned depends on the cell type and the data in
            the cell.
          oneOf:
            - type: boolean
            - type: number
            - type: string
        cell:
          type: object
          properties:
            columnId:
              type: number
              description: The Id of the column that the cell is located in.
            columnType:
              type: string
              description: >-
                Only returned if the include query string parameter contains
                **columnType**.
            conditionalFormat:
              type: string
              description: >-
                The format descriptor describing this cell's conditional format.
                Only returned if the include query string parameter contains
                **format** and this cell has a conditional format applied.
            displayValue:
              type: string
              description: >-
                Visual representation of cell contents, as presented to the user
                in the UI.
            format:
              type: string
              description: >-
                The format descriptor. Only returned if the include query string
                parameter contains **format** and this cell has a non-default
                format applied.
            formula:
              type: string
              description: >-
                The formula for a cell, if set, for instance **=COUNTM([Assigned
                To]3)**. Note that calculation errors or problems with a formula
                do not cause the API call to return an error code. Instead, the
                response contains the same value as in the UI, such as
                **cell.value = "#CIRCULAR REFERENCE"**.
            hyperlink:
              $ref: '#/components/schemas/Cell/properties/hyperlink'
            image:
              $ref: '#/components/schemas/Cell/properties/image'
            linkInFromCell:
              $ref: '#/components/schemas/Cell/properties/linkInFromCell'
            linksOutToCells:
              type: array
              items:
                $ref: '#/components/schemas/Cell/properties/linkInFromCell'
            objectValue:
              $ref: '#/components/schemas/Cell/properties/objectValue'
            overrideValidation:
              type: boolean
              description: >-
                (Admin only) Indicates whether the cell value can contain a
                value outside of the validation limits (value = **true**). When
                using this parameter, you must also set **strict** to **false**
                to bypass value type checking. This property is honored for POST
                or PUT actions that update rows.
            strict:
              type: boolean
              description: >-
                Set to **false** to enable lenient parsing. Defaults to
                **true**. You can specify this attribute in a request, but it is
                never present in a response.
            value:
              anyOf:
                - type: string
                - type: number
                - type: boolean
              description: >-
                A string, number, or a Boolean value -- depending on the cell
                type and the data in the cell. Cell values larger than 4000
                characters are silently truncated. An empty cell returns no
                value.
        dataSource:
          type: string
          enum:
            - CELL
            - SUMMARY_FIELD
        inheritCellValue:
          description: Specifies if valueFormat is inherited from the underlying cell value
          type: boolean
        label:
          description: >-
            Label for the data point. This is either the column name or a
            user-provided string.
          type: string
        labelFormat:
          description: Format description for label.
          type: string
          example: ',,1,1,,,,,,,,,,,,,'
        labelFont:
          description: List of supported fonts in Dashboards
          type: string
          enum:
            - Arial
            - Courier
            - Georgia
            - Gill Sans
            - Helvetica
            - Luminari
            - Monaco
            - Tahoma
            - Times New Roman
            - Verdana
        order:
          description: The display order for the CellDataItem.
          type: number
        profileField:
          type: object
          properties:
            id:
              description: SummaryField Id.
              type: number
            contactOptions:
              description: >-
                Array of ContactOption objects to specify a pre-defined list of
                values for the column. Column type must be CONTACT_LIST.
              type: array
              items:
                $ref: '#/components/schemas/Column/properties/contactOptions/items'
            createdAt:
              $ref: '#/components/schemas/Attachment/properties/createdAt'
            createdBy:
              description: >-
                User object containing name and email of the creator of this
                summary field.
              type: object
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
            displayValue:
              description: >-
                Visual representation of cell contents, as presented to the user
                in the UI.
              type: string
            format:
              description: >-
                The format descriptor. Only returned if the include query string
                parameter contains format and this column has a non-default
                format applied to it.
              type: string
            formula:
              description: The formula for a cell, if set.
              type: string
            hyperlink:
              $ref: '#/components/schemas/Cell/properties/hyperlink'
            image:
              $ref: '#/components/schemas/Cell/properties/image'
            index:
              description: Field index or position. This number is zero-based.
              type: number
            locked:
              description: Indicates whether the field is locked.
              type: boolean
            lockedForUser:
              description: Indicates whether the field is locked for the requesting user.
              type: boolean
            modifiedAt:
              $ref: '#/components/schemas/Attachment/properties/createdAt'
            modifiedBy:
              description: >-
                User object containing name and email of the user who most
                recently modified this summary field.
              type: object
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
            objectValue:
              $ref: '#/components/schemas/Cell/properties/objectValue'
            options:
              description: >-
                When applicable for PICKLIST column type. Array of the options
                available for the field.
              type: array
              items:
                type: string
            symbol:
              description: When applicable for PICKLIST column type.
              type: string
            title:
              description: Arbitrary name, must be unique within summary.
              type: string
            type:
              type: string
              enum:
                - ABSTRACT_DATETIME
                - CHECKBOX
                - CONTACT_LIST
                - DATE
                - DATETIME
                - DURATION
                - MULTI_CONTACT_LIST
                - MULTI_PICKLIST
                - PICKLIST
                - PREDECESSOR
                - TEXT_NUMBER
            validation:
              description: >-
                Indicates whether summary field values are restricted to the
                type.
              type: boolean
        valueFormat:
          description: Format description for value.
          type: string
          example: ',,1,1,,,,,,,,,,,,,'
        valueFont:
          $ref: '#/components/schemas/CellDataItem/properties/labelFont'
    CellHistory:
      type: object
      allOf:
        - $ref: '#/components/schemas/CellDataItem/properties/cell'
      properties:
        modifiedAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        modifiedBy:
          description: >-
            User object containing the name and email of the user that made the
            change.
          type: object
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
    CellLink:
      type: object
      properties:
        columnId:
          type: number
          description: Column Id of the linked cell.
        rowId:
          type: number
          description: Row Id of the linked cell.
        sheetId:
          type: number
          description: Sheet Id of the sheet that the linked cell belongs to.
        sheetName:
          type: string
          description: Sheet name of the linked cell.
        status:
          type: string
          enum:
            - BLOCKED
            - BROKEN
            - CIRCULAR
            - DISABLED
            - INACCESSIBLE
            - INVALID
            - NOT_SHARED
            - OK
          description: >
            * `BLOCKED` One of several other values indicating unusual error
            conditions.

            * `BROKEN` The row or sheet linked to was deleted.

            * `CIRCULAR` One of several other values indicating unusual error
            conditions.

            * `DISABLED` One of several other values indicating unusual error
            conditions.

            * `INACCESSIBLE` The sheet linked to cannot be viewed by this user.

            * `INVALID` One of several other values indicating unusual error
            conditions.

            * `NOT_SHARED` One of several other values indicating unusual error
            conditions.

            * `OK` The link is in a good state.
    CellLinkWidgetContent:
      type: object
      title: Metric
      properties:
        type:
          type: string
          enum:
            - METRIC
            - SHEETSUMMARY
        sheetId:
          description: Sheet Id from which the cell data originates.
          type: number
        cellData:
          type: array
          items:
            type: object
            properties:
              columnId:
                description: Column Id for each item.
                type: number
              rowId:
                description: Row Id for each item.
                type: number
              sheetId:
                description: Sheet Id for each item.
                type: number
              objectValue:
                description: >-
                  The type of data returned depends on the cell type and the
                  data in the cell.
                oneOf:
                  - type: boolean
                  - type: number
                  - type: string
              cell:
                $ref: '#/components/schemas/CellDataItem/properties/cell'
              dataSource:
                type: string
                enum:
                  - CELL
                  - SUMMARY_FIELD
              inheritCellValue:
                description: >-
                  Specifies if valueFormat is inherited from the underlying cell
                  value
                type: boolean
              label:
                description: >-
                  Label for the data point. This is either the column name or a
                  user-provided string.
                type: string
              labelFormat:
                description: Format description for label.
                type: string
                example: ',,1,1,,,,,,,,,,,,,'
              labelFont:
                $ref: '#/components/schemas/CellDataItem/properties/labelFont'
              order:
                description: The display order for the CellDataItem.
                type: number
              profileField:
                $ref: '#/components/schemas/CellDataItem/properties/profileField'
              valueFormat:
                description: Format description for value.
                type: string
                example: ',,1,1,,,,,,,,,,,,,'
              valueFont:
                $ref: '#/components/schemas/CellDataItem/properties/labelFont'
        columns:
          type: array
          items:
            type: object
            properties:
              autoNumberFormat:
                $ref: '#/components/schemas/Column/properties/autoNumberFormat'
              contactOptions:
                type: array
                items:
                  $ref: '#/components/schemas/Column/properties/contactOptions/items'
                description: >-
                  Array of ContactOption objects to specify a pre-defined list
                  of values for the column. Column **type** must be
                  **CONTACT_LIST**.
              description:
                type: string
                description: Column description.
              format:
                type: string
                description: >-
                  The format descriptor (see
                  [Formatting](../../#section/API-Basics/Formatting)). Only
                  returned if the **include** query string parameter contains
                  **format** and this column has a non-default format applied to
                  it.
              formula:
                description: The formula for the column, if set.
                type: string
              hidden:
                type: boolean
                description: Indicates whether the column is hidden.
              id:
                type: number
                description: Column Id.
              index:
                type: number
                description: Column index or position. This number is zero-based.
              locked:
                type: boolean
                description: >-
                  Indicates whether the column is locked. In a response, a value
                  of **true** indicates that the column has been locked by the
                  sheet owner or the admin.
              lockedForUser:
                type: boolean
                description: >-
                  Indicates whether the column is locked for the requesting
                  user. This attribute may be present in a response, but cannot
                  be specified in a request.
              options:
                type: array
                items:
                  type: string
                description: Array of the options available for the column.
              primary:
                type: boolean
                description: >-
                  Returned only if the column is the Primary Column (value =
                  **true**).
              symbol:
                type: string
                description: >-
                  When applicable for **CHECKBOX** or **PICKLIST** column types.
                  See [Symbol
                  Columns](../../tag/columnsRelated#section/Column-Types/Symbol-Columns).
              systemColumnType:
                type: string
                enum:
                  - AUTO_NUMBER
                  - CREATED_BY
                  - CREATED_DATE
                  - MODIFIED_BY
                  - MODIFIED_DATE
                description: >-
                  See [System
                  Columns](../../tag/columnsRelated#section/Column-Types).
              tags:
                type: array
                items:
                  type: string
                  enum:
                    - CALENDAR_END_DATE
                    - CALENDAR_START_DATE
                    - CARD_DONE
                    - GANTT_ALLOCATION
                    - GANTT_ASSIGNED_RESOURCE
                    - GANTT_DISPLAY_LABEL
                    - GANTT_DURATION
                    - GANTT_END_DATE
                    - GANTT_PERCENT_COMPLETE
                    - GANTT_PREDECESSOR
                    - GANTT_START_DATE
                    - BASELINE_START_DATE
                    - BASELINE_END_DATE
                    - BASELINE_VARIANCE
                description: >-
                  Set of tags to indicate special columns. Each element in the
                  array is set to one of the listed enum values.
              title:
                type: string
                description: Column title.
              type:
                type: string
                enum:
                  - ABSTRACT_DATETIME
                  - CHECKBOX
                  - CONTACT_LIST
                  - DATE
                  - DATETIME
                  - DURATION
                  - MULTI_CONTACT_LIST
                  - MULTI_PICKLIST
                  - PICKLIST
                  - PREDECESSOR
                  - TEXT_NUMBER
                description: >-
                  See [Column
                  Types](../../tag/columnsRelated#section/Column-Types)
              validation:
                type: boolean
                description: >-
                  Indicates whether validation has been enabled for the column
                  (value = **true**).
              version:
                type: number
                enum:
                  - 0
                  - 1
                  - 2
                description: |
                  * `0`: CONTACT_LIST, PICKLIST, or TEXT_NUMBER.
                  * `1`: MULTI_CONTACT_LIST.
                  * `2`: MULTI_PICKLIST.
              width:
                type: number
                description: Display width of the column in pixels.
        hyperlink:
          type: object
          properties:
            interactionType:
              description: >
                Specifies what happens when a user clicks the widget. The type
                will determine what other properties are needed.
                 * DISTI_COPY - a distribution link, only available if org has distribution
                links enabled.
                 * NONE - do nothing, no other attribute required.
                 * SMARTSHEET_ITEM - open a Smartsheet item that is not the SOURCE_SHEET,
                must also have one of the following attributes:
                    * dashboardId
                    * folderId
                    * reportId
                    * sheetId
                    * workspaceId
                 * SOURCE_SHEET - open the container where the widget data comes from,
                no other attribute required.
                 * WEB -  launch the URL, must also have url attribute.
              type: string
              enum:
                - DISTI_COPY
                - NONE
                - SMARTSHEET_ITEM
                - SOURCE_SHEET
                - WEB
            folderId:
              description: If interactionType = SMARTSHEET_ITEM this is the folder to open.
              type: number
            reportId:
              description: If interactionType = SMARTSHEET_ITEM this is the report to open.
              type: number
            sheetId:
              description: If interactionType = SMARTSHEET_ITEM this is the sheet to open.
              type: number
            sightId:
              description: >-
                If interactionType = SMARTSHEET_ITEM this is the dashboard to
                open.
              type: number
            url:
              description: If interactionType = WEB this is the URL to launch.
              type: string
            workspaceId:
              description: >-
                If interactionType = SMARTSHEET_ITEM this is the workspace to
                open.
              type: number
    ChartWidgetContent:
      type: object
      title: Chart
      properties:
        type:
          type: string
          enum:
            - CHART
        reportId:
          description: Report Id denoting container source, if applicable.
          type: number
        sheetId:
          description: Sheet Id denoting container source, if applicable.
          type: number
        axes:
          type: array
          items:
            type: object
            properties:
              location:
                description: Describes location of the axis.
                type: string
                enum:
                  - BOTTOM
                  - LEFT
                  - NONE
                  - RIGHT
                  - TOP
              title:
                description: Axis title.
                type: string
              titleInfo:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - ABSTRACT_DATE_TIME
                      - CHECKBOX
                      - CONTACT_LIST
                      - DATE
                      - DATE_TIME
                      - DURATION
                      - MULTI_CONTACT_LIST
                      - MULTI_PICKLIST
                      - PICKLIST
                      - PREDECESSOR
                      - TEXT_NUMBER
              axisTitleFont:
                $ref: '#/components/schemas/CellDataItem/properties/labelFont'
              axisLabelFormat:
                description: >-
                  Describes the axis format (see
                  [Formatting](/section/Formatting)).
                type: string
                example: ',,,,,,,,36,,,,,,,,'
              axisLabelFont:
                $ref: '#/components/schemas/CellDataItem/properties/labelFont'
              includeZero:
                description: Includes 0 in the axis.
                type: boolean
        hyperlink:
          $ref: '#/components/schemas/CellLinkWidgetContent/properties/hyperlink'
        includedColumnIds:
          description: Array of column Ids if the range was selected through the UI.
          type: array
          items:
            type: number
        legend:
          type: object
          properties:
            location:
              type: string
              enum:
                - BOTTOM
                - LEFT
                - NONE
                - RIGHT
                - TOP
            legendFormat:
              type: string
              description: >-
                The format descriptor (see [Formatting](/section/Formatting)).
                Only returned if the legend has a non-default format applied to
                it.
              example: ',,1,1,,,,,,,,,,,,,'
            legendFont:
              $ref: '#/components/schemas/CellDataItem/properties/labelFont'
        selectionRanges:
          type: array
          items:
            description: Defines a block of cells in a sheet.
            type: object
            properties:
              sourceColumnId1:
                description: >-
                  Defines beginning edge of range when specifying one or more
                  columns.
                type: number
              sourceColumnId2:
                description: >-
                  Defines ending edge of range when specifying one or more
                  columns.
                type: number
              sourceRowId1:
                description: >-
                  Defines beginning edge of range when specifying one or more
                  rows.
                type: number
              sourceRowId2:
                description: Defines ending edge of range when specifying one or more rows.
                type: number
        series:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              titleInfo:
                $ref: >-
                  #/components/schemas/ChartWidgetContent/properties/axes/items/properties/titleInfo
              seriesTitleFormat:
                type: string
                description: Series title format (see [Formatting](/section/Formatting)).
              seriesType:
                type: string
                enum:
                  - AREA
                  - BAR
                  - COLUMN
                  - LINE
                  - PIE
                  - SCATTER
              dataLabels:
                type: object
                properties:
                  labelType:
                    type: string
                    enum:
                      - NONE
                      - PERCENT
                      - VALUE
              tooltips:
                type: object
                properties:
                  labelType:
                    type: string
                    enum:
                      - NONE
                      - PERCENT
                      - X_SERIES_Y
                      - X_Y_PERCENT
                      - 'Y'
                      - Y_PERCENT
              lineType:
                type: string
                enum:
                  - CURVED
                  - STEPPED
                  - STRAIGHT
              holeSize:
                type: number
              isFilled:
                type: boolean
              isHalf:
                type: boolean
              isStacked:
                type: boolean
              xFormat:
                type: string
                description: >-
                  The format descriptor (see [Formatting](/section/Formatting)).
                  Only returned if the series has a non-default format applied
                  to it.
                example: ',,1,1,,,,,,,,,,,,,'
              yFormat:
                type: string
                description: >-
                  The format descriptor (see [Formatting](/section/Formatting)).
                  Only returned if the series has a non-default format applied
                  to it.
                example: ',,1,1,,,,,,,,,,,,,'
              color:
                type: string
              axisLocationX:
                type: string
                enum:
                  - BOTTOM
                  - LEFT
                  - NONE
                  - RIGHT
                  - TOP
              axisLocationY:
                type: string
                enum:
                  - BOTTOM
                  - LEFT
                  - NONE
                  - RIGHT
                  - TOP
              yColumnInfo:
                $ref: >-
                  #/components/schemas/ChartWidgetContent/properties/axes/items/properties/titleInfo
              xColumnInfo:
                $ref: >-
                  #/components/schemas/ChartWidgetContent/properties/axes/items/properties/titleInfo
              seriesSelectionOrder:
                type: string
                enum:
                  - COLUMNS
                  - ROWS
              seriesData:
                type: array
                items:
                  type: object
                  properties:
                    x:
                      type: number
                    'y':
                      type: number
                    xFormat:
                      type: string
                      description: >-
                        The format descriptor (see
                        [Formatting](/section/Formatting)). Only returned if the
                        series has a non-default format applied to it.
                      example: ',,1,1,,,,,,,,,,,,,'
                    yFormat:
                      type: string
                      description: >-
                        The format descriptor (see
                        [Formatting](/section/Formatting)). Only returned if the
                        series has a non-default format applied to it.
                      example: ',,1,1,,,,,,,,,,,,,'
                    color:
                      type: string
              selectionRanges:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/ChartWidgetContent/properties/selectionRanges/items
        verticalGridLines:
          type: object
          properties:
            lineStyle:
              type: string
              enum:
                - SOLID
        horizontalGridLines:
          $ref: '#/components/schemas/ChartWidgetContent/properties/verticalGridLines'
    Column:
      type: object
      properties:
        autoNumberFormat:
          type: object
          description: >-
            Object that describes how the the System Column type of
            "AUTO_NUMBER" is auto-generated.
          properties:
            fill:
              description: >-
                Indicates zero-padding. Must be between 0 and 10 "0" (zero)
                characters.
              type: string
            prefix:
              description: |
                The prefix. Can include the date tokens:
                  * {DD}
                  * {MM}
                  * {YY}
                  * {YYYY}
              type: string
            startingNumber:
              description: The starting number for the auto-id.
              type: number
            suffix:
              description: |
                The suffix. Can include the date tokens:
                  * {DD}
                  * {MM}
                  * {YY}
                  * {YYYY}
              type: string
        contactOptions:
          type: array
          items:
            type: object
            properties:
              email:
                description: A parsable email address.
                type: string
              name:
                description: Can be a user's name, display name, or free text.
                type: string
          description: >-
            Array of ContactOption objects to specify a pre-defined list of
            values for the column. Column **type** must be **CONTACT_LIST**.
        description:
          type: string
          description: Column description.
        format:
          type: string
          description: >-
            The format descriptor (see
            [Formatting](../../#section/API-Basics/Formatting)). Only returned
            if the **include** query string parameter contains **format** and
            this column has a non-default format applied to it.
        formula:
          description: The formula for the column, if set.
          type: string
        hidden:
          type: boolean
          description: Indicates whether the column is hidden.
        id:
          type: number
          description: Column Id.
        index:
          type: number
          description: Column index or position. This number is zero-based.
        locked:
          type: boolean
          description: >-
            Indicates whether the column is locked. In a response, a value of
            **true** indicates that the column has been locked by the sheet
            owner or the admin.
        lockedForUser:
          type: boolean
          description: >-
            Indicates whether the column is locked for the requesting user. This
            attribute may be present in a response, but cannot be specified in a
            request.
        options:
          type: array
          items:
            type: string
          description: Array of the options available for the column.
        primary:
          type: boolean
          description: >-
            Returned only if the column is the Primary Column (value =
            **true**).
        symbol:
          type: string
          description: >-
            When applicable for **CHECKBOX** or **PICKLIST** column types. See
            [Symbol
            Columns](../../tag/columnsRelated#section/Column-Types/Symbol-Columns).
        systemColumnType:
          type: string
          enum:
            - AUTO_NUMBER
            - CREATED_BY
            - CREATED_DATE
            - MODIFIED_BY
            - MODIFIED_DATE
          description: See [System Columns](../../tag/columnsRelated#section/Column-Types).
        tags:
          type: array
          items:
            type: string
            enum:
              - CALENDAR_END_DATE
              - CALENDAR_START_DATE
              - CARD_DONE
              - GANTT_ALLOCATION
              - GANTT_ASSIGNED_RESOURCE
              - GANTT_DISPLAY_LABEL
              - GANTT_DURATION
              - GANTT_END_DATE
              - GANTT_PERCENT_COMPLETE
              - GANTT_PREDECESSOR
              - GANTT_START_DATE
              - BASELINE_START_DATE
              - BASELINE_END_DATE
              - BASELINE_VARIANCE
          description: >-
            Set of tags to indicate special columns. Each element in the array
            is set to one of the listed enum values.
        title:
          type: string
          description: Column title.
        type:
          type: string
          enum:
            - ABSTRACT_DATETIME
            - CHECKBOX
            - CONTACT_LIST
            - DATE
            - DATETIME
            - DURATION
            - MULTI_CONTACT_LIST
            - MULTI_PICKLIST
            - PICKLIST
            - PREDECESSOR
            - TEXT_NUMBER
          description: See [Column Types](../../tag/columnsRelated#section/Column-Types)
        validation:
          type: boolean
          description: >-
            Indicates whether validation has been enabled for the column (value
            = **true**).
        version:
          type: number
          enum:
            - 0
            - 1
            - 2
          description: |
            * `0`: CONTACT_LIST, PICKLIST, or TEXT_NUMBER.
            * `1`: MULTI_CONTACT_LIST.
            * `2`: MULTI_PICKLIST.
        width:
          type: number
          description: Display width of the column in pixels.
    ColumnObject:
      type: object
      properties:
        title:
          type: string
          description: Column title.
        type:
          type: string
          enum:
            - ABSTRACT_DATETIME
            - CHECKBOX
            - CONTACT_LIST
            - DATE
            - DATETIME
            - DURATION
            - MULTI_CONTACT_LIST
            - MULTI_PICKLIST
            - PICKLIST
            - PREDECESSOR
            - TEXT_NUMBER
        formula:
          type: string
          description: The formula for a column, if set, for instance **=data@row**.
        hidden:
          type: boolean
          description: Indicates whether the column is hidden.
        index:
          type: number
          description: Column index or position. This number is zero-based.
        autoNumberFormat:
          $ref: '#/components/schemas/Column/properties/autoNumberFormat'
        contactOptions:
          $ref: '#/components/schemas/Column/properties/contactOptions/items'
        description:
          type: string
          description: Column description.
        format:
          type: string
          description: >-
            The format descriptor (see
            [Formatting](../#section/API-Basics/Formatting)). Only returned if
            the **include** query string parameter contains **format** and this
            column has a non-default format applied to it.
        locked:
          type: boolean
          description: >-
            Indicates whether the column is locked. In a response, a value of
            **true** indicates that the column has been locked by the sheet
            owner or the admin.
        lockedForUser:
          type: boolean
          description: >-
            Indicates whether the column is locked for the requesting user. This
            attribute may be present in a response, but cannot be specified in a
            request.
        options:
          type: array
          items:
            type: string
            description: Array of the options available for the column.
        symbol:
          type: string
          description: >-
            When applicable for **CHECKBOX** or **PICKLIST** column types. See
            [Symbol
            Columns](../../tag/columnsRelated#section/Column-Types/Symbol-Columns).
        systemColumnType:
          type: string
          enum:
            - AUTO_NUMBER
            - CREATED_BY
            - CREATED_DATE
            - MODIFIED_BY
            - MODIFIED_DATE
          description: See [System Columns](../../tag/columnsRelated#section/Column-Types)
        validation:
          type: boolean
          description: >-
            Indicates whether validation has been enabled for the column (value
            = **true**)
        version:
          type: number
          description: >
            Read only. The level of the column type. Each element in the array
            is set to one of the following values:
             * **0**: TEXT_NUMBER, CONTACT_LIST, or PICKLIST
             * **1**: MULTI_CONTACT_LIST
             * **2**: MULTI_PICKLIST

            See [Versioning and
            Changes](#section/API-Basics/Versioning-and-Changes).
        width:
          type: number
          description: Display width of the column in pixels.
    Comment:
      type: object
      properties:
        attachments:
          description: Array of attachments on comments.
          type: array
          items:
            description: Attachment Object
            type: object
            properties:
              id:
                description: Attachment Id.
                type: number
              parentId:
                description: The Id of the parent.
                type: number
              attachmentType:
                description: >-
                  Attachment type. Note--Dropbox, Egnyte, and Evernote are not
                  supported for Smartsheet.gov accounts.
                type: string
                enum:
                  - BOX_COM
                  - DROPBOX
                  - EGNYTE
                  - EVERNOTE
                  - FILE
                  - GOOGLE_DRIVE
                  - LINK
                  - ONEDRIVE
                  - TRELLO
              attachmentSubType:
                description: >-
                  Attachment sub type. Note--Folder type is for EGNYTE values
                  and the rest are GOOGLE_DRIVE values.
                type: string
                enum:
                  - DOCUMENT
                  - DRAWING
                  - FOLDER
                  - PDF
                  - PRESENTATION
                  - SPREADSHEET
              mimeType:
                description: Attachment MIME type.
                type: string
                example: PNG
              parentType:
                description: The type of object the attachment belongs to.
                type: string
                enum:
                  - COMMENT
                  - PROOF
                  - ROW
                  - SHEET
              createdAt:
                $ref: '#/components/schemas/Attachment/properties/createdAt'
              createdBy:
                description: >
                  `User` object containing `name` and `email` of the user who
                  created this attachment.
                allOf:
                  - $ref: >-
                      #/components/schemas/Attachment/properties/createdBy/allOf/0
              name:
                description: Attachment name.
                type: string
              sizeInKb:
                description: The size of the file, if the attachmentType is FILE.
                type: number
              url:
                description: Attachment temporary URL (files only).
                type: string
              urlExpiresInMillis:
                description: Attachment temporary URL time to live (files only).
                type: number
        createdAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        createdBy:
          description: >-
            User object containing name and email of the creator of this
            comment.
          type: object
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        discussionId:
          description: Discussion Id of discussion that contains comment.
          type: number
        id:
          description: Comment Id.
          type: number
        modifiedAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        text:
          description: Comment body.
          type: string
    Contact:
      type: object
      properties:
        id:
          description: Contact Id.
          type: string
          example: AAAAATYU54QAD7_fNhTnhA
        name:
          description: Contact's full name.
          type: string
          example: Jane Doe
        email:
          description: Contact's email address.
          type: string
          format: email
          example: jane.doe@smartsheet.com
    ContactOption:
      type: object
      properties:
        email:
          description: A parsable email address.
          type: string
        name:
          description: Can be a user's name, display name, or free text.
          type: string
    ContainerDestination:
      type: object
      properties:
        destinationId:
          description: >-
            The Id of the destination container (when copying or moving a sheet
            or a folder). Required if destinationType is "folder" or
            "workspace". If destinationType is "home", this value must be null.
          type: number
        destinationType:
          description: Type of the destination container.
          type: string
          nullable: true
          enum:
            - folder
            - home
            - workspace
        newName:
          description: >-
            Name of the newly created object (when creating a copy of a
            dashboard, folder, sheet, or workspace). This attribute is not
            supported for "move" operations.
          type: string
    CopyOrMoveRowDestination:
      type: object
      properties:
        sheetId:
          description: The Id of the destination sheet.
          type: number
    CopyOrMoveRowDirective:
      type: object
      properties:
        rowIds:
          description: The Ids of the rows to move or copy from the source sheet.
          type: array
          items:
            type: number
        to:
          type: object
          properties:
            sheetId:
              description: The Id of the destination sheet.
              type: number
    CopyOrMoveRowResult:
      type: object
      properties:
        destinationSheetId:
          description: The Id of the destination sheet.
          type: number
        rowMappings:
          description: Array of rowMapping objects.
          type: array
          items:
            type: object
            properties:
              from:
                description: Row Id in the source sheet.
                type: number
              to:
                description: Row Id in the destination sheet.
                type: number
    Criteria:
      type: object
      properties:
        columnId:
          description: Column Id.
          type: number
          example: 293452983475
        operator:
          description: Operator used to filter column values.
          type: string
          enum:
            - BETWEEN
            - CONTAINS
            - EQUAL
            - FUTURE
            - GREATER_THAN
            - HAS_ATTACHMENTS
            - HAS_COMMENTS
            - IS_BLANK
            - IS_CHECKED
            - IS_DATE
            - IS_LOCKED
            - IS_NUMBER
            - IS_NOT_BLANK
            - IS_NOT_CHECKED
            - IS_NOT_DATE
            - IS_NOT_NUMBER
            - LAST_N_DAYS
            - LESS_THAN
            - NEXT_N_DAYS
            - NO_ATTACHMENTS
            - NO_COMMENTS
            - NOT_EQUAL
            - NOT_LOCKED
            - NOT_ON_CRITICAL_PATH
            - ON_CRITICAL_PATH
            - PAST
            - TODAY
          example: IS_ONE_OF
        values:
          description: >-
            Present if a custom filter criteria's operator has one or more
            arguments.
          type: array
          items:
            type: string
          example:
            - Complete
            - In progress
    CrossSheetReference:
      type: object
      properties:
        endColumnId:
          description: >-
            Defines ending edge of range when specifying one or more columns. To
            specify an entire column, omit the startRowId and endRowId
            parameters.
          type: number
        endRowId:
          description: >-
            Defines ending edge of range when specifying one or more rows. To
            specify an entire row, omit the startColumnId and endColumnId
            parameters.
          type: number
        id:
          description: >-
            Cross-sheet reference Id, guaranteed unique within referencing
            sheet.
          type: number
        name:
          description: >-
            Friendly name of reference. Auto-generated unless specified in
            Create Cross-sheet References.
          type: string
        startColumnId:
          description: >-
            Defines beginning edge of range when specifying one or more columns.
            To specify an entire column, omit the startRowId and endRowId
            parameters.
          type: number
        startRowId:
          description: >-
            Defines beginning edge of range when specifying one or more rows. To
            specify an entire row, omit the startColumnId and endColumnId
            parameters.
          type: number
        status:
          description: |
            Status of request:
             * 'BLOCKED' - A reference is downstream of a circular issue.
             * 'BROKEN' - The data source location (column, row or sheet) was deleted.
             * 'CIRCULAR' - The formula reference is self referencing and cannot be
            resolved.
             * 'DISABLED' - Updating the reference is temporarily disabled due to
            maintenance.
             * 'INVALID/UNKNOWN' - The reference is new and had not been validated.
             * 'NOT_SHARED' - No common shared users.
             * 'OK' - The reference is in a good state.
          type: string
          enum:
            - BLOCKED
            - BROKEN
            - CIRCULAR
            - DISABLED
            - INVALID/UNKNOWN
            - NOT-SHARED
            - OK
        sourceSheetId:
          description: Sheet Id of source sheet.
          type: number
    Currency:
      type: object
      properties:
        code:
          description: The ISO 4217 currency code.
          example: EUR
          type: string
        symbol:
          description: The currency symbol.
          type: string
          example: €
    Discussion:
      type: object
      properties:
        accessLevel:
          type: string
          enum:
            - ADMIN
            - COMMENTER
            - EDITOR
            - EDITOR_SHARE
            - OWNER
            - VIEWER
        id:
          description: Discussion Id.
          type: number
        comments:
          description: >-
            Array of comments in discussion. Only returned if the include query
            string parameter contains comments.
          type: array
          items:
            type: object
            properties:
              attachments:
                description: Array of attachments on comments.
                type: array
                items:
                  $ref: '#/components/schemas/Comment/properties/attachments/items'
              createdAt:
                $ref: '#/components/schemas/Attachment/properties/createdAt'
              createdBy:
                description: >-
                  User object containing name and email of the creator of this
                  comment.
                type: object
                allOf:
                  - $ref: >-
                      #/components/schemas/Attachment/properties/createdBy/allOf/0
              discussionId:
                description: Discussion Id of discussion that contains comment.
                type: number
              id:
                description: Comment Id.
                type: number
              modifiedAt:
                $ref: '#/components/schemas/Attachment/properties/createdAt'
              text:
                description: Comment body.
                type: string
        commentAttachments:
          description: >-
            Array of attachments on discussion comments. Only returned if the
            include query string parameter contains attachments.
          type: array
          items:
            $ref: '#/components/schemas/Comment/properties/attachments/items'
        commentCount:
          description: Number of comments in the discussion.
          type: number
        createdBy:
          description: >
            `User` object containing `name` and `email` of the user who created
            the discussion.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        lastCommentedAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        lastCommentedUser:
          description: >
            `User` object containing `name` and `email` of the user who last
            commented on the discussion.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        parentId:
          description: The Id of the associated row or sheet.
          type: number
        parentType:
          description: Type of parent object.
          type: string
          enum:
            - ROW
            - SHEET
        readOnly:
          description: Indicates whether the user can modify the discussion.
          type: boolean
        title:
          description: >-
            Title automatically created by duplicating the first 100 characters
            of top-level comment.
          type: string
          readOnly: true
    Duration:
      description: >-
        In a project sheet, represents a value in a duration cell, or a lag
        value of a predecessor.
      type: object
      properties:
        days:
          description: The number of days for this duration.
          type: number
        elapsed:
          description: >-
            If true, indicates this duration represents elapsed time, which
            ignores non-working time.
          type: boolean
        hours:
          description: The number of hours for this duration.
          type: number
        milliseconds:
          description: The number of milliseconds for this duration.
          type: number
        minutes:
          description: The number of minutes for this duration.
          type: number
        negative:
          description: >-
            When used as a predecessor's lag value, indicates whether the lag is
            negative (if true), or positive (false). The individual duration
            values themselves (for example, days, hours, or minutes) is always
            positive.
          type: boolean
        objectType:
          type: string
          enum:
            - DURATION
        seconds:
          description: The number of seconds for this duration.
          type: number
        weeks:
          description: The number of weeks for this duration.
          type: number
    Email:
      type: object
      properties:
        ccMe:
          description: Indicates whether to send a copy of the email to the sender.
          type: boolean
        message:
          description: The message of the email.
          type: string
        sendTo:
          description: Array of recipients.
          type: array
          items:
            $ref: >-
              #/components/schemas/AutomationAction/oneOf/1/properties/recipients/items
        subject:
          description: The subject of the email.
          type: string
    Error:
      description: The error caused by the failed item.
      type: object
      properties:
        refId:
          description: >-
            The Id of the specific error occurrence. Please include this
            information when contacting Smartsheet support.
          type: string
        errorCode:
          description: >-
            Custom error code from Smartsheet. See the complete [Error Code
            List](../#section/Error-Code-List).
          type: number
        message:
          description: Descriptive error message.
          type: string
    Event:
      description: An Event object for event reporting.
      type: object
      properties:
        eventId:
          description: Unique event identifier.
          type: string
          example: 4b12345abc444def333g149he2b15b3j
        objectType:
          description: >-
            The Smartsheet resource impacted by the event, such as, SHEET or
            WORKSPACE.
          type: string
          enum:
            - SHEET
            - WORKSPACE
          example: sheet
        action:
          description: >-
            The action applied to the specified object, such as CREATE or
            DELETE.
          type: string
          example: CREATE
        objectId:
          description: The identifier of the object impacted by the event.
          type: string
          example: 345678901234
        eventTimeStamp:
          description: >-
            Date and time of the event. Defaults to ISO-8601 format. See dates
            and times for more information.
          type: string
          format: date-time
        userId:
          description: >-
            User assumed as the one who initiated the event. Usually the userId
            property and the requestUserId property (below) have the same value.
            However, if the request is an API call with Assume-User header then
            the userId property identifies the user whose email matches the
            value in the Assume-User header.
          type: number
          example: 123457654321
        requestUserId:
          description: >-
            User whose authentication credential is embedded in the request that
            initiated the event. For example, if the request is an API call with
            an access token then requestUserId identifies the user whose data
            can be accessed via the access token (i.e., the user who authorized
            the creation of the access token). On the other hand, if the request
            comes from a UI session, then requestUserId identifies the user
            logged-in to the UI.
          type: number
          example: 133445566778
        accessTokenName:
          description: >-
            Name of the access token embedded in the request. This property is
            omitted if there's no access token in the request (i.e., it isn't an
            API call) or if the access token wasn't given a name when created
            (only access tokens generated via the Smartsheet desktop UI can be
            given a name at creation time).
          type: string
          nullable: false
        source:
          description: Identifies the type of action that triggered the event.
          type: string
          example: WEB_APP
        additionalDetails:
          description: >-
            Container object for additional event-specific properties.
            Properties depend upon the event type. See [Event
            Reporting](https://smartsheet-platform.github.io/event-reporting-docs/)
            reference documentation for details on each event type.
          type: object
          additionalProperties: true
    Favorite:
      type: object
      properties:
        objectId:
          description: >-
            The Id of the favorited item. If type is template, only private
            sheet-type template Id is allowed.
          type: number
        type:
          type: string
          enum:
            - folder
            - report
            - sheet
            - sight
            - template
            - workspace
    Filters:
      description: >-
        Smartsheet users can define and save personal column filters on sheets
        they can view.
      type: object
      properties:
        id:
          description: Filters Id.
          type: number
          example: 52739485234
        excludeSelected:
          description: >-
            If true, rows containing cells matching the values or criteria items
            are excluded instead of included.
          type: boolean
          example: false
        filterType:
          type: string
          enum:
            - PERSONAL
            - SHARED
          example: PERSONAL
        query:
          properties:
            operator:
              type: string
              enum:
                - AND
                - OR
            criteria:
              description: >-
                Criteria objects specifying custom criteria against which to
                match cell values.
              type: array
              items:
                type: object
                properties:
                  columnId:
                    description: Column Id.
                    type: number
                    example: 293452983475
                  operator:
                    description: Operator used to filter column values.
                    type: string
                    enum:
                      - BETWEEN
                      - CONTAINS
                      - EQUAL
                      - FUTURE
                      - GREATER_THAN
                      - HAS_ATTACHMENTS
                      - HAS_COMMENTS
                      - IS_BLANK
                      - IS_CHECKED
                      - IS_DATE
                      - IS_LOCKED
                      - IS_NUMBER
                      - IS_NOT_BLANK
                      - IS_NOT_CHECKED
                      - IS_NOT_DATE
                      - IS_NOT_NUMBER
                      - LAST_N_DAYS
                      - LESS_THAN
                      - NEXT_N_DAYS
                      - NO_ATTACHMENTS
                      - NO_COMMENTS
                      - NOT_EQUAL
                      - NOT_LOCKED
                      - NOT_ON_CRITICAL_PATH
                      - ON_CRITICAL_PATH
                      - PAST
                      - TODAY
                    example: IS_ONE_OF
                  values:
                    description: >-
                      Present if a custom filter criteria's operator has one or
                      more arguments.
                    type: array
                    items:
                      type: string
                    example:
                      - Complete
                      - In progress
            includeParent:
              description: >-
                If true, indicates that "show parent rows" is enabled for the
                filters.
              type: boolean
          example:
            operator: OR
            criteria:
              operator: IS_ONE_OF
              values:
                - Complete
                - In Progress
              columnId: 52793485233
            includeParent: false
    Folder:
      description: Can contain dashboards, folders, reports, sheets, or templates.
      type: object
      properties:
        id:
          description: Folder Id.
          type: number
        favorite:
          description: >-
            (Deprecated) Returned only if the user has marked the folder as a
            favorite in their "Home" tab (value = true).
          type: boolean
        folders:
          description: Folders contained in folder.
          type: array
          items:
            description: Can contain dashboards, folders, reports, sheets, or templates.
            type: object
            properties:
              id:
                description: Folder Id.
                type: number
              favorite:
                description: >-
                  (Deprecated) Returned only if the user has marked the folder
                  as a favorite in their "Home" tab (value = true).
                type: boolean
              folders:
                description: Folders contained in folder.
                type: array
                items:
                  $ref: '#/components/schemas/Folder/properties/folders/items'
              name:
                description: Folder name.
                type: string
              permalink:
                description: URL that represents a direct link to the folder in Smartsheet.
                type: string
              reports:
                description: Reports contained in folder.
                type: array
                items:
                  $ref: '#/components/schemas/Folder/properties/reports/items'
              sheets:
                description: Sheets contained in folder.
                type: array
                items:
                  $ref: '#/components/schemas/Folder/properties/sheets/items'
              sights:
                description: Dashboards contained in folder.
                type: array
                items:
                  $ref: '#/components/schemas/Folder/properties/sights/items'
              templates:
                description: Templates contained in folder.
                type: array
                items:
                  $ref: '#/components/schemas/Folder/properties/templates/items'
        name:
          description: Folder name.
          type: string
        permalink:
          description: URL that represents a direct link to the folder in Smartsheet.
          type: string
        reports:
          description: Reports contained in folder.
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Folder/properties/sheets/items'
            type: object
            properties:
              scope:
                $ref: '#/components/schemas/Report/properties/scope'
              sourceSheets:
                type: array
                description: >-
                  An array of Sheet objects (without rows), representing the
                  sheets that rows in the report originated from. Only included
                  in the Get Report response if the include parameter specifies
                  sourceSheets.
                items:
                  $ref: '#/components/schemas/Folder/properties/sheets/items'
              isSummaryReport:
                type: boolean
                description: >-
                  A boolean to represent whether the report is a sheet summary
                  report or not. If this property is false, it is a row report.
              proofs:
                $ref: '#/components/schemas/Report/properties/proofs'
        sheets:
          description: Sheets contained in folder.
          type: array
          items:
            type: object
            properties:
              id:
                description: Sheet Id.
                type: number
              fromId:
                description: >-
                  The Id of the template from which to create the sheet. This
                  attribute can be specified in a request, but is never present
                  in a response.
                type: number
              ownerId:
                description: User Id of the sheet owner.
                type: number
              accessLevel:
                $ref: '#/components/schemas/Discussion/properties/accessLevel'
              attachments:
                description: >
                  Array of Attachment objects.

                  Only returned if the
                  [include](../../tag/sheets#operation/getSheet) query string
                  parameter contains **attachments**.
                type: array
                items:
                  $ref: '#/components/schemas/Comment/properties/attachments/items'
              cellImageUploadEnabled:
                description: |
                  The sheet is enabled for cell images to be uploaded.
                type: boolean
              columns:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/CellLinkWidgetContent/properties/columns/items
              createdAt:
                $ref: '#/components/schemas/Attachment/properties/createdAt'
              crossSheetReferences:
                description: >
                  Array of CrossSheetReference objects.

                  Only returned if the
                  [include](../../tag/sheets#operation/getSheet) query string
                  parameter contains **crossSheetReferences**.
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Sheet/properties/crossSheetReferences/items
              dependenciesEnabled:
                description: Indicates whether dependencies are enabled.
                type: boolean
              discussions:
                description: >
                  Array of Discussion objects

                  Only returned if the
                  [include](../../tag/sheets#operation/getSheet) query string
                  parameter contains **discussions**.
                type: array
                items:
                  $ref: '#/components/schemas/Proof/properties/discussions/items'
              effectiveAttachmentOptions:
                description: >
                  Array of enum strings (see
                  [Attachment.attachmentType](../../tag/attachmentsDescription)
                  indicating the allowable attachment options for the current
                  user and sheet.
                type: array
                items:
                  type: string
              favorite:
                description: >-
                  (Deprecated) Returned only if the user has marked this sheet
                  as a favorite in their Home tab (value = **true**).
                type: boolean
              ganttEnabled:
                description: Indicates whether "Gantt View" is enabled.
                type: boolean
              hasSummaryFields:
                description: Indicates whether a sheet summary is present.
                type: boolean
              isMultiPicklistEnabled:
                description: Indicates whether multi-select is enabled.
                type: boolean
              modifiedAt:
                $ref: '#/components/schemas/Attachment/properties/createdAt'
              name:
                description: Sheet name.
                type: string
              owner:
                description: Email address of the sheet owner.
                type: string
              permalink:
                description: URL that represents a direct link to the sheet in Smartsheet.
                type: string
              projectSettings:
                $ref: '#/components/schemas/Sheet/properties/projectSettings'
              readOnly:
                description: >-
                  Returned only if the sheet belongs to an expired trial (value
                  = **true**).
                type: boolean
              resourceManagementEnabled:
                description: Indicates that resource management is enabled.
                type: boolean
              resourceManagementType:
                description: >-
                  Resource Management type. Indicates the type of RM that is
                  enabled.
                type: string
                enum:
                  - NONE
                  - LEGACY_RESOURCE_MANAGEMENT
                  - RESOURCE_MANAGEMENT_BY_SMARTSHEET
              rows:
                type: array
                items:
                  $ref: '#/components/schemas/ReportRow/allOf/0'
              showParentRowsForFilters:
                description: >-
                  Returned only if there are column filters on the sheet. Value
                  = **true** if "show parent rows" is enabled for the filters.
                type: boolean
              source:
                $ref: '#/components/schemas/Sheet/properties/source'
              summary:
                $ref: '#/components/schemas/Sheet/properties/summary'
              totalRowCount:
                description: The total number of rows in the sheet.
                type: number
              userPermissions:
                $ref: '#/components/schemas/Sheet/properties/userPermissions'
              userSettings:
                $ref: '#/components/schemas/Sheet/properties/userSettings'
              version:
                description: A number that is incremented every time a sheet is modified.
                type: number
              workspace:
                $ref: '#/components/schemas/Scope/properties/workspaces/items'
        sights:
          description: Dashboards contained in folder.
          type: array
          items:
            type: object
            allOf:
              - type: object
                allOf:
                  - type: object
                    allOf:
                      - type: object
                        properties:
                          name:
                            description: Dashboard name.
                            type: string
                    properties:
                      id:
                        description: Dashboard Id.
                        type: number
                        readOnly: true
                      accessLevel:
                        $ref: '#/components/schemas/Discussion/properties/accessLevel'
                      permalink:
                        description: >-
                          URL that represents a direct link to the dashboard in
                          Smartsheet.
                        type: string
                        readOnly: true
                properties:
                  createdAt:
                    $ref: '#/components/schemas/Attachment/properties/createdAt'
                  modifiedAt:
                    $ref: '#/components/schemas/Attachment/properties/createdAt'
            properties:
              backgroundColor:
                description: The hex color, for instance `#E6F5FE`.
                type: string
                readOnly: true
              defaultWidgetBackgroundColor:
                description: >-
                  The hex color of the background color for all widgets except
                  for title widgets on the dashboard, for instance `#E6F5FEF4`
                  or `#E6F5FE`.
                type: string
                readOnly: true
              columnCount:
                description: Number of columns that the dashboard contains.
                type: number
                readOnly: true
              favorite:
                description: >-
                  (Deprecated) Indicates whether the user has marked the
                  dashboard as a favorite.
                type: boolean
                readOnly: true
              source:
                $ref: '#/components/schemas/Sheet/properties/source'
              widgets:
                readOnly: true
                type: array
                items:
                  $ref: '#/components/schemas/Sight/properties/widgets/items'
              workspace:
                $ref: '#/components/schemas/Scope/properties/workspaces/items'
        templates:
          description: Templates contained in folder.
          type: array
          items:
            description: A template can be used to create a sheet.
            type: object
            properties:
              id:
                description: Template Id.
                type: number
              type:
                description: Type of template. Only applicable to public templates.
                type: string
                enum:
                  - report
                  - sheet
              accessLevel:
                $ref: '#/components/schemas/Discussion/properties/accessLevel'
              blank:
                description: >-
                  Indicates whether the template is blank. Only applicable to
                  public templates.
                type: boolean
              categories:
                description: >-
                  Indicates whether the template is blank. Only applicable to
                  public templates.
                type: array
                items:
                  type: string
              description:
                description: Template description.
                type: string
              globalTemplate:
                description: >-
                  Type of global template. Only applicable to blank public
                  templates.
                type: string
                enum:
                  - BLANK_SHEET
                  - PROJECT_SHEET
                  - TASK_LIST
              image:
                description: >-
                  URL to the small preview image for this template. Only
                  applicable to non-blank public templates.
                type: string
              largeImage:
                description: >-
                  URL to the large preview image for this template. Only
                  applicable to non-blank public templates.
                type: string
              locale:
                description: Locale of the template. Only applicable to public templates.
                type: string
                enum:
                  - ar_AE
                  - ar_BH
                  - ar_DZ
                  - ar_EG
                  - ar_IQ
                  - ar_JO
                  - ar_KW
                  - ar_LB
                  - ar_LY
                  - ar_MA
                  - ar_OM
                  - ar_QA
                  - ar_SA
                  - ar_SD
                  - ar_SY
                  - ar_TN
                  - ar_YE
                  - be_BY
                  - bg_BG
                  - ca_ES
                  - cs_CZ
                  - da_DK
                  - de_AT
                  - de_CH
                  - de_DE
                  - de_LU
                  - el_CY
                  - el_GR
                  - en_AU
                  - en_CA
                  - en_GB
                  - en_IE
                  - en_IN
                  - en_MT
                  - en_NZ
                  - en_PH
                  - en_SG
                  - en_US
                  - en_ZA
                  - es_AR
                  - es_BO
                  - es_CL
                  - es_CO
                  - es_CR
                  - es_DO
                  - es_EC
                  - es_ES
                  - es_GT
                  - es_HN
                  - es_MX
                  - es_NI
                  - es_PA
                  - es_PE
                  - es_PR
                  - es_PY
                  - es_SV
                  - es_US
                  - es_UY
                  - es_VE
                  - et_EE
                  - fi_FI
                  - fr_BE
                  - fr_CA
                  - fr_CH
                  - fr_FR
                  - fr_LU
                  - ga_IE
                  - hi_US
                  - hr_HR
                  - hu_HU
                  - in_ID
                  - is_IS
                  - it_CH
                  - it_IT
                  - iw_IL
                  - ja_JP
                  - ko_KR
                  - lt_LT
                  - lv_LV
                  - mk_MK
                  - ms_MY
                  - mt_MT
                  - nl_BE
                  - nl_NL
                  - no_NO
                  - pl_PL
                  - pt_BR
                  - pt_PT
                  - ro_RO
                  - ru_RU
                  - sk_SK
                  - sl_SI
                  - sq_AL
                  - sr_BA
                  - sr_CS
                  - sv_SE
                  - th_US
                  - tr_TR
                  - uk_UA
                  - vi_VN
                  - zh_CN
                  - zh_HK
                  - zh_SG
                  - zh_TW
              name:
                type: string
                description: Type of global template.
                example: Awesome Project Template
              tags:
                description: >-
                  List of search tags for this template. Only applicable to
                  non-blank public templates.
                type: array
                items:
                  type: string
    FontFamily:
      type: object
      properties:
        name:
          description: Name of the font family.
          example: Arial
          type: string
        traits:
          description: >-
            Platform-independent traits of the font family. Contains one of the
            listed enum values.
          example:
            - sans-serif
          type: array
          items:
            type: string
            enum:
              - sans-serif
              - serif
    FormatDetails:
      type: object
      properties:
        paperSize:
          description: Specifies paper size.
          type: string
          example: LETTER
          enum:
            - A0
            - A1
            - A2
            - A3
            - A4
            - ARCHID
            - LEGAL
            - LETTER
            - WIDE
    FormatTables:
      description: >-
        Contains all of the lookup tables that the format descriptor indexes
        refer to. Here the examples show the formatting options, the default
        value is used to denote each option. NOTE -- Indexes and their values
        are guaranteed never to change or be removed for a given major API
        version.  However, new values could potentially be added to the ends of
        lookup tables. Because of this possibility, your code should handle the
        case where a cell might contain a format index value greater than the
        size of a lookup table your app has loaded. Your application should
        check for that case and reload the format tables if necessary.
      type: object
      properties:
        defaults:
          description: >-
            A format descriptor where each element describes the formats the
            Smartsheet Web app displays for format values that have not been
            set. Each value refers to an index of the following options.
          type: string
          example: ',,1,1,,,,,,,,,,,,,'
        bold:
          type: array
          items:
            type: string
          example:
            - none
            - 'on'
        color:
          description: >-
            The default setting is "none". Typically this is black text and a
            white background.
          type: array
          items:
            type: string
          example:
            - none
            - transparent
            - '#000000'
            - '#0B347D'
            - '#1061C3'
            - '#237F2E'
            - '#40B14B'
            - '#592C00'
            - '#5FB3F9'
            - '#61058B'
            - '#757575'
            - '#7ED085'
            - '#9210AD'
            - '#974C00'
            - '#991310'
            - '#B9DDFC'
            - '#BDBDBD'
            - '#C6E7C8'
            - '#D0AF8F'
            - '#D190DA'
            - '#E2F2FE'
            - '#E5E5E5'
            - '#E7F5E9'
            - '#EA352E'
            - '#EA5000'
            - '#EBC700'
            - '#EBC7EF'
            - '#EEDCCA'
            - '#F2E8DE'
            - '#F4E4F5'
            - '#F87E7D'
            - '#FEFF00'
            - '#FEFF85'
            - '#FF8D00'
            - '#FFCCD2'
            - '#FFCD7A'
            - '#FFE1AF'
            - '#FFEBEE'
            - '#FFED00'
            - '#FFF3DF'
            - '#FFFEE6'
            - '#FFFFFF'
        currency:
          type: array
          items:
            type: object
            properties:
              code:
                description: The ISO 4217 currency code.
                example: EUR
                type: string
              symbol:
                description: The currency symbol.
                type: string
                example: €
          example:
            - code: none
              symbol: none
            - code: ARS
              symbol: $
            - code: AUD
              symbol: $
            - code: BRL
              symbol: R$
            - code: CAD
              symbol: $
            - code: CHF
              symbol: CHF
            - code: CLP
              symbol: $
            - code: CNY
              symbol: ¥
            - code: DKK
              symbol: kr.
            - code: EUR
              symbol: €
            - code: GBP
              symbol: £
            - code: HKD
              symbol: $
            - code: ILS
              symbol: ₪
            - code: INR
              symbol: ₹
            - code: JPY
              symbol: ¥
            - code: KRW
              symbol: ₩
            - code: MXN
              symbol: $
            - code: NOK
              symbol: kr
            - code: NZD
              symbol: $
            - code: RUB
              symbol: ₽
            - code: SEK
              symbol: kr
            - code: SGD
              symbol: $
            - code: USD
              symbol: $
            - code: ZAR
              symbol: R
        dateFormat:
          type: array
          items:
            type: string
          example:
            - LOCALE_BASED
            - MMMM_D_YYYY
            - MMM_D_YYYY
            - D_MMM_YYYY
            - YYYY_MM_DD_HYPHEN
            - YYYY_MM_DD_DOT
            - DWWWW_MMMM_D_YYYY
            - DWWW_DD_MMM_YYYY
            - DWWW_MM_DD_YYYY
            - MMMM_D
            - D_MMMM
        decimalCount:
          type: array
          items:
            type: string
            example:
              - '0'
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
        fontFamily:
          type: array
          items:
            type: object
            properties:
              name:
                description: Name of the font family.
                example: Arial
                type: string
              traits:
                description: >-
                  Platform-independent traits of the font family. Contains one
                  of the listed enum values.
                example:
                  - sans-serif
                type: array
                items:
                  type: string
                  enum:
                    - sans-serif
                    - serif
          example:
            - name: Arial
              traits:
                - sans-serif
            - name: Roboto
              traits:
                - sans-serif
            - name: Tahoma
              traits:
                - sans-serif
            - name: Times New Roman
              traits:
                - serif
            - name: Verdana
              traits:
                - sans-serif
        fontSize:
          type: array
          items:
            type: string
          example:
            - '8'
            - '9'
            - '10'
            - '12'
            - '14'
            - '16'
            - '18'
            - '20'
            - '24'
            - '28'
            - '32'
            - '36'
        horizontalAlign:
          description: The default setting is "default" which is equivalent to "left".
          type: array
          items:
            type: string
          example:
            - default
            - left
            - center
            - right
        italic:
          type: array
          items:
            type: string
          example:
            - none
            - 'on'
        numberFormat:
          type: array
          items:
            type: string
          example:
            - none
            - NUMBER
            - CURRENCY
            - PERCENT
        strikethrough:
          type: array
          items:
            type: string
          example:
            - none
            - 'on'
        textWrap:
          type: array
          items:
            type: string
          example:
            - none
            - 'on'
        thousandsSeparator:
          type: array
          items:
            type: string
          example:
            - none
            - 'on'
        underline:
          type: array
          items:
            type: string
          example:
            - none
            - 'on'
        verticalAlign:
          description: The default setting is "default" which is equivalent to "top".
          type: array
          items:
            type: string
          example:
            - default
            - top
            - middle
            - bottom
    Group:
      type: object
      properties:
        id:
          description: Group Id.
          type: number
          example: 4583173393803140
        name:
          description: Group name.
          type: string
          example: Group 1
        description:
          description: Group description.
          type: string
          example: My group
        owner:
          description: Group owner’s email address.
          type: string
          format: email
          example: john.doe@smartsheet.com
        ownerId:
          description: Group owner's user Id.
          type: number
          example: 2331373580117892
        createdAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
    GroupMember:
      type: object
      properties:
        id:
          description: Group member's user Id.
          type: number
          example: 2331373580117892
        email:
          description: Group member's email address.
          type: string
          format: email
          example: john.doe@smartsheet.com
        firstName:
          description: Group member's first name.
          type: string
          example: John
        lastName:
          description: Group member's last name.
          type: string
          example: Doe
        name:
          description: Group member's full name.
          type: string
          example: John Doe
    Home:
      description: >-
        All objects a user has access to, including dashboards, folders,
        reports, sheets, and templates.
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder/properties/folders/items'
        reports:
          type: array
          items:
            $ref: '#/components/schemas/Folder/properties/reports/items'
        sheets:
          type: array
          items:
            $ref: '#/components/schemas/Folder/properties/sheets/items'
        sights:
          type: array
          items:
            $ref: '#/components/schemas/Folder/properties/sights/items'
        templates:
          type: array
          items:
            $ref: '#/components/schemas/Folder/properties/templates/items'
    Hyperlink:
      type: object
      properties:
        reportId:
          type: number
          description: If non-null, this hyperlink is a link to the report with this Id.
        sheetId:
          type: number
          description: If non-null, this hyperlink is a link to the sheet with this Id.
        sightId:
          type: number
          description: If non-null, this hyperlink is a link to the dashboard with this Id.
        url:
          type: string
          description: >-
            When the hyperlink is a URL link, this property contains the URL
            value. When the hyperlink is a dashboard/report/sheet link (that is,
            dashboardId, reportId, or sheetId is non-null), this property
            contains the permalink to the dashboard, report, or sheet.
    Image:
      type: object
      properties:
        altText:
          type: string
          description: Alternate text for the image.
        height:
          type: number
          description: Original height (in pixels) of the uploaded image.
        id:
          type: string
          description: Image Id.
        width:
          type: number
          description: Original width (in pixels) of the uploaded image.
    ImageUrl:
      properties:
        imageId:
          description: Image Id.
          type: string
        error:
          $ref: '#/components/schemas/BulkItemFailure/properties/error'
        height:
          description: Image height in pixels.
          type: number
        url:
          description: >-
            Temporary URL that can be used to retrieve the image. This attribute
            can be present in a response but is never specified in a request.
          type: string
        width:
          description: Image width in pixels.
          type: number
    ImageUrlMap:
      type: object
      properties:
        imageUrls:
          type: array
          items:
            properties:
              imageId:
                description: Image Id.
                type: string
              error:
                $ref: '#/components/schemas/BulkItemFailure/properties/error'
              height:
                description: Image height in pixels.
                type: number
              url:
                description: >-
                  Temporary URL that can be used to retrieve the image. This
                  attribute can be present in a response but is never specified
                  in a request.
                type: string
              width:
                description: Image width in pixels.
                type: number
        urlExpiresInMillis:
          description: Milliseconds before the URLs within imageUrls expire.
          type: number
    ImageWidgetContent:
      type: object
      title: Image
      properties:
        type:
          type: string
          enum:
            - IMAGE
        privateId:
          description: The image private Id.
          type: string
        fileName:
          description: Name of the image file.
          type: string
        fit:
          description: >
            Describes how the image occupies the available space of its widget.
             * ACTUAL_SIZE - Uses the original image width and height dimensions.
             * FILL - Scales the image to maintain its aspect ratio while filling
            its entire widget. If the image aspect  ratio does not match the
            aspect ratio of its widget, then the image will be clipped to fit.
             * FIT - Scales the image to maintain its aspect ratio while fitting within
            its widget. The image will be  "letterboxed" if its aspect ratio
            does not match the aspect ratio of its widget. Default value for
            new  image widgets and for existing image widgets where this
            property has not been explicitly set.
          enum:
            - ACTUAL_SIZE
            - FILL
            - FIT
          type: string
        format:
          description: Format descriptor. Follows the pattern in FormatTables.
          type: string
          example: ',7,1,,,,2,2,1,3,,,,,,1,'
        height:
          type: number
        hyperlink:
          $ref: '#/components/schemas/CellLinkWidgetContent/properties/hyperlink'
        margin:
          description: >
            Indicates whether there is margin between the image and its widget
            borders.
             * MARGIN - Default value for existing image widgets where this property
            has not been explicitly set.
             * NO_MARGIN - Default value for new image widgets.
          enum:
            - MARGIN
            - NO_MARGIN
          type: string
        width:
          description: Original width of the image in pixels.
          type: number
    IndexResult:
      type: object
      properties:
        pageNumber:
          description: >-
            The current page in the full result set that the data array
            represents. NOTE when a page number greater than totalPages is
            requested, the last page is instead returned.
          type: number
          example: 1
          readOnly: true
        pageSize:
          description: >-
            The number of items in a page. Omitted if there is no limit to page
            size (and hence, all results are included). Unless otherwise
            specified, this defaults to 100 for most endpoints.
          type: number
          example: 50
          nullable: true
          readOnly: true
        totalPages:
          description: The total number of pages in the full result set.
          type: number
          example: 25
          readOnly: true
        totalCount:
          description: The total number of items in the full result set.
          type: number
          example: 136
          readOnly: true
    IndexResultUnknownPages:
      type: object
      properties:
        pageNumber:
          description: >-
            The current page in the full result set that the data array
            represents. NOTE when a page number greater than totalPages is
            requested, the last page is instead returned.
          type: number
          example: 1
          readOnly: true
        pageSize:
          description: >-
            The number of items in a page. Omitted if there is no limit to page
            size (and hence, all results are included). Unless otherwise
            specified, this defaults to 100 for most endpoints.
          type: number
          example: 50
          nullable: true
          readOnly: true
        totalPages:
          description: >-
            If the data field value is not empty, returns a static value of -1.
            When you reach the first empty page after the end of the result set,
            then all four fields are set with a static value of “0”.
          type: number
          example: -1
          readOnly: true
        totalCount:
          description: >-
            If the data field value is not empty, returns a static value of -1.
            When you reach the first empty page after the end of the result set,
            then all four fields are set with a static value of “0”.
          type: number
          example: -1
          readOnly: true
    MiniUser:
      description: MiniUser Object
      type: object
      properties:
        email:
          type: string
          format: email
          example: jane.doe@smartsheet.com
        name:
          type: string
          readOnly: true
          example: Jane Doe
    MultiRowEmail:
      allOf:
        - allOf:
            - $ref: '#/components/schemas/ProofRequestBody/allOf/0'
          type: object
          properties:
            columnIds:
              description: The Id of the columns to be included.
              type: array
              items:
                type: number
            includeAttachments:
              description: Indicates whether to include attachments in the email.
              type: boolean
            includeDiscussions:
              description: Indicates whether to include discussions in the email.
              type: boolean
            layout:
              description: >
                One of the following values: **HORIZONTAL** or **VERTICAL**.
                Optional, defaults to **HORIZONTAL** when multiple rows are
                being sent and to **VERTICAL** when a single row is being sent.
                **HORIZONTAL** formats the rows being sent as a grid, whereas
                **VERTICAL** formats the rows being sent as separate cards.
              type: boolean
      type: object
      properties:
        rowIds:
          description: The Ids of rows to be included.
          type: array
          items:
            type: number
    ObjectValue:
      description: >-
        The base object for values found in the **Cell.objectValue** attribute.
        Its **objectType** attribute indicates the type of the object. This
        object itself is not used directly.
      type: object
      properties:
        objectType:
          type: string
          enum:
            - ABSTRACT_DATETIME
            - CONTACT
            - DATE
            - DATETIME
            - DURATION
            - MULTI_CONTACT
            - MULTI_PICKLIST
            - PREDECESSOR_LIST
    Predecessor:
      type: object
      properties:
        rowId:
          description: The Id of the predecessor row.
          type: number
        type:
          description: |
            Type of the predecessor:
             * FF (Finish-to-Finish) - finish at the same time the predecessor finishes.
             * FS (Finish-to-Start) - start after the predecessor finishes.
             * SF (Start-to-Finish) - finish before the predecessor starts.
             * SS (Start-to-Start) - start at the same time the predecessor starts.
          type: string
          enum:
            - FF
            - FS
            - SF
            - SS
        inCriticalPath:
          description: True if this predecessor is in the critical path.
          type: boolean
          readOnly: true
        invalid:
          description: >-
            True if the row referenced by rowId is not a valid row in this
            sheet, or there is a circular reference (displayed in the Smartsheet
            app as "#REF") Omitted if false.
          type: boolean
          readOnly: true
        lag:
          description: >-
            In a project sheet, represents a value in a duration cell, or a lag
            value of a predecessor.
          type: object
          properties:
            days:
              description: The number of days for this duration.
              type: number
            elapsed:
              description: >-
                If true, indicates this duration represents elapsed time, which
                ignores non-working time.
              type: boolean
            hours:
              description: The number of hours for this duration.
              type: number
            milliseconds:
              description: The number of milliseconds for this duration.
              type: number
            minutes:
              description: The number of minutes for this duration.
              type: number
            negative:
              description: >-
                When used as a predecessor's lag value, indicates whether the
                lag is negative (if true), or positive (false). The individual
                duration values themselves (for example, days, hours, or
                minutes) is always positive.
              type: boolean
            objectType:
              type: string
              enum:
                - DURATION
            seconds:
              description: The number of seconds for this duration.
              type: number
            weeks:
              description: The number of weeks for this duration.
              type: number
        rowNumber:
          description: The row number of the predecessor row. Omitted if invalid is true.
          type: number
          readOnly: true
    PredecessorList:
      allOf:
        - $ref: '#/components/schemas/Cell/properties/objectValue'
      type: object
      properties:
        objectType:
          type: string
          enum:
            - PREDECESSOR_LIST
        predecessors:
          type: array
          items:
            type: object
            properties:
              rowId:
                description: The Id of the predecessor row.
                type: number
              type:
                description: |
                  Type of the predecessor:
                   * FF (Finish-to-Finish) - finish at the same time the predecessor
                  finishes.
                   * FS (Finish-to-Start) - start after the predecessor finishes.
                   * SF (Start-to-Finish) - finish before the predecessor starts.
                   * SS (Start-to-Start) - start at the same time the predecessor
                  starts.
                type: string
                enum:
                  - FF
                  - FS
                  - SF
                  - SS
              inCriticalPath:
                description: True if this predecessor is in the critical path.
                type: boolean
                readOnly: true
              invalid:
                description: >-
                  True if the row referenced by rowId is not a valid row in this
                  sheet, or there is a circular reference (displayed in the
                  Smartsheet app as "#REF") Omitted if false.
                type: boolean
                readOnly: true
              lag:
                $ref: '#/components/schemas/Predecessor/properties/lag'
              rowNumber:
                description: >-
                  The row number of the predecessor row. Omitted if invalid is
                  true.
                type: number
                readOnly: true
    ProjectSettings:
      description: >-
        Represents the project settings dependencies for a specific sheet.
        Project settings may be updated on sheets that the user has editor
        access.
      type: object
      properties:
        lengthOfDay:
          description: Length of a workday for a project sheet.
          type: number
          minimum: 1
          maximum: 24
        nonWorkingDays:
          description: Non-working days for a project sheet.
          type: array
          items:
            type: string
            format: date
        workingDays:
          type: array
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
    Proof:
      description: Proof Object
      type: object
      properties:
        id:
          description: Proof Id of the proof version.
          type: number
        originalId:
          description: Proof Id of the original proof version.
          type: number
        name:
          description: >-
            Proof name. This is the same as primary column value. If the primary
            column value is empty, name is empty.
          type: string
        proofType:
          description: File type for the proof version.
          type: string
          enum:
            - DOCUMENT
            - IMAGE
            - MIXED
            - NONE
            - VIDEO
        proofRequestUrl:
          description: URL to review a proofing request.
          type: string
        version:
          description: The version number of the proof.
          type: number
        lastUpdatedAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        lastUpdatedBy:
          description: >
            `User` object containing `name` and `email` of the user who last
            updated the proof.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        isCompleted:
          description: Indicates whether the proof is completed.
          type: boolean
        attachments:
          description: >-
            Array of Attachment objects. Only returned if the include query
            string parameter contains attachments.
          type: array
          items:
            $ref: '#/components/schemas/Comment/properties/attachments/items'
        discussions:
          description: >-
            Array of Discussion objects. Only returned if the include query
            string parameter contains discussions.
          type: array
          items:
            type: object
            properties:
              accessLevel:
                $ref: '#/components/schemas/Discussion/properties/accessLevel'
              id:
                description: Discussion Id.
                type: number
              comments:
                description: >-
                  Array of comments in discussion. Only returned if the include
                  query string parameter contains comments.
                type: array
                items:
                  $ref: '#/components/schemas/Discussion/properties/comments/items'
              commentAttachments:
                description: >-
                  Array of attachments on discussion comments. Only returned if
                  the include query string parameter contains attachments.
                type: array
                items:
                  $ref: '#/components/schemas/Comment/properties/attachments/items'
              commentCount:
                description: Number of comments in the discussion.
                type: number
              createdBy:
                description: >
                  `User` object containing `name` and `email` of the user who
                  created the discussion.
                allOf:
                  - $ref: >-
                      #/components/schemas/Attachment/properties/createdBy/allOf/0
              lastCommentedAt:
                $ref: '#/components/schemas/Attachment/properties/createdAt'
              lastCommentedUser:
                description: >
                  `User` object containing `name` and `email` of the user who
                  last commented on the discussion.
                allOf:
                  - $ref: >-
                      #/components/schemas/Attachment/properties/createdBy/allOf/0
              parentId:
                description: The Id of the associated row or sheet.
                type: number
              parentType:
                description: Type of parent object.
                type: string
                enum:
                  - ROW
                  - SHEET
              readOnly:
                description: Indicates whether the user can modify the discussion.
                type: boolean
              title:
                description: >-
                  Title automatically created by duplicating the first 100
                  characters of top-level comment.
                type: string
                readOnly: true
    ProofRequest:
      allOf:
        - allOf:
            - $ref: '#/components/schemas/ProofRequestBody/allOf/0'
          type: object
          properties:
            isDownloadable:
              description: Whether the description is downloadable.
              type: boolean
      type: object
      properties:
        id:
          description: Proof request Id.
          type: number
        proofId:
          description: Proof Id of the original proof.
          type: number
        sentBy:
          description: |
            `User` object containing `name` and `email` of the sender.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        sentAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        isDownloadable:
          description: Indicates whether the description is downloadable.
          type: boolean
        status:
          description: Proof request status.
          type: string
          enum:
            - ACTIVE
            - EXPIRED
            - PROOF_DELETED
    ProofRequestAction:
      type: object
      properties:
        user:
          description: >
            `User` object containing `name` and `email` of the user performing
            the action.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        actionStatus:
          description: Proof request action status.
          type: string
          enum:
            - APPROVED
            - PENDING
            - REJECTED
    ProofRequestBody:
      allOf:
        - type: object
          properties:
            ccMe:
              description: Indicates whether to send a copy of the email to the sender.
              type: boolean
            message:
              description: The message of the email.
              type: string
            sendTo:
              description: Array of recipients.
              type: array
              items:
                $ref: >-
                  #/components/schemas/AutomationAction/oneOf/1/properties/recipients/items
            subject:
              description: The subject of the email.
              type: string
      type: object
      properties:
        isDownloadable:
          description: Whether the description is downloadable.
          type: boolean
    Recipient:
      description: >
        Specifies the recipient of an email. The recipient may be either an
        individual or a group. To specify an individual, set the email
        attribute; to specify a group, set the groupId attribute. Either email
        and groupId may be set, but not both.
      oneOf:
        - type: object
          description: >
            Specifies the recipient of an [Email]($ref:
            'Email.yaml#/components/schemas/Email'). The recipient may be either
            an individual or a group. To specify an individual, set the
            **email** attribute; to specify a group, set the **groupId**
            attribute. Either **email** and **groupId** may be set, but not
            both.
          properties:
            email:
              description: The email address of an individual recipient.
              type: string
              format: email
              example: john.doe@smartsheet.com
        - type: object
          description: >
            Specifies the recipient of an [Email]($ref:
            'Email.yaml#/components/schemas/Email'). The recipient may be either
            an individual or a group. To specify an individual, set the
            **email** attribute; to specify a group, set the **groupId**
            attribute. Either **email** and **groupId** may be set, but not
            both.
          properties:
            groupId:
              description: The Id of a group recipient.
              type: number
              example: 2258118617917316
    Report:
      allOf:
        - $ref: '#/components/schemas/Folder/properties/sheets/items'
      type: object
      properties:
        scope:
          type: object
          properties:
            sheets:
              description: >
                Array of Sheet objects (containing just the sheet Id) of any
                sheets that the requester has access to that make up the report.
              type: array
              items:
                $ref: '#/components/schemas/Folder/properties/sheets/items'
            workspaces:
              description: >
                Array of Workspace objects (containing just the workspace Id)
                that the requester has access to that make up the report.
              type: array
              items:
                $ref: '#/components/schemas/Scope/properties/workspaces/items'
        sourceSheets:
          type: array
          description: >-
            An array of Sheet objects (without rows), representing the sheets
            that rows in the report originated from. Only included in the Get
            Report response if the include parameter specifies sourceSheets.
          items:
            $ref: '#/components/schemas/Folder/properties/sheets/items'
        isSummaryReport:
          type: boolean
          description: >-
            A boolean to represent whether the report is a sheet summary report
            or not. If this property is false, it is a row report.
        proofs:
          description: Report Proof Object
          type: object
          properties:
            id:
              description: Proof Id of the proof version.
              type: number
            originalId:
              description: Proof Id of the original proof version.
              type: number
            name:
              description: >-
                Proof name. This is the same as primary column value. If the
                primary column value is empty, name is empty.
              type: string
            type:
              description: File type for the proof version.
              type: string
              enum:
                - DOCUMENT
                - IMAGE
                - MIXED
                - NONE
                - VIDEO
            documentType:
              description: Document type for the proof version.
              type: string
              enum:
                - PDF
                - VIDEO
                - WORD
                - POWERPOINT
                - EXCEL
                - IMAGE
            proofRequestUrl:
              description: URL to review a proofing request.
              type: string
            version:
              description: The version number of the proof.
              type: number
            lastUpdatedAt:
              $ref: '#/components/schemas/Attachment/properties/createdAt'
            lastUpdatedBy:
              description: >
                `User` object containing `name` and `email` of the user who last
                updated the proof.
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
            isCompleted:
              description: Indicates whether the proof is completed.
              type: boolean
    ReportCell:
      allOf:
        - $ref: '#/components/schemas/CellDataItem/properties/cell'
      type: object
      properties:
        virtualColumnId:
          type: number
          description: >-
            This property refers to the cell's parent column in the report,
            while the columnId property refers to the cell's parent column in
            its originating source sheet.
    ReportColumn:
      allOf:
        - $ref: '#/components/schemas/CellLinkWidgetContent/properties/columns/items'
      type: object
      properties:
        virtualId:
          description: The virtual Id of this report column.
          type: number
        sheetNameColumn:
          description: Returns true only for the special "Sheet Name" report column.
          type: boolean
    ReportPublish:
      type: object
      properties:
        readOnlyFullAccessibleBy:
          description: >
            Indicates who can access the 'Read-Only Full' view of the published
            report:

            * If **ALL**, it is available to anyone who has the link.

            * If **ORG**, it is available only to members of the report owner's
            Smartsheet organization account.

            * If **SHARED**, it is available only to users shared to the item.


            Only returned in a response if **readOnlyFullEnabled** = **true**.
          type: string
        readOnlyFullDefaultView:
          description: >
            Indicates which view the user has set for a read-only, default view
            of the published report. Must be one of

            the following values: **CALENDAR**, **CARD**, or **GRID**.
          type: string
        readOnlyFullEnabled:
          description: >
            (Required) If **true**, a rich version of the report is published
            with the ability to download row

            attachments and discussions.
          type: boolean
        readOnlyFullShowToolbar:
          deprecated: true
          description: >
            Indicates whether the left nav toolbar is displayed. The default, or
            **true**, is to display the toolbar.

            If **false**, hides the toolbar.
          type: boolean
        readOnlyFullUrl:
          description: |
            URL for 'Read-Only Full' view of the published report.

            Only returned in a response if **readOnlyFullEnabled** = **true**.
          type: string
    ReportRow:
      allOf:
        - type: object
          properties:
            id:
              description: Row Id.
              type: number
            sheetId:
              description: Parent sheet Id.
              type: number
            siblingId:
              description: Sibling Id.
              type: number
            accessLevel:
              $ref: '#/components/schemas/Discussion/properties/accessLevel'
            attachments:
              description: >-
                Attachments on row. Only returned if the include query string
                parameter contains attachments.
              type: array
              items:
                $ref: '#/components/schemas/Comment/properties/attachments/items'
            cells:
              description: Cells belonging to the row.
              type: array
              items:
                $ref: '#/components/schemas/CellDataItem/properties/cell'
            columns:
              description: >-
                Columns of row. Only returned if the include query string
                parameter contains columns.
              type: array
              items:
                $ref: >-
                  #/components/schemas/CellLinkWidgetContent/properties/columns/items
            conditionalFormat:
              description: >-
                Describes this row's conditional format. Only returned if the
                include query string parameter contains format and this row has
                a conditional format applied.
              type: string
              example: ',,1,1,,,,,,,,,,,,,'
            createdAt:
              $ref: '#/components/schemas/Attachment/properties/createdAt'
            createdBy:
              description: >-
                User object containing name and email of the creator of this
                row.
              type: object
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
            discussions:
              description: >-
                Discussions on the row. Only returned if the include query
                string parameter contains discussions.
              type: array
              items:
                $ref: '#/components/schemas/Proof/properties/discussions/items'
            proofs:
              description: >-
                Proof on row. Only returned if the include query string
                parameter contains proofs.
              $ref: '#/components/schemas/Row/properties/proofs'
            expanded:
              description: Indicates whether the row is expanded or collapsed.
              type: boolean
            filteredOut:
              description: >-
                Indicates if the row is filtered out by a column filter. Only
                returned if the include query string parameter contains filters.
              type: boolean
            format:
              description: >-
                Format descriptor. Only returned if the include query string
                parameter contains format and this row has a non-default format
                applied.
              type: string
              example: ',,1,1,,,,,,,,,,,,,'
            inCriticalPath:
              description: >-
                Only returned, with a value of true, if the sheet is a project
                sheet with dependencies enabled and this row is in the critical
                path.
              type: boolean
            locked:
              description: Indicates whether the row is locked.
              type: boolean
            lockedForUser:
              description: Indicates whether the row is locked for the requesting user.
              type: boolean
            modifiedAt:
              $ref: '#/components/schemas/Attachment/properties/createdAt'
            modifiedBy:
              description: >-
                User object containing name and email of the last person to
                modify this row.
              type: object
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
            permaLink:
              description: >-
                URL that represents a direct link to the row in Smartsheet. Only
                returned if the include query string parameter contains
                rowPermalink.
              type: string
            rowNumber:
              description: Row number within the sheet.
              type: number
              minimum: 1
            version:
              description: >-
                Sheet version number that is incremented every time a sheet is
                modified.
              type: number
      type: object
      properties:
        sheetId:
          type: number
          description: The Id of the sheet from which the row originates.
    ReportWidgetContent:
      type: object
      title: Report
      properties:
        type:
          type: string
          enum:
            - GRIDGANTT
        reportId:
          description: Report Id denoting container source.
          type: number
        htmlContent:
          description: HTMl snippet to render report.
          type: string
        backgroundColor:
          description: The hex color.
          example: '#E6F5FE'
          type: string
        hyperlink:
          $ref: '#/components/schemas/CellLinkWidgetContent/properties/hyperlink'
    Result:
      type: object
      allOf:
        - type: object
          allOf:
            - type: object
              properties:
                message:
                  description: >-
                    Message that indicates the outcome of the request. (One of
                    SUCCESS or PARTIAL_SUCCESS.)
                  type: string
                  enum:
                    - PARTIAL_SUCCESS
                    - SUCCESS
                  example: SUCCESS
                resultCode:
                  description: |-
                    * '0' Success
                    * '3' Partial Success of Bulk Operation
                  type: number
                  enum:
                    - 0
                    - 3
          properties:
            failedItems:
              description: >-
                Array of BulkItemFailure objects which represents the items that
                failed to be added or updated. See [Partial
                Success](/partial-success) for more information. Applicable only
                for bulk operations that support partial success.
              type: array
              items:
                type: object
                properties:
                  rowId:
                    description: >-
                      The Id of the row that failed. Applicable only to bulk row
                      operations.
                    type: number
                    nullable: true
                  error:
                    $ref: '#/components/schemas/BulkItemFailure/properties/error'
                  index:
                    description: The index of the failed item in the bulk request array.
                    type: number
              nullable: true
      properties:
        version:
          description: >-
            New version of the sheet. Applicable only for operations which
            update sheet data.
          type: number
          nullable: true
    RichTextWidgetContent:
      type: object
      title: Rich Text
      properties:
        type:
          type: string
          enum:
            - RICHTEXT
        htmlContent:
          description: >
            The widget contents as HTML. The Rich Text widget supports the
            following subset of HTML tags and CSS Styles:


            HTML
              * a - hyperlink
              * br - line break
              * li - list item
              * ol - ordered list
              * p - paragraph
              * span - section of the document
              * ul - unordered list

            CSS
              * color
              * font-family
              * font-size
              * font-style
              * font-weight
              * text-align
              * text-decoration
          type: string
    Row:
      type: object
      properties:
        id:
          description: Row Id.
          type: number
        sheetId:
          description: Parent sheet Id.
          type: number
        siblingId:
          description: Sibling Id.
          type: number
        accessLevel:
          $ref: '#/components/schemas/Discussion/properties/accessLevel'
        attachments:
          description: >-
            Attachments on row. Only returned if the include query string
            parameter contains attachments.
          type: array
          items:
            $ref: '#/components/schemas/Comment/properties/attachments/items'
        cells:
          description: Cells belonging to the row.
          type: array
          items:
            $ref: '#/components/schemas/CellDataItem/properties/cell'
        columns:
          description: >-
            Columns of row. Only returned if the include query string parameter
            contains columns.
          type: array
          items:
            $ref: >-
              #/components/schemas/CellLinkWidgetContent/properties/columns/items
        conditionalFormat:
          description: >-
            Describes this row's conditional format. Only returned if the
            include query string parameter contains format and this row has a
            conditional format applied.
          type: string
          example: ',,1,1,,,,,,,,,,,,,'
        createdAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        createdBy:
          description: User object containing name and email of the creator of this row.
          type: object
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        discussions:
          description: >-
            Discussions on the row. Only returned if the include query string
            parameter contains discussions.
          type: array
          items:
            $ref: '#/components/schemas/Proof/properties/discussions/items'
        proofs:
          description: Proof Object
          type: object
          properties:
            id:
              description: Proof Id of the proof version.
              type: number
            originalId:
              description: Proof Id of the original proof version.
              type: number
            name:
              description: >-
                Proof name. This is the same as primary column value. If the
                primary column value is empty, name is empty.
              type: string
            proofType:
              description: File type for the proof version.
              type: string
              enum:
                - DOCUMENT
                - IMAGE
                - MIXED
                - NONE
                - VIDEO
            proofRequestUrl:
              description: URL to review a proofing request.
              type: string
            version:
              description: The version number of the proof.
              type: number
            lastUpdatedAt:
              $ref: '#/components/schemas/Attachment/properties/createdAt'
            lastUpdatedBy:
              description: >
                `User` object containing `name` and `email` of the user who last
                updated the proof.
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
            isCompleted:
              description: Indicates whether the proof is completed.
              type: boolean
            attachments:
              description: >-
                Array of Attachment objects. Only returned if the include query
                string parameter contains attachments.
              type: array
              items:
                $ref: '#/components/schemas/Comment/properties/attachments/items'
            discussions:
              description: >-
                Array of Discussion objects. Only returned if the include query
                string parameter contains discussions.
              type: array
              items:
                $ref: '#/components/schemas/Proof/properties/discussions/items'
        expanded:
          description: Indicates whether the row is expanded or collapsed.
          type: boolean
        filteredOut:
          description: >-
            Indicates if the row is filtered out by a column filter. Only
            returned if the include query string parameter contains filters.
          type: boolean
        format:
          description: >-
            Format descriptor. Only returned if the include query string
            parameter contains format and this row has a non-default format
            applied.
          type: string
          example: ',,1,1,,,,,,,,,,,,,'
        inCriticalPath:
          description: >-
            Only returned, with a value of true, if the sheet is a project sheet
            with dependencies enabled and this row is in the critical path.
          type: boolean
        locked:
          description: Indicates whether the row is locked.
          type: boolean
        lockedForUser:
          description: Indicates whether the row is locked for the requesting user.
          type: boolean
        modifiedAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        modifiedBy:
          description: >-
            User object containing name and email of the last person to modify
            this row.
          type: object
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        permaLink:
          description: >-
            URL that represents a direct link to the row in Smartsheet. Only
            returned if the include query string parameter contains
            rowPermalink.
          type: string
        rowNumber:
          description: Row number within the sheet.
          type: number
          minimum: 1
        version:
          description: >-
            Sheet version number that is incremented every time a sheet is
            modified.
          type: number
    RowEmail:
      allOf:
        - $ref: '#/components/schemas/ProofRequestBody/allOf/0'
      type: object
      properties:
        columnIds:
          description: The Id of the columns to be included.
          type: array
          items:
            type: number
        includeAttachments:
          description: Indicates whether to include attachments in the email.
          type: boolean
        includeDiscussions:
          description: Indicates whether to include discussions in the email.
          type: boolean
        layout:
          description: >
            One of the following values: **HORIZONTAL** or **VERTICAL**.
            Optional, defaults to **HORIZONTAL** when multiple rows are being
            sent and to **VERTICAL** when a single row is being sent.
            **HORIZONTAL** formats the rows being sent as a grid, whereas
            **VERTICAL** formats the rows being sent as separate cards.
          type: boolean
    RowMapping:
      type: object
      properties:
        from:
          description: Row Id in the source sheet.
          type: number
        to:
          description: Row Id in the destination sheet.
          type: number
    Schedule:
      type: object
      properties:
        type:
          description: Type of schedule.
          type: string
          enum:
            - ONCE
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
        dayDescriptors:
          description: >
            A string array consists of one or more of the following values:

            * **DAY**, **WEEKDAY**, **WEEKEND**

            * **SUNDAY**, **MONDAY**, **TUESDAY**, **WEDNESDAY**, **THURSDAY**,
            **FRIDAY**, **SATURDAY**


            The subset of values applicable to the schedule type are as
            followed:


            | Value         | Daily schedule | Weekly schedule | Monthly
            schedule |

            |---------------|----------------|-----------------|------------------|

            | **DAY**       |                |                 |      
            **✓**      |

            | **WEEKDAY**   |      **✓**     |                 |      
            **✓**      |

            | **WEEKEND**   |                |                 |      
            **✓**      |

            | **SUNDAY**    |                |      **✓**      |      
            **✓**      |

            | **MONDAY**    |                |      **✓**      |      
            **✓**      |

            | **TUESDAY**   |                |      **✓**      |      
            **✓**      |

            | **WEDNESDAY** |                |      **✓**      |      
            **✓**      |

            | **THURSDAY**  |                |      **✓**      |      
            **✓**      |

            | **FRIDAY**    |                |      **✓**      |      
            **✓**      |

            | **SATURDAY**  |                |      **✓**      |      
            **✓**      |


            For more details, refer to the Table of Schedule Object’s Attributes
            below.
          type: array
          items:
            type: string
            enum:
              - DAY
              - WEEKDAY
              - WEEKEND
              - SUNDAY
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
        dayOfMonth:
          description: >
            The day within the month.


            Valid range is 1 to 28.


            This attribute is applicable to the following schedule type:
             * **MONTHLY**

            For more details, refer to the Table of Schedule Object’s Attributes
            below.
          type: number
          minimum: 1
          maximum: 31
        dayOrdinal:
          description: |
            Must be one of the following values:
              * **FIRST** or **LAST**
              * **SECOND**, **THIRD**, or **FOURTH**

            This attribute is applicable to the following schedule type:
              * **MONTHLY**

              For more details, refer to the Table of Schedule Object’s Attributes
            below.
          type: string
          enum:
            - FIRST
            - LAST
            - SECOND
            - THIRD
            - FOURTH
        repeatEvery:
          description: >
            Frequency on which the request is delivered. The unit is a function
            of the **type** attribute. For example,

            for **MONTHLY** schedule, **repeatEvery=1** means every month.


            Valid range is 1 to 99.


            This attribute is applicable to the following schedule types:
            **DAILY**, **WEEKLY**, **MONTHLY**, or **YEARLY**.

            For more details, refer to the Table of Schedule Object’s Attributes
            below.
          type: number
          minimum: 1
          maximum: 99
        endAt:
          allOf:
            - description: >
                The date, time, and time zone at which the delivery schedule
                ends.


                The value is either in a string format or a numeric format:


                * When the value is a string, it must be a valid ISO-8601 date
                and time with an offset (YYYY-MM-DDThh:mm:ssTZD).

                * When the value is a number, it represents a date and time with
                no offset (UTC time zone). See Dates and Times for more
                information.


                The value must be later than startAt and the current date and
                time.


                The value must contain zero hours, zero minutes, and zero
                seconds.


                The offset (time zone) value must be the same as the offset
                (time zone) value in startAt.


                This attribute is applicable to the following schedule types:
                DAILY, WEEKLY, MONTHLY, YEARLY. For more details, refer to the
                Table of Schedule Object’s Attributes below.
            - oneOf:
                - type: string
                  format: date-time
                - type: number
        lastSentAt:
          allOf:
            - description: The date and time for when the last request was sent.
            - $ref: '#/components/schemas/Attachment/properties/createdAt'
        nextSendAt:
          allOf:
            - description: >-
                The date and time for when the next request is scheduled to
                send.
            - $ref: '#/components/schemas/Attachment/properties/createdAt'
        startAt:
          allOf:
            - description: >
                The date, time, and time zone at which the first delivery
                starts.


                The value is either in a string format or a numeric format:

                 *   When the value is a string, it must be a valid ISO-8601 date and
                time with an offset (YYYY-MM-DDThh:mm:ssTZD).
                 *   When the value is a number, it represents a date and time with
                no offset (UTC time zone). See [Dates and
                Times](../../#section/API-Basics/Dates-and-Times) for more
                information.

                For ONCE schedule type, it must be later than the current date
                time.


                For all other schedule types, it must be later than
                “2000-01-01T00:00:00Z” in string format or 946684800000 in
                numeric format.


                The value must contain zero minutes and zero seconds.


                This attribute is applicable to all schedule types.


                For more details, refer to the Table of Schedule Object’s
                Attributes below.
            - $ref: '#/components/schemas/Schedule/properties/endAt/allOf/1'
    Scope:
      type: object
      properties:
        sheets:
          description: >
            Array of Sheet objects (containing just the sheet Id) of any sheets
            that the requester has access to that make up the report.
          type: array
          items:
            $ref: '#/components/schemas/Folder/properties/sheets/items'
        workspaces:
          description: >
            Array of Workspace objects (containing just the workspace Id) that
            the requester has access to that make up the report.
          type: array
          items:
            description: Can contain dashboards, folders, reports, sheets, and templates.
            type: object
            properties:
              id:
                description: Workspace Id.
                type: number
              name:
                description: Workspace name.
                type: string
              accessLevel:
                $ref: '#/components/schemas/Discussion/properties/accessLevel'
              permalink:
                description: >-
                  URL that represents a direct link to the workspace in
                  Smartsheet.
                type: string
    SearchResult:
      type: object
      properties:
        results:
          description: Array of SearchResultItem objects.
          type: array
          items:
            type: object
            properties:
              objectId:
                description: Search result object Id.
                type: number
              parentObjectId:
                description: Search result parent object Id.
                type: number
              contextData:
                description: Additional info on search result context.
                type: array
                items:
                  type: string
              objectType:
                description: >-
                  Search result object type (attachment, dashboard, discussion,
                  folder, report, row, sheet, summaryField, template, or
                  workspace).
                type: string
              parentObjectName:
                description: Search result parent object name.
                type: string
              parentObjectType:
                description: >-
                  Search result parent object type (dashboard, folder, report,
                  sheet, template, or workspace).
                type: string
              proofUrl:
                description: >-
                  The proofUrl string will be present in the contextData if the
                  discussion or attachment belongs to a proof.
                type: string
              text:
                description: Search result text excerpt.
                type: string
        totalCount:
          description: Total number of search results.
          type: number
    SearchResultItem:
      type: object
      properties:
        objectId:
          description: Search result object Id.
          type: number
        parentObjectId:
          description: Search result parent object Id.
          type: number
        contextData:
          description: Additional info on search result context.
          type: array
          items:
            type: string
        objectType:
          description: >-
            Search result object type (attachment, dashboard, discussion,
            folder, report, row, sheet, summaryField, template, or workspace).
          type: string
        parentObjectName:
          description: Search result parent object name.
          type: string
        parentObjectType:
          description: >-
            Search result parent object type (dashboard, folder, report, sheet,
            template, or workspace).
          type: string
        proofUrl:
          description: >-
            The proofUrl string will be present in the contextData if the
            discussion or attachment belongs to a proof.
          type: string
        text:
          description: Search result text excerpt.
          type: string
    SelectionRange:
      description: Defines a block of cells in a sheet.
      type: object
      properties:
        sourceColumnId1:
          description: Defines beginning edge of range when specifying one or more columns.
          type: number
        sourceColumnId2:
          description: Defines ending edge of range when specifying one or more columns.
          type: number
        sourceRowId1:
          description: Defines beginning edge of range when specifying one or more rows.
          type: number
        sourceRowId2:
          description: Defines ending edge of range when specifying one or more rows.
          type: number
    SentUpdateRequest:
      type: object
      properties:
        id:
          description: The Id of the sent update request.
          type: number
        columnIds:
          description: The Ids of columns included in the request.
          type: array
          items:
            type: number
        rowIds:
          description: The Ids of rows where an update is requested.
          type: array
          items:
            type: number
        updateRequestId:
          description: The Id of the originating update request.
          type: number
        includeAttachments:
          description: Indicates whether the attachments were included in the email.
          type: boolean
        includeDiscussions:
          description: Indicates whether the discussions were included in the email.
          type: boolean
        message:
          description: The message of the email. Max 10000 characters.
          type: string
        sentAt:
          description: >-
            The date and time for when the sent update request was sent to the
            recipient.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdAt'
        sentBy:
          description: |
            `User` object containing `name` and `email` of the sender.
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        sentTo:
          description: Recipient object.
          allOf:
            - $ref: >-
                #/components/schemas/AutomationAction/oneOf/1/properties/recipients/items
        status:
          description: The status of the sent update request.
          type: string
          enum:
            - CANCELED
            - COMPLETE
            - PENDING
        subject:
          description: The subject of the email.
          type: string
    ServerInfo:
      type: object
      properties:
        formats:
          description: >-
            Contains all of the lookup tables that the format descriptor indexes
            refer to. Here the examples show the formatting options, the default
            value is used to denote each option. NOTE -- Indexes and their
            values are guaranteed never to change or be removed for a given
            major API version.  However, new values could potentially be added
            to the ends of lookup tables. Because of this possibility, your code
            should handle the case where a cell might contain a format index
            value greater than the size of a lookup table your app has loaded.
            Your application should check for that case and reload the format
            tables if necessary.
          type: object
          properties:
            defaults:
              description: >-
                A format descriptor where each element describes the formats the
                Smartsheet Web app displays for format values that have not been
                set. Each value refers to an index of the following options.
              type: string
              example: ',,1,1,,,,,,,,,,,,,'
            bold:
              type: array
              items:
                type: string
              example:
                - none
                - 'on'
            color:
              description: >-
                The default setting is "none". Typically this is black text and
                a white background.
              type: array
              items:
                type: string
              example:
                - none
                - transparent
                - '#000000'
                - '#0B347D'
                - '#1061C3'
                - '#237F2E'
                - '#40B14B'
                - '#592C00'
                - '#5FB3F9'
                - '#61058B'
                - '#757575'
                - '#7ED085'
                - '#9210AD'
                - '#974C00'
                - '#991310'
                - '#B9DDFC'
                - '#BDBDBD'
                - '#C6E7C8'
                - '#D0AF8F'
                - '#D190DA'
                - '#E2F2FE'
                - '#E5E5E5'
                - '#E7F5E9'
                - '#EA352E'
                - '#EA5000'
                - '#EBC700'
                - '#EBC7EF'
                - '#EEDCCA'
                - '#F2E8DE'
                - '#F4E4F5'
                - '#F87E7D'
                - '#FEFF00'
                - '#FEFF85'
                - '#FF8D00'
                - '#FFCCD2'
                - '#FFCD7A'
                - '#FFE1AF'
                - '#FFEBEE'
                - '#FFED00'
                - '#FFF3DF'
                - '#FFFEE6'
                - '#FFFFFF'
            currency:
              type: array
              items:
                $ref: '#/components/schemas/FormatTables/properties/currency/items'
              example:
                - code: none
                  symbol: none
                - code: ARS
                  symbol: $
                - code: AUD
                  symbol: $
                - code: BRL
                  symbol: R$
                - code: CAD
                  symbol: $
                - code: CHF
                  symbol: CHF
                - code: CLP
                  symbol: $
                - code: CNY
                  symbol: ¥
                - code: DKK
                  symbol: kr.
                - code: EUR
                  symbol: €
                - code: GBP
                  symbol: £
                - code: HKD
                  symbol: $
                - code: ILS
                  symbol: ₪
                - code: INR
                  symbol: ₹
                - code: JPY
                  symbol: ¥
                - code: KRW
                  symbol: ₩
                - code: MXN
                  symbol: $
                - code: NOK
                  symbol: kr
                - code: NZD
                  symbol: $
                - code: RUB
                  symbol: ₽
                - code: SEK
                  symbol: kr
                - code: SGD
                  symbol: $
                - code: USD
                  symbol: $
                - code: ZAR
                  symbol: R
            dateFormat:
              type: array
              items:
                type: string
              example:
                - LOCALE_BASED
                - MMMM_D_YYYY
                - MMM_D_YYYY
                - D_MMM_YYYY
                - YYYY_MM_DD_HYPHEN
                - YYYY_MM_DD_DOT
                - DWWWW_MMMM_D_YYYY
                - DWWW_DD_MMM_YYYY
                - DWWW_MM_DD_YYYY
                - MMMM_D
                - D_MMMM
            decimalCount:
              type: array
              items:
                type: string
                example:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
            fontFamily:
              type: array
              items:
                $ref: '#/components/schemas/FormatTables/properties/fontFamily/items'
              example:
                - name: Arial
                  traits:
                    - sans-serif
                - name: Roboto
                  traits:
                    - sans-serif
                - name: Tahoma
                  traits:
                    - sans-serif
                - name: Times New Roman
                  traits:
                    - serif
                - name: Verdana
                  traits:
                    - sans-serif
            fontSize:
              type: array
              items:
                type: string
              example:
                - '8'
                - '9'
                - '10'
                - '12'
                - '14'
                - '16'
                - '18'
                - '20'
                - '24'
                - '28'
                - '32'
                - '36'
            horizontalAlign:
              description: The default setting is "default" which is equivalent to "left".
              type: array
              items:
                type: string
              example:
                - default
                - left
                - center
                - right
            italic:
              type: array
              items:
                type: string
              example:
                - none
                - 'on'
            numberFormat:
              type: array
              items:
                type: string
              example:
                - none
                - NUMBER
                - CURRENCY
                - PERCENT
            strikethrough:
              type: array
              items:
                type: string
              example:
                - none
                - 'on'
            textWrap:
              type: array
              items:
                type: string
              example:
                - none
                - 'on'
            thousandsSeparator:
              type: array
              items:
                type: string
              example:
                - none
                - 'on'
            underline:
              type: array
              items:
                type: string
              example:
                - none
                - 'on'
            verticalAlign:
              description: The default setting is "default" which is equivalent to "top".
              type: array
              items:
                type: string
              example:
                - default
                - top
                - middle
                - bottom
        supportedLocales:
          description: Array of strings representing all Smartsheet-supported locales.
          type: array
          items:
            type: string
    Share:
      type: object
      properties:
        id:
          description: >
            Share Id.


            **NOTE**: unlike other Smartsheet object Ids, this Id is an
            alphanumeric string.
          type: string
        groupId:
          description: Group Id if the share is a group share, else null.
          type: number
        userId:
          description: User Id if the share is a user share, else null.
          type: number
        type:
          description: |
            The type of this share. One of the following values: GROUP or USER.
          type: string
        accessLevel:
          $ref: '#/components/schemas/Discussion/properties/accessLevel'
        ccMe:
          description: >
            Indicates whether to send a copy of the email to the sharer of the
            sheet. You can specify this attribute

            in a request, but it is never present in a response.
          type: boolean
        createdAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        email:
          description: User's primary email address for user shares; null for group shares.
          type: string
        message:
          description: >
            The message included in the body of the email that is optionally
            sent to the recipient. You can specify

            this attribute in a request, but it is never present in a response.
          type: string
        modifiedAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        name:
          description: >-
            If a user share and user is also a contact, the user's full name. If
            a group share, the group's name.
          type: string
        scope:
          description: |
            The scope of this share. One of the following values:
              * **ITEM**: an item-level share (that is, the specific object to which
            the share applies is shared with
                the user or group).
              * **WORKSPACE**: a workspace-level share (that is, the workspace that
            contains the object to which the
                share applies is shared with the user or group).
          type: string
        subject:
          description: >
            The subject of the email that is optionally sent to notify the
            recipient. You can specify this attribute

            in a request, but it is never present in a response.
          type: string
    SharedSecret:
      type: object
      properties:
        sharedSecret:
          description: Value for the shared secret.
          type: string
    Sheet:
      type: object
      properties:
        id:
          description: Sheet Id.
          type: number
        fromId:
          description: >-
            The Id of the template from which to create the sheet. This
            attribute can be specified in a request, but is never present in a
            response.
          type: number
        ownerId:
          description: User Id of the sheet owner.
          type: number
        accessLevel:
          $ref: '#/components/schemas/Discussion/properties/accessLevel'
        attachments:
          description: >
            Array of Attachment objects.

            Only returned if the [include](../../tag/sheets#operation/getSheet)
            query string parameter contains **attachments**.
          type: array
          items:
            $ref: '#/components/schemas/Comment/properties/attachments/items'
        cellImageUploadEnabled:
          description: |
            The sheet is enabled for cell images to be uploaded.
          type: boolean
        columns:
          type: array
          items:
            $ref: >-
              #/components/schemas/CellLinkWidgetContent/properties/columns/items
        createdAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        crossSheetReferences:
          description: >
            Array of CrossSheetReference objects.

            Only returned if the [include](../../tag/sheets#operation/getSheet)
            query string parameter contains **crossSheetReferences**.
          type: array
          items:
            type: object
            properties:
              endColumnId:
                description: >-
                  Defines ending edge of range when specifying one or more
                  columns. To specify an entire column, omit the startRowId and
                  endRowId parameters.
                type: number
              endRowId:
                description: >-
                  Defines ending edge of range when specifying one or more rows.
                  To specify an entire row, omit the startColumnId and
                  endColumnId parameters.
                type: number
              id:
                description: >-
                  Cross-sheet reference Id, guaranteed unique within referencing
                  sheet.
                type: number
              name:
                description: >-
                  Friendly name of reference. Auto-generated unless specified in
                  Create Cross-sheet References.
                type: string
              startColumnId:
                description: >-
                  Defines beginning edge of range when specifying one or more
                  columns. To specify an entire column, omit the startRowId and
                  endRowId parameters.
                type: number
              startRowId:
                description: >-
                  Defines beginning edge of range when specifying one or more
                  rows. To specify an entire row, omit the startColumnId and
                  endColumnId parameters.
                type: number
              status:
                description: |
                  Status of request:
                   * 'BLOCKED' - A reference is downstream of a circular issue.
                   * 'BROKEN' - The data source location (column, row or sheet) was
                  deleted.
                   * 'CIRCULAR' - The formula reference is self referencing and cannot
                  be resolved.
                   * 'DISABLED' - Updating the reference is temporarily disabled due
                  to maintenance.
                   * 'INVALID/UNKNOWN' - The reference is new and had not been validated.
                   * 'NOT_SHARED' - No common shared users.
                   * 'OK' - The reference is in a good state.
                type: string
                enum:
                  - BLOCKED
                  - BROKEN
                  - CIRCULAR
                  - DISABLED
                  - INVALID/UNKNOWN
                  - NOT-SHARED
                  - OK
              sourceSheetId:
                description: Sheet Id of source sheet.
                type: number
        dependenciesEnabled:
          description: Indicates whether dependencies are enabled.
          type: boolean
        discussions:
          description: >
            Array of Discussion objects

            Only returned if the [include](../../tag/sheets#operation/getSheet)
            query string parameter contains **discussions**.
          type: array
          items:
            $ref: '#/components/schemas/Proof/properties/discussions/items'
        effectiveAttachmentOptions:
          description: >
            Array of enum strings (see
            [Attachment.attachmentType](../../tag/attachmentsDescription)
            indicating the allowable attachment options for the current user and
            sheet.
          type: array
          items:
            type: string
        favorite:
          description: >-
            (Deprecated) Returned only if the user has marked this sheet as a
            favorite in their Home tab (value = **true**).
          type: boolean
        ganttEnabled:
          description: Indicates whether "Gantt View" is enabled.
          type: boolean
        hasSummaryFields:
          description: Indicates whether a sheet summary is present.
          type: boolean
        isMultiPicklistEnabled:
          description: Indicates whether multi-select is enabled.
          type: boolean
        modifiedAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        name:
          description: Sheet name.
          type: string
        owner:
          description: Email address of the sheet owner.
          type: string
        permalink:
          description: URL that represents a direct link to the sheet in Smartsheet.
          type: string
        projectSettings:
          description: >-
            Represents the project settings dependencies for a specific sheet.
            Project settings may be updated on sheets that the user has editor
            access.
          type: object
          properties:
            lengthOfDay:
              description: Length of a workday for a project sheet.
              type: number
              minimum: 1
              maximum: 24
            nonWorkingDays:
              description: Non-working days for a project sheet.
              type: array
              items:
                type: string
                format: date
            workingDays:
              type: array
              items:
                type: string
                enum:
                  - MONDAY
                  - TUESDAY
                  - WEDNESDAY
                  - THURSDAY
                  - FRIDAY
                  - SATURDAY
                  - SUNDAY
        readOnly:
          description: >-
            Returned only if the sheet belongs to an expired trial (value =
            **true**).
          type: boolean
        resourceManagementEnabled:
          description: Indicates that resource management is enabled.
          type: boolean
        resourceManagementType:
          description: Resource Management type. Indicates the type of RM that is enabled.
          type: string
          enum:
            - NONE
            - LEGACY_RESOURCE_MANAGEMENT
            - RESOURCE_MANAGEMENT_BY_SMARTSHEET
        rows:
          type: array
          items:
            $ref: '#/components/schemas/ReportRow/allOf/0'
        showParentRowsForFilters:
          description: >-
            Returned only if there are column filters on the sheet. Value =
            **true** if "show parent rows" is enabled for the filters.
          type: boolean
        source:
          type: object
          properties:
            id:
              description: >
                The Id of the dashboard, report, sheet, or template from which
                the enclosing dashboard, report, sheet, or template was created.
              type: number
            type:
              description: >
                **report**, **sheet**, **sight** (aka dashboard), or
                **template**.
              type: string
        summary:
          type: object
          description: >-
            Represents the entire summary, or a list of defined fields and
            values, for a specific sheet.
          properties:
            fields:
              description: Array of summary (or metadata) fields defined on the sheet.
              type: array
              items:
                $ref: '#/components/schemas/CellDataItem/properties/profileField'
        totalRowCount:
          description: The total number of rows in the sheet.
          type: number
        userPermissions:
          type: object
          description: >-
            Describes the current user's editing permissions for a specific
            sheet.
          properties:
            summaryPermissions:
              description: >
                One of:
                  * ADMIN: full control over fields.
                  * READ_DELETE: sheet is owned by an individual account that doesn't
                have summary capabilities. If a summary exists, the only
                possible operations are GET and DELETE fields.
                  * READ_ONLY.
                  * READ_WRITE: can edit values of existing fields, but not create
                or delete fields, nor modify field type.
              type: string
              enum:
                - ADMIN
                - READ_DELETE
                - READ_ONLY
                - READ_WRITE
        userSettings:
          type: object
          description: >-
            Represents individual user settings for a specific sheet. User
            settings may be updated even on sheets where the current user only
            has read access (for example, viewer permissions or a read-only
            sheet).
          properties:
            criticalPathEnabled:
              description: >
                Does this user have "Show Critical Path" turned on for this
                sheet? **NOTE**: This setting only has an effect on project
                sheets with dependencies enabled.
              type: boolean
            displaySummaryTasks:
              description: >-
                Does this user have "Display Summary Tasks" turned on for this
                sheet? Applies only to sheets where "Calendar View" has been
                configured.
              type: boolean
        version:
          description: A number that is incremented every time a sheet is modified.
          type: number
        workspace:
          $ref: '#/components/schemas/Scope/properties/workspaces/items'
    SheetEmail:
      allOf:
        - $ref: '#/components/schemas/ProofRequestBody/allOf/0'
      type: object
      properties:
        format:
          description: |
            One of the following values: **EXCEL**, **PDF**, or **PDF_GANTT**.
          type: string
        formatDetails:
          type: object
          properties:
            paperSize:
              description: Specifies paper size.
              type: string
              example: LETTER
              enum:
                - A0
                - A1
                - A2
                - A3
                - A4
                - ARCHID
                - LEGAL
                - LETTER
                - WIDE
    SheetPublish:
      description: Describes the sheet's publish settings.
      type: object
      properties:
        icalEnabled:
          description: If **true**, a webcal is available for the calendar in the sheet.
          type: boolean
        icalUrl:
          description: >
            URL for **iCal** view of the published sheet. Only returned in a
            response if **icalEnabled = true**.
        readOnlyFullAccessibleBy:
          description: >
            Indicates who can access the 'Read-Only Full' view of the published
            sheet:
              * ALL - available to anyone who has the link.
              * ORG - available only to members of the sheet owner's Smartsheet organization
            account.
              * SHARED - available only to users shared to the item.

            Only returned in the response if **readOnlyFullEnabled = true**.
          type: string
          enum:
            - ALL
            - ORG
            - SHARED
        readOnlyFullDefaultView:
          description: >
            Indicates which view the user has set for a read-only, default view
            of the published sheet. Must be one of the listed enum values.
          type: string
          enum:
            - CALENDAR
            - CARD
            - GRID
        readOnlyFullEnabled:
          description: >-
            If **true**, a rich version of the sheet is published with the
            ability to download row attachments and discussions.
          type: boolean
        readOnlyFullShowToolbar:
          description: >-
            Indicates whether the left nav toolbar is displayed. The default, or
            **true**, is to display the toolbar. If **false**, hides the
            toolbar.
          type: boolean
          deprecated: true
        readOnlyFullUrl:
          description: >-
            URL for 'Read-Only Full' view of the published sheet. Only returned
            in a response if **readOnlyFullEnabled = true.
          type: string
        readOnlyLiteEnabled:
          description: >-
            If **true**, a lightweight version of the sheet is published without
            row attachments and discussions.
          type: boolean
        readOnlyLiteSslUrl:
          description: URL for 'Read-Only' view of the published sheet when SSL is enabled.
          type: string
        readOnlyLiteUrl:
          description: >-
            URL for 'Read-Only HTML' view of the published sheet. Only returned
            in a response if **readOnlyLiteEnabled = true**.
          type: string
        readWriteAccessibleBy:
          description: >
            Indicates who can access the 'Edit by Anyone' view of the published
            sheet:
              * ALL - available to anyone who has the link.
              * ORG - available only to members of the sheet owner's Smartsheet organization
            account.
              * SHARED - available only to users shared to the item.

            Only returned in the response if **readWriteEnabled = true**.
          type: string
          enum:
            - ALL
            - ORG
            - SHARED
        readWriteDefaultView:
          description: >
            Indicates which view the user has set for a read-write, default view
            of the published sheet. Must be one of the listed enum values.
          type: string
          enum:
            - CALENDAR
            - CARD
            - GRID
        readWriteEnabled:
          description: >-
            If **true**,a rich version of the sheet is published with the
            ability to edit cells and manage attachments and discussions.
          type: boolean
        readWriteShowToolbar:
          description: >-
            Indicates whether the left nav toolbar is displayed. The default, or
            **true**, is to display the toolbar. If **false**, hides the
            toolbar.
          type: boolean
          deprecated: true
        readWriteUrl:
          description: >-
            URL for 'Edit by Anyone' view of the published sheet. Only returned
            in a response if **readWriteEnabled = true**.
          type: string
    SheetSummary:
      type: object
      description: >-
        Represents the entire summary, or a list of defined fields and values,
        for a specific sheet.
      properties:
        fields:
          description: Array of summary (or metadata) fields defined on the sheet.
          type: array
          items:
            $ref: '#/components/schemas/CellDataItem/properties/profileField'
    SheetUserPermissions:
      type: object
      description: Describes the current user's editing permissions for a specific sheet.
      properties:
        summaryPermissions:
          description: >
            One of:
              * ADMIN: full control over fields.
              * READ_DELETE: sheet is owned by an individual account that doesn't
            have summary capabilities. If a summary exists, the only possible
            operations are GET and DELETE fields.
              * READ_ONLY.
              * READ_WRITE: can edit values of existing fields, but not create or
            delete fields, nor modify field type.
          type: string
          enum:
            - ADMIN
            - READ_DELETE
            - READ_ONLY
            - READ_WRITE
    SheetUserSettings:
      type: object
      description: >-
        Represents individual user settings for a specific sheet. User settings
        may be updated even on sheets where the current user only has read
        access (for example, viewer permissions or a read-only sheet).
      properties:
        criticalPathEnabled:
          description: >
            Does this user have "Show Critical Path" turned on for this sheet?
            **NOTE**: This setting only has an effect on project sheets with
            dependencies enabled.
          type: boolean
        displaySummaryTasks:
          description: >-
            Does this user have "Display Summary Tasks" turned on for this
            sheet? Applies only to sheets where "Calendar View" has been
            configured.
          type: boolean
    ShortcutDataItem:
      type: object
      properties:
        attachmentType:
          type: string
          enum:
            - BOX_COM
            - DROPBOX
            - EGNYTE
            - EVERNOTE
            - FILE
            - GOOGLE_DRIVE
            - LINK
            - ONEDRIVE
            - SMARTSHEET
        hyperlink:
          $ref: '#/components/schemas/Cell/properties/hyperlink'
        label:
          description: Label for the data point.
          type: string
        labelFormat:
          description: Format description of label.
          type: string
          example: ',,1,1,,,,,,,,,,,,,'
        labelFont:
          $ref: '#/components/schemas/CellDataItem/properties/labelFont'
        mimeType:
          type: string
        order:
          description: The display order for the ShortcutWidgetItem object.
          type: number
    ShortcutWidgetContent:
      type: object
      title: Shortcut
      properties:
        type:
          type: string
          enum:
            - SHORTCUT
            - SHORTCUTICON
            - SHORTCUTLIST
        shortcutData:
          type: array
          items:
            type: object
            properties:
              attachmentType:
                type: string
                enum:
                  - BOX_COM
                  - DROPBOX
                  - EGNYTE
                  - EVERNOTE
                  - FILE
                  - GOOGLE_DRIVE
                  - LINK
                  - ONEDRIVE
                  - SMARTSHEET
              hyperlink:
                $ref: '#/components/schemas/Cell/properties/hyperlink'
              label:
                description: Label for the data point.
                type: string
              labelFormat:
                description: Format description of label.
                type: string
                example: ',,1,1,,,,,,,,,,,,,'
              labelFont:
                $ref: '#/components/schemas/CellDataItem/properties/labelFont'
              mimeType:
                type: string
              order:
                description: The display order for the ShortcutWidgetItem object.
                type: number
    Sight:
      type: object
      allOf:
        - type: object
          allOf:
            - type: object
              allOf:
                - type: object
                  properties:
                    name:
                      description: Dashboard name.
                      type: string
              properties:
                id:
                  description: Dashboard Id.
                  type: number
                  readOnly: true
                accessLevel:
                  $ref: '#/components/schemas/Discussion/properties/accessLevel'
                permalink:
                  description: >-
                    URL that represents a direct link to the dashboard in
                    Smartsheet.
                  type: string
                  readOnly: true
          properties:
            createdAt:
              $ref: '#/components/schemas/Attachment/properties/createdAt'
            modifiedAt:
              $ref: '#/components/schemas/Attachment/properties/createdAt'
      properties:
        backgroundColor:
          description: The hex color, for instance `#E6F5FE`.
          type: string
          readOnly: true
        defaultWidgetBackgroundColor:
          description: >-
            The hex color of the background color for all widgets except for
            title widgets on the dashboard, for instance `#E6F5FEF4` or
            `#E6F5FE`.
          type: string
          readOnly: true
        columnCount:
          description: Number of columns that the dashboard contains.
          type: number
          readOnly: true
        favorite:
          description: >-
            (Deprecated) Indicates whether the user has marked the dashboard as
            a favorite.
          type: boolean
          readOnly: true
        source:
          $ref: '#/components/schemas/Sheet/properties/source'
        widgets:
          readOnly: true
          type: array
          items:
            type: object
            readOnly: true
            properties:
              id:
                description: Widget Id.
                type: number
              type:
                description: Type of widget.
                type: string
                enum:
                  - CHART
                  - GRIDGANTT
                  - IMAGE
                  - METRIC
                  - RICHTEXT
                  - SHEETSUMMARY
                  - SHORTCUT
                  - SHORTCUTICON
                  - SHORTCUTLIST
                  - TITLE
                  - WEBCONTENT
              contents:
                description: >-
                  The type of widget content depends on the value of
                  widget.type.
                oneOf:
                  - $ref: '#/components/schemas/Widget/properties/contents/oneOf/0'
                  - $ref: '#/components/schemas/Widget/properties/contents/oneOf/1'
                  - $ref: '#/components/schemas/Widget/properties/contents/oneOf/2'
                  - $ref: '#/components/schemas/Widget/properties/contents/oneOf/3'
                  - $ref: '#/components/schemas/Widget/properties/contents/oneOf/4'
                  - $ref: '#/components/schemas/Widget/properties/contents/oneOf/5'
                  - $ref: '#/components/schemas/Widget/properties/contents/oneOf/6'
                  - $ref: '#/components/schemas/Widget/properties/contents/oneOf/7'
              height:
                description: Number of rows that the widget occupies on the dashboard.
                type: number
              showTitle:
                description: >-
                  True indicates that the client should display the widget
                  title. This is independent of the title string which may be
                  null or empty.
                type: boolean
              showTitleIcon:
                description: >-
                  True indicates that the client should display the sheet icon
                  in the widget title.
                type: boolean
              title:
                description: Title of the widget.
                type: string
              titleFormat:
                description: >-
                  Title format descriptor (see
                  [Formatting](../#section/API-Basics/Formatting)).
                type: string
                example: ',,1,,,,,,,3,,,,,,1,'
              titleFont:
                $ref: '#/components/schemas/CellDataItem/properties/labelFont'
              version:
                description: Widget version number.
                type: number
              viewMode:
                description: >
                  Indicates the content layout. Must use a query parameter of
                  level=2 to see this information.
                   * 1 - centered
                   * 2 - left aligned
                type: number
                enum:
                  - 1
                  - 2
              width:
                description: Number of columns that the widget occupies on the dashboard.
                type: number
              xPosition:
                description: X-coordinate of widget's position on the dashboard.
                type: number
              yPosition:
                description: Y-coordinate of widget's position on the dashboard.
                type: number
        workspace:
          $ref: '#/components/schemas/Scope/properties/workspaces/items'
    SightPublish:
      description: Describes the dashboard's publish settings.
      type: object
      properties:
        readOnlyFullAccessibleBy:
          description: >
            Indicates who can access the 'Read-Only Full' view of the published
            dashboard. Only returned in the response if **readOnlyFullEnabled =
            true**.
              * **ALL** - available to anyone who has the link.
              * **ORG** - available only to members of the dashboard owner's Smartsheet
            organization account.
              * **SHARED** - available only to users shared to the item.

            ---

            If **readOnlyFullEnabled** is set to true in the request, but
            **readOnlyFullAccessibleBy** is not specified, the value of
            **readOnlyFullAccessibleBy** defaults to the organization-level
            'Dashboard Publishing' setting (if the dashboard owner belongs to an
            organization account) or to **ALL** (if the dashboard owner does not
            belong to an organization account).
          type: string
          enum:
            - ALL
            - ORG
        readOnlyFullEnabled:
          description: >-
            If true, a rich version of the dashboard is published with the
            ability to use shortcuts and widget interactions.
          type: boolean
        readOnlyFullUrl:
          description: >-
            URL for 'Read-Only Full' view of the published dashboard. Only
            returned in a response if readOnlyFullEnabled = true.
          type: string
          readOnly: true
      required:
        - readOnlyFullEnabled
    SortCriterion:
      type: object
      properties:
        columnId:
          type: number
        direction:
          description: Direction of the sort.
          type: string
          enum:
            - ASCENDING
            - DESCENDING
          default: ASCENDING
    SortSpecifier:
      type: object
      properties:
        sortCriteria:
          description: Specifies sort order. Array is in priority order.
          type: array
          items:
            type: object
            properties:
              columnId:
                type: number
              direction:
                description: Direction of the sort.
                type: string
                enum:
                  - ASCENDING
                  - DESCENDING
                default: ASCENDING
    Source:
      type: object
      properties:
        id:
          description: >
            The Id of the dashboard, report, sheet, or template from which the
            enclosing dashboard, report, sheet, or template was created.
          type: number
        type:
          description: |
            **report**, **sheet**, **sight** (aka dashboard), or **template**.
          type: string
    StreamResult:
      description: StreamResult Object
      type: object
      properties:
        nextStreamPosition:
          description: >-
            This string should be passed back to the next GET events call to
            obtain subsequent events.
          type: string
          example: XyzAb1234cdefghijklmnofpq
        moreAvailable:
          description: >-
            True if more results are available. This is typically due to event
            counts exceeding the maxCount parameter passed in.
          type: boolean
          example: true
    Subscope:
      description: >-
        An object that contains an array of column Ids if you want to limit the
        subscription to a subscope. Specified when a webhook is created and
        cannot be changed.
      type: object
      properties:
        columnIds:
          description: A column Id or Ids
          type: array
          items:
            type: string
            example: 7318427511613316, 7318427511613123
    SummaryField:
      type: object
      properties:
        id:
          description: SummaryField Id.
          type: number
        contactOptions:
          description: >-
            Array of ContactOption objects to specify a pre-defined list of
            values for the column. Column type must be CONTACT_LIST.
          type: array
          items:
            $ref: '#/components/schemas/Column/properties/contactOptions/items'
        createdAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        createdBy:
          description: >-
            User object containing name and email of the creator of this summary
            field.
          type: object
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        displayValue:
          description: >-
            Visual representation of cell contents, as presented to the user in
            the UI.
          type: string
        format:
          description: >-
            The format descriptor. Only returned if the include query string
            parameter contains format and this column has a non-default format
            applied to it.
          type: string
        formula:
          description: The formula for a cell, if set.
          type: string
        hyperlink:
          $ref: '#/components/schemas/Cell/properties/hyperlink'
        image:
          $ref: '#/components/schemas/Cell/properties/image'
        index:
          description: Field index or position. This number is zero-based.
          type: number
        locked:
          description: Indicates whether the field is locked.
          type: boolean
        lockedForUser:
          description: Indicates whether the field is locked for the requesting user.
          type: boolean
        modifiedAt:
          $ref: '#/components/schemas/Attachment/properties/createdAt'
        modifiedBy:
          description: >-
            User object containing name and email of the user who most recently
            modified this summary field.
          type: object
          allOf:
            - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
        objectValue:
          $ref: '#/components/schemas/Cell/properties/objectValue'
        options:
          description: >-
            When applicable for PICKLIST column type. Array of the options
            available for the field.
          type: array
          items:
            type: string
        symbol:
          description: When applicable for PICKLIST column type.
          type: string
        title:
          description: Arbitrary name, must be unique within summary.
          type: string
        type:
          type: string
          enum:
            - ABSTRACT_DATETIME
            - CHECKBOX
            - CONTACT_LIST
            - DATE
            - DATETIME
            - DURATION
            - MULTI_CONTACT_LIST
            - MULTI_PICKLIST
            - PICKLIST
            - PREDECESSOR
            - TEXT_NUMBER
        validation:
          description: Indicates whether summary field values are restricted to the type.
          type: boolean
    Template:
      description: A template can be used to create a sheet.
      type: object
      properties:
        id:
          description: Template Id.
          type: number
        type:
          description: Type of template. Only applicable to public templates.
          type: string
          enum:
            - report
            - sheet
        accessLevel:
          $ref: '#/components/schemas/Discussion/properties/accessLevel'
        blank:
          description: >-
            Indicates whether the template is blank. Only applicable to public
            templates.
          type: boolean
        categories:
          description: >-
            Indicates whether the template is blank. Only applicable to public
            templates.
          type: array
          items:
            type: string
        description:
          description: Template description.
          type: string
        globalTemplate:
          description: Type of global template. Only applicable to blank public templates.
          type: string
          enum:
            - BLANK_SHEET
            - PROJECT_SHEET
            - TASK_LIST
        image:
          description: >-
            URL to the small preview image for this template. Only applicable to
            non-blank public templates.
          type: string
        largeImage:
          description: >-
            URL to the large preview image for this template. Only applicable to
            non-blank public templates.
          type: string
        locale:
          description: Locale of the template. Only applicable to public templates.
          type: string
          enum:
            - ar_AE
            - ar_BH
            - ar_DZ
            - ar_EG
            - ar_IQ
            - ar_JO
            - ar_KW
            - ar_LB
            - ar_LY
            - ar_MA
            - ar_OM
            - ar_QA
            - ar_SA
            - ar_SD
            - ar_SY
            - ar_TN
            - ar_YE
            - be_BY
            - bg_BG
            - ca_ES
            - cs_CZ
            - da_DK
            - de_AT
            - de_CH
            - de_DE
            - de_LU
            - el_CY
            - el_GR
            - en_AU
            - en_CA
            - en_GB
            - en_IE
            - en_IN
            - en_MT
            - en_NZ
            - en_PH
            - en_SG
            - en_US
            - en_ZA
            - es_AR
            - es_BO
            - es_CL
            - es_CO
            - es_CR
            - es_DO
            - es_EC
            - es_ES
            - es_GT
            - es_HN
            - es_MX
            - es_NI
            - es_PA
            - es_PE
            - es_PR
            - es_PY
            - es_SV
            - es_US
            - es_UY
            - es_VE
            - et_EE
            - fi_FI
            - fr_BE
            - fr_CA
            - fr_CH
            - fr_FR
            - fr_LU
            - ga_IE
            - hi_US
            - hr_HR
            - hu_HU
            - in_ID
            - is_IS
            - it_CH
            - it_IT
            - iw_IL
            - ja_JP
            - ko_KR
            - lt_LT
            - lv_LV
            - mk_MK
            - ms_MY
            - mt_MT
            - nl_BE
            - nl_NL
            - no_NO
            - pl_PL
            - pt_BR
            - pt_PT
            - ro_RO
            - ru_RU
            - sk_SK
            - sl_SI
            - sq_AL
            - sr_BA
            - sr_CS
            - sv_SE
            - th_US
            - tr_TR
            - uk_UA
            - vi_VN
            - zh_CN
            - zh_HK
            - zh_SG
            - zh_TW
        name:
          type: string
          description: Type of global template.
          example: Awesome Project Template
        tags:
          description: >-
            List of search tags for this template. Only applicable to non-blank
            public templates.
          type: array
          items:
            type: string
    Timestamp:
      oneOf:
        - type: string
          format: date-time
        - type: number
      readOnly: true
    TitleWidgetContent:
      type: object
      title: Title
      properties:
        type:
          type: string
          enum:
            - TITLE
        backgroundColor:
          type: string
        htmlContent:
          type: string
          description: >
            The widget contents as HTML. The Title widget supports the following
            subset of HTML tags and CSS Styles:


            HTML
              * br - line break
              * p - paragraph
              * span - section of the document

            CSS
              * color
              * font-family
              * font-size
              * font-style
              * font-weight
              * text-align
              * text-decoration
          example: <p style="text-align:center"><span class="clsDbFt">HI!</span></p>
    Token:
      type: object
      properties:
        access_token:
          description: >-
            A credential that can be used by a client to access the Smartsheet
            API.
          type: string
          readOnly: true
        token_type:
          description: >-
            How an access token will be generated and presented. Smartsheet uses
            the bearer parameter, which means essentially give access to the
            bearer of this token.
          type: string
          readOnly: true
        expires_in:
          description: Number of seconds token is valid once issued.
          type: number
          default: 604799
          readOnly: true
        refresh_token:
          description: >-
            A credential tied to the access token that can be used to obtain a
            fresh access token with the same permissions, without further
            involvement from a user.
          type: string
          readOnly: true
    UpdateProofStatusRequest:
      type: object
      properties:
        isCompleted:
          type: boolean
    UpdateRequest:
      type: object
      allOf:
        - allOf:
            - $ref: '#/components/schemas/MultiRowEmail/allOf/0'
          type: object
          properties:
            rowIds:
              description: The Ids of rows to be included.
              type: array
              items:
                type: number
        - type: object
          properties:
            id:
              description: Id of the update request.
              type: number
            createdAt:
              description: >-
                The date and time for when this request was originally created.
                Read-only.
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdAt'
            modifiedAt:
              description: >-
                The date and time for when the last change was made to this
                request. Read-only.
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdAt'
            schedule:
              description: The schedule for which update requests are sent out.
              allOf:
                - type: object
                  properties:
                    type:
                      description: Type of schedule.
                      type: string
                      enum:
                        - ONCE
                        - DAILY
                        - WEEKLY
                        - MONTHLY
                        - YEARLY
                    dayDescriptors:
                      description: >
                        A string array consists of one or more of the following
                        values:

                        * **DAY**, **WEEKDAY**, **WEEKEND**

                        * **SUNDAY**, **MONDAY**, **TUESDAY**, **WEDNESDAY**,
                        **THURSDAY**, **FRIDAY**, **SATURDAY**


                        The subset of values applicable to the schedule type are
                        as followed:


                        | Value         | Daily schedule | Weekly schedule |
                        Monthly schedule |

                        |---------------|----------------|-----------------|------------------|

                        | **DAY**       |                |                
                        |       **✓**      |

                        | **WEEKDAY**   |      **✓**     |                
                        |       **✓**      |

                        | **WEEKEND**   |                |                
                        |       **✓**      |

                        | **SUNDAY**    |                |      **✓**     
                        |       **✓**      |

                        | **MONDAY**    |                |      **✓**     
                        |       **✓**      |

                        | **TUESDAY**   |                |      **✓**     
                        |       **✓**      |

                        | **WEDNESDAY** |                |      **✓**     
                        |       **✓**      |

                        | **THURSDAY**  |                |      **✓**     
                        |       **✓**      |

                        | **FRIDAY**    |                |      **✓**     
                        |       **✓**      |

                        | **SATURDAY**  |                |      **✓**     
                        |       **✓**      |


                        For more details, refer to the Table of Schedule
                        Object’s Attributes below.
                      type: array
                      items:
                        type: string
                        enum:
                          - DAY
                          - WEEKDAY
                          - WEEKEND
                          - SUNDAY
                          - MONDAY
                          - TUESDAY
                          - WEDNESDAY
                          - THURSDAY
                          - FRIDAY
                          - SATURDAY
                    dayOfMonth:
                      description: >
                        The day within the month.


                        Valid range is 1 to 28.


                        This attribute is applicable to the following schedule
                        type:
                         * **MONTHLY**

                        For more details, refer to the Table of Schedule
                        Object’s Attributes below.
                      type: number
                      minimum: 1
                      maximum: 31
                    dayOrdinal:
                      description: >
                        Must be one of the following values:
                          * **FIRST** or **LAST**
                          * **SECOND**, **THIRD**, or **FOURTH**

                        This attribute is applicable to the following schedule
                        type:
                          * **MONTHLY**

                          For more details, refer to the Table of Schedule Object’s Attributes
                        below.
                      type: string
                      enum:
                        - FIRST
                        - LAST
                        - SECOND
                        - THIRD
                        - FOURTH
                    repeatEvery:
                      description: >
                        Frequency on which the request is delivered. The unit is
                        a function of the **type** attribute. For example,

                        for **MONTHLY** schedule, **repeatEvery=1** means every
                        month.


                        Valid range is 1 to 99.


                        This attribute is applicable to the following schedule
                        types: **DAILY**, **WEEKLY**, **MONTHLY**, or
                        **YEARLY**.

                        For more details, refer to the Table of Schedule
                        Object’s Attributes below.
                      type: number
                      minimum: 1
                      maximum: 99
                    endAt:
                      allOf:
                        - description: >
                            The date, time, and time zone at which the delivery
                            schedule ends.


                            The value is either in a string format or a numeric
                            format:


                            * When the value is a string, it must be a valid
                            ISO-8601 date and time with an offset
                            (YYYY-MM-DDThh:mm:ssTZD).

                            * When the value is a number, it represents a date
                            and time with no offset (UTC time zone). See Dates
                            and Times for more information.


                            The value must be later than startAt and the current
                            date and time.


                            The value must contain zero hours, zero minutes, and
                            zero seconds.


                            The offset (time zone) value must be the same as the
                            offset (time zone) value in startAt.


                            This attribute is applicable to the following
                            schedule types: DAILY, WEEKLY, MONTHLY, YEARLY. For
                            more details, refer to the Table of Schedule
                            Object’s Attributes below.
                        - $ref: >-
                            #/components/schemas/Schedule/properties/endAt/allOf/1
                    lastSentAt:
                      allOf:
                        - description: >-
                            The date and time for when the last request was
                            sent.
                        - $ref: '#/components/schemas/Attachment/properties/createdAt'
                    nextSendAt:
                      allOf:
                        - description: >-
                            The date and time for when the next request is
                            scheduled to send.
                        - $ref: '#/components/schemas/Attachment/properties/createdAt'
                    startAt:
                      allOf:
                        - description: >
                            The date, time, and time zone at which the first
                            delivery starts.


                            The value is either in a string format or a numeric
                            format:

                             *   When the value is a string, it must be a valid ISO-8601
                            date and time with an offset
                            (YYYY-MM-DDThh:mm:ssTZD).
                             *   When the value is a number, it represents a date and time
                            with no offset (UTC time zone). See [Dates and
                            Times](../../#section/API-Basics/Dates-and-Times)
                            for more information.

                            For ONCE schedule type, it must be later than the
                            current date time.


                            For all other schedule types, it must be later than
                            “2000-01-01T00:00:00Z” in string format or
                            946684800000 in numeric format.


                            The value must contain zero minutes and zero
                            seconds.


                            This attribute is applicable to all schedule types.


                            For more details, refer to the Table of Schedule
                            Object’s Attributes below.
                        - $ref: >-
                            #/components/schemas/Schedule/properties/endAt/allOf/1
            sentBy:
              description: |
                `User` object containing `name` and `email` of the sender.
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdBy/allOf/0'
    URLAttachmentRequest:
      type: object
      properties:
        attachmentSubType:
          description: >-
            Attachment sub type. Note--Folder type is for EGNYTE values and the
            rest are GOOGLE_DRIVE values.
          type: string
          enum:
            - DOCUMENT
            - DRAWING
            - FOLDER
            - PDF
            - PRESENTATION
            - SPREADSHEET
        attachmentType:
          description: >-
            Attachment type. Note--Dropbox, Egnyte, and Evernote are not
            supported for Smartsheet.gov accounts.
          type: string
          enum:
            - BOX_COM
            - DROPBOX
            - EGNYTE
            - EVERNOTE
            - FILE
            - GOOGLE_DRIVE
            - LINK
            - ONEDRIVE
            - TRELLO
        description:
          type: string
        name:
          type: string
        url:
          type: string
    User:
      description: User Object
      type: object
      properties:
        id:
          description: User Id.
          type: number
          readOnly: true
          example: 48569348493401200
        admin:
          description: >-
            Indicates whether the user is a system admin (can manage user
            accounts and organization account).
          type: boolean
          default: false
          example: true
        customWelcomeScreenViewed:
          description: >-
            Timestamp of viewing an [Enterprise Custom Welcome
            Screen](https://help.smartsheet.com/articles/1392225-customizing-a-welcome-message-upgrade-screen-enterprise-only)
            by the current user.
          type: string
          format: date-time
          readOnly: true
          example: '2020-08-25T12:15:47Z'
        email:
          description: User's primary email address.
          type: string
          format: email
          example: jane.doe@smartsheet.com
        firstName:
          description: User's first name.
          type: string
          example: Jane
        groupAdmin:
          description: >-
            Indicates whether the user is a group admin (can create and edit
            groups).
          type: boolean
          default: false
          example: true
        lastLogin:
          description: Last login time of the current user.
          type: string
          format: date-time
          readOnly: true
          example: '2020-10-04T18:32:47Z'
        lastName:
          description: User's last name.
          type: string
          example: Doe
        licensedSheetCreator:
          description: >-
            Indicates whether the user is a licensed user (can create and own
            sheets).
          type: boolean
          default: false
          example: true
        name:
          description: User's full name (read-only).
          type: string
          readOnly: true
          example: Jane Doe
        profileImage:
          type: object
          properties:
            imageId:
              description: Unique image Id.
              type: string
              example: u!1!nAtdn5RJB_o!k6_e_3h2R3w!wmYXPek-yVD
            height:
              description: Image height.
              type: string
              example: 1050
            width:
              description: Image width.
              type: string
              example: 1050
        resourceViewer:
          description: >-
            Indicates whether the user is a resource viewer (can access resource
            views).
          type: boolean
          default: false
          example: true
        sheetCount:
          description: >-
            The number of sheets owned by the current user within the
            organization account.
          type: number
          readOnly: true
          example: 42
        status:
          description: User status, set to one of the listed enum values.
          type: string
          enum:
            - ACTIVE
            - DECLINED
            - PENDING
            - DEACTIVATED
          example: ACTIVE
    UserProfile:
      type: object
      properties:
        id:
          description: Current user's Id.
          type: number
          example: 48569348493401200
        account:
          type: object
          properties:
            id:
              description: Account Id.
              type: number
              example: 122454719915908
            name:
              description: Account name.
              type: string
              example: Smartsheet Org
        admin:
          description: >-
            Indicates whether the user is a system admin (can manage user
            accounts and organization account).
          type: boolean
          example: true
        alternateEmails:
          type: object
          properties:
            id:
              description: AlternateEmail Id.
              type: number
              example: 8150532427671428
            confirmed:
              description: >-
                Indicates whether the alternate email address has been
                confirmed.
              type: boolean
              example: true
            email:
              description: User's alternate email address.
              type: string
              example: johnathan.doe@smartsheet.com
        company:
          description: User's company.
          type: string
          example: Smartsheet
        customWelcomeScreenViewed:
          description: >-
            Timestamp of viewing an [Enterprise Custom Welcome
            Screen](https://help.smartsheet.com/articles/1392225-customizing-a-welcome-message-upgrade-screen-enterprise-only)
            by the current user.
          type: string
          format: date-time
          example: '2020-08-25T12:15:47Z'
        department:
          description: User's department.
          type: string
          example: Engineering
        email:
          description: Current user's primary email address.
          type: string
          example: john.doe@smartsheet.com
        firstName:
          description: Current user's first name.
          type: string
          example: John
        groupAdmin:
          description: >-
            Indicates whether the user is a group admin (can create and edit
            groups).
          type: boolean
          example: true
        jiraAdmin:
          description: Indicates whether the user is a JIRA admin.
          type: boolean
          example: true
        lastLogin:
          description: Last login time of the current user.
          type: string
          format: date-time
          example: '2020-10-31T12:15:47Z'
        lastName:
          description: Current user's last name.
          type: string
          example: Doe
        licensedSheetCreator:
          description: >-
            Indicates whether the user is a licensed user (can create and own
            sheets).
          type: boolean
          example: true
        locale:
          description: >-
            Current user's locale (see [Server
            Information](../../tag/serverInfoObjects#section/Server-Info-Object)).
          type: string
          example: en_US
        mobilePhone:
          description: User's mobile phone number.
          type: string
          example: 555-867-5309
        profileImage:
          $ref: '#/components/schemas/User/properties/profileImage'
        resourceViewer:
          description: >-
            Indicates whether the user is a resource viewer (can access resource
            views).
          type: boolean
          example: true
        role:
          description: User's role.
          type: string
          example: Software Developer
        salesforceAdmin:
          description: Indicates whether the user is a Salesforce admin.
          type: boolean
          example: false
        salesforceUser:
          description: Indicates whether the user is a registered Salesforce user.
          type: boolean
          example: false
        sheetCount:
          description: >-
            Typically, the number of sheets owned by the current user within the
            organization account. For GET /users/me, this returns a static '0'.
          type: number
          example: 0
        timeZone:
          description: Current user's time zone Id.
          type: string
          example: US/Pacific
        title:
          description: User's title.
          type: string
          example: Senior Software Engineer
        workPhone:
          description: User's work phone number.
          type: string
          example: 844-324-2360
    WebContentWidgetContent:
      type: object
      title: Web Content
      properties:
        type:
          type: string
          enum:
            - WEBCONTENT
        url:
          description: The URL for the web content.
          type: string
          example: https://www.youtube.com/embed/quGpnXiCUms
    Webhook:
      allOf:
        - type: object
          properties:
            callbackUrl:
              description: HTTPS URL where callbacks are sent.
              type: string
              example: https://www.myApp.com/webhooks
            enabled:
              description: >-
                Indicates whether the webhook is on (true) or off (false).
                ReadOnly for POST commands.
              type: boolean
              example: true
            events:
              description: >-
                Array of the events that are subscribed to. Currently, must be
                an array of size 1 that contains the string value '\*.\*'
                (asterisk period asterisk), which means "all objects" and "all
                events".
              type: array
              items:
                type: string
                example: '*.*'
            name:
              description: Webhook name.
              type: string
              example: Webhook for Sheet Creation
            version:
              description: >-
                Webhook version. Currently, the only supported value is 1. This
                attribute is intended to ensure backward compatibility as new
                webhook functionality is released. For example, a webhook with a
                version of 1 is guaranteed to always be sent callback objects
                that are compatible with the version 1 release of webhooks.
              type: number
              example: 1
              minimum: 1
              maximum: 1
        - type: object
          properties:
            id:
              description: Webhook Id.
              type: number
              readOnly: true
              example: 8444254503626628
            apiClientId:
              type: string
              description: >-
                API client Id corresponding to third-party app that created the
                webhook. Read-only. Only present if webhook was created by
                third-party app.
              readOnly: true
              example: 555555
            scopeObjectId:
              type: number
              description: >-
                Id of the object that is subscribed to. Specified when a webhook
                is created and cannot be changed.
              example: 3285357287499652
            apiClientName:
              type: string
              description: >-
                API client name corresponding to third-party app that created
                the webhook. Read-only. Only present if webhook was created by
                third-party app.
              readOnly: true
              example: Awesome Smartsheet Application
            createdAt:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdAt'
            disabledDetails:
              description: >-
                Details about the reason the webhook was disabled. Read-only.
                Only present when enabled=false.
              type: string
              readOnly: true
            modifiedAt:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/Attachment/properties/createdAt'
            scope:
              description: >-
                Scope of the subscription. Currently, the only supported value
                is sheet. Specified when a webhook is created and cannot be
                changed.
              type: string
              example: sheet
            sharedSecret:
              description: >-
                Shared secret for this Webhook, randomly generated by
                Smartsheet. Read-only. See [Authenticating
                Callbacks](../../tag/webhooksDescription#section/Webhook-Callbacks/Authenticating-Callbacks-(optional))
                for details about how this value can be used.
              type: string
              readOnly: true
              example: 216ejjzdnq17mq1q8xs7d4hu8b
            stats:
              type: object
              readOnly: true
              properties:
                lastCallbackAttempt:
                  type: string
                  format: date-time
                  readOnly: true
                  description: When this webhook last made a callback attempt.
                lastCallbackAttemptRetryCount:
                  type: number
                  readOnly: true
                  description: >-
                    The number of retries the webhook had performed as of the
                    last callback attempt.
                lastSuccessfulCallback:
                  type: string
                  format: date-time
                  readOnly: true
                  description: When this webhook last made a successful callback.
            status:
              description: >-
                Webhook status. Read-only. See Webhook Status for list of
                possible values.
              type: string
              readOnly: true
              enum:
                - DISABLED_ADMINISTRATIVE
                - DISABLED_APP_REVOKED
                - DISABLED_BY_OWNER
                - DISABLED_CALLBACK_FAILED
                - DISABLED_SCOPE_INACCESSIBLE
                - DISABLED_VERIFICATION_FAILED
                - ENABLED
                - NEW_NOT_VERIFIED
              example: ENABLED
            subscope:
              description: >-
                An object that contains an array of column Ids if you want to
                limit the subscription to a subscope. Specified when a webhook
                is created and cannot be changed.
              type: object
              properties:
                columnIds:
                  description: A column Id or Ids
                  type: array
                  items:
                    type: string
                    example: 7318427511613316, 7318427511613123
    Widget:
      type: object
      readOnly: true
      properties:
        id:
          description: Widget Id.
          type: number
        type:
          description: Type of widget.
          type: string
          enum:
            - CHART
            - GRIDGANTT
            - IMAGE
            - METRIC
            - RICHTEXT
            - SHEETSUMMARY
            - SHORTCUT
            - SHORTCUTICON
            - SHORTCUTLIST
            - TITLE
            - WEBCONTENT
        contents:
          description: The type of widget content depends on the value of widget.type.
          oneOf:
            - type: object
              title: Chart
              properties:
                type:
                  type: string
                  enum:
                    - CHART
                reportId:
                  description: Report Id denoting container source, if applicable.
                  type: number
                sheetId:
                  description: Sheet Id denoting container source, if applicable.
                  type: number
                axes:
                  type: array
                  items:
                    type: object
                    properties:
                      location:
                        description: Describes location of the axis.
                        type: string
                        enum:
                          - BOTTOM
                          - LEFT
                          - NONE
                          - RIGHT
                          - TOP
                      title:
                        description: Axis title.
                        type: string
                      titleInfo:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - ABSTRACT_DATE_TIME
                              - CHECKBOX
                              - CONTACT_LIST
                              - DATE
                              - DATE_TIME
                              - DURATION
                              - MULTI_CONTACT_LIST
                              - MULTI_PICKLIST
                              - PICKLIST
                              - PREDECESSOR
                              - TEXT_NUMBER
                      axisTitleFont:
                        $ref: '#/components/schemas/CellDataItem/properties/labelFont'
                      axisLabelFormat:
                        description: >-
                          Describes the axis format (see
                          [Formatting](/section/Formatting)).
                        type: string
                        example: ',,,,,,,,36,,,,,,,,'
                      axisLabelFont:
                        $ref: '#/components/schemas/CellDataItem/properties/labelFont'
                      includeZero:
                        description: Includes 0 in the axis.
                        type: boolean
                hyperlink:
                  $ref: >-
                    #/components/schemas/CellLinkWidgetContent/properties/hyperlink
                includedColumnIds:
                  description: >-
                    Array of column Ids if the range was selected through the
                    UI.
                  type: array
                  items:
                    type: number
                legend:
                  type: object
                  properties:
                    location:
                      type: string
                      enum:
                        - BOTTOM
                        - LEFT
                        - NONE
                        - RIGHT
                        - TOP
                    legendFormat:
                      type: string
                      description: >-
                        The format descriptor (see
                        [Formatting](/section/Formatting)). Only returned if the
                        legend has a non-default format applied to it.
                      example: ',,1,1,,,,,,,,,,,,,'
                    legendFont:
                      $ref: '#/components/schemas/CellDataItem/properties/labelFont'
                selectionRanges:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/ChartWidgetContent/properties/selectionRanges/items
                series:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                      titleInfo:
                        $ref: >-
                          #/components/schemas/Widget/properties/contents/oneOf/0/properties/axes/items/properties/titleInfo
                      seriesTitleFormat:
                        type: string
                        description: >-
                          Series title format (see
                          [Formatting](/section/Formatting)).
                      seriesType:
                        type: string
                        enum:
                          - AREA
                          - BAR
                          - COLUMN
                          - LINE
                          - PIE
                          - SCATTER
                      dataLabels:
                        type: object
                        properties:
                          labelType:
                            type: string
                            enum:
                              - NONE
                              - PERCENT
                              - VALUE
                      tooltips:
                        type: object
                        properties:
                          labelType:
                            type: string
                            enum:
                              - NONE
                              - PERCENT
                              - X_SERIES_Y
                              - X_Y_PERCENT
                              - 'Y'
                              - Y_PERCENT
                      lineType:
                        type: string
                        enum:
                          - CURVED
                          - STEPPED
                          - STRAIGHT
                      holeSize:
                        type: number
                      isFilled:
                        type: boolean
                      isHalf:
                        type: boolean
                      isStacked:
                        type: boolean
                      xFormat:
                        type: string
                        description: >-
                          The format descriptor (see
                          [Formatting](/section/Formatting)). Only returned if
                          the series has a non-default format applied to it.
                        example: ',,1,1,,,,,,,,,,,,,'
                      yFormat:
                        type: string
                        description: >-
                          The format descriptor (see
                          [Formatting](/section/Formatting)). Only returned if
                          the series has a non-default format applied to it.
                        example: ',,1,1,,,,,,,,,,,,,'
                      color:
                        type: string
                      axisLocationX:
                        type: string
                        enum:
                          - BOTTOM
                          - LEFT
                          - NONE
                          - RIGHT
                          - TOP
                      axisLocationY:
                        type: string
                        enum:
                          - BOTTOM
                          - LEFT
                          - NONE
                          - RIGHT
                          - TOP
                      yColumnInfo:
                        $ref: >-
                          #/components/schemas/Widget/properties/contents/oneOf/0/properties/axes/items/properties/titleInfo
                      xColumnInfo:
                        $ref: >-
                          #/components/schemas/Widget/properties/contents/oneOf/0/properties/axes/items/properties/titleInfo
                      seriesSelectionOrder:
                        type: string
                        enum:
                          - COLUMNS
                          - ROWS
                      seriesData:
                        type: array
                        items:
                          type: object
                          properties:
                            x:
                              type: number
                            'y':
                              type: number
                            xFormat:
                              type: string
                              description: >-
                                The format descriptor (see
                                [Formatting](/section/Formatting)). Only
                                returned if the series has a non-default format
                                applied to it.
                              example: ',,1,1,,,,,,,,,,,,,'
                            yFormat:
                              type: string
                              description: >-
                                The format descriptor (see
                                [Formatting](/section/Formatting)). Only
                                returned if the series has a non-default format
                                applied to it.
                              example: ',,1,1,,,,,,,,,,,,,'
                            color:
                              type: string
                      selectionRanges:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/ChartWidgetContent/properties/selectionRanges/items
                verticalGridLines:
                  type: object
                  properties:
                    lineStyle:
                      type: string
                      enum:
                        - SOLID
                horizontalGridLines:
                  $ref: >-
                    #/components/schemas/Widget/properties/contents/oneOf/0/properties/verticalGridLines
            - type: object
              title: Metric
              properties:
                type:
                  type: string
                  enum:
                    - METRIC
                    - SHEETSUMMARY
                sheetId:
                  description: Sheet Id from which the cell data originates.
                  type: number
                cellData:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/CellLinkWidgetContent/properties/cellData/items
                columns:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/CellLinkWidgetContent/properties/columns/items
                hyperlink:
                  $ref: >-
                    #/components/schemas/CellLinkWidgetContent/properties/hyperlink
            - type: object
              title: Image
              properties:
                type:
                  type: string
                  enum:
                    - IMAGE
                privateId:
                  description: The image private Id.
                  type: string
                fileName:
                  description: Name of the image file.
                  type: string
                fit:
                  description: >
                    Describes how the image occupies the available space of its
                    widget.
                     * ACTUAL_SIZE - Uses the original image width and height dimensions.
                     * FILL - Scales the image to maintain its aspect ratio while filling
                    its entire widget. If the image aspect  ratio does not match
                    the aspect ratio of its widget, then the image will be
                    clipped to fit.
                     * FIT - Scales the image to maintain its aspect ratio while fitting
                    within its widget. The image will be  "letterboxed" if its
                    aspect ratio does not match the aspect ratio of its widget.
                    Default value for new  image widgets and for existing image
                    widgets where this property has not been explicitly set.
                  enum:
                    - ACTUAL_SIZE
                    - FILL
                    - FIT
                  type: string
                format:
                  description: Format descriptor. Follows the pattern in FormatTables.
                  type: string
                  example: ',7,1,,,,2,2,1,3,,,,,,1,'
                height:
                  type: number
                hyperlink:
                  $ref: >-
                    #/components/schemas/CellLinkWidgetContent/properties/hyperlink
                margin:
                  description: >
                    Indicates whether there is margin between the image and its
                    widget borders.
                     * MARGIN - Default value for existing image widgets where this
                    property has not been explicitly set.
                     * NO_MARGIN - Default value for new image widgets.
                  enum:
                    - MARGIN
                    - NO_MARGIN
                  type: string
                width:
                  description: Original width of the image in pixels.
                  type: number
            - type: object
              title: Report
              properties:
                type:
                  type: string
                  enum:
                    - GRIDGANTT
                reportId:
                  description: Report Id denoting container source.
                  type: number
                htmlContent:
                  description: HTMl snippet to render report.
                  type: string
                backgroundColor:
                  description: The hex color.
                  example: '#E6F5FE'
                  type: string
                hyperlink:
                  $ref: >-
                    #/components/schemas/CellLinkWidgetContent/properties/hyperlink
            - type: object
              title: Rich Text
              properties:
                type:
                  type: string
                  enum:
                    - RICHTEXT
                htmlContent:
                  description: >
                    The widget contents as HTML. The Rich Text widget supports
                    the following subset of HTML tags and CSS Styles:


                    HTML
                      * a - hyperlink
                      * br - line break
                      * li - list item
                      * ol - ordered list
                      * p - paragraph
                      * span - section of the document
                      * ul - unordered list

                    CSS
                      * color
                      * font-family
                      * font-size
                      * font-style
                      * font-weight
                      * text-align
                      * text-decoration
                  type: string
            - type: object
              title: Shortcut
              properties:
                type:
                  type: string
                  enum:
                    - SHORTCUT
                    - SHORTCUTICON
                    - SHORTCUTLIST
                shortcutData:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/ShortcutWidgetContent/properties/shortcutData/items
            - type: object
              title: Title
              properties:
                type:
                  type: string
                  enum:
                    - TITLE
                backgroundColor:
                  type: string
                htmlContent:
                  type: string
                  description: >
                    The widget contents as HTML. The Title widget supports the
                    following subset of HTML tags and CSS Styles:


                    HTML
                      * br - line break
                      * p - paragraph
                      * span - section of the document

                    CSS
                      * color
                      * font-family
                      * font-size
                      * font-style
                      * font-weight
                      * text-align
                      * text-decoration
                  example: >-
                    <p style="text-align:center"><span
                    class="clsDbFt">HI!</span></p>
            - type: object
              title: Web Content
              properties:
                type:
                  type: string
                  enum:
                    - WEBCONTENT
                url:
                  description: The URL for the web content.
                  type: string
                  example: https://www.youtube.com/embed/quGpnXiCUms
        height:
          description: Number of rows that the widget occupies on the dashboard.
          type: number
        showTitle:
          description: >-
            True indicates that the client should display the widget title. This
            is independent of the title string which may be null or empty.
          type: boolean
        showTitleIcon:
          description: >-
            True indicates that the client should display the sheet icon in the
            widget title.
          type: boolean
        title:
          description: Title of the widget.
          type: string
        titleFormat:
          description: >-
            Title format descriptor (see
            [Formatting](../#section/API-Basics/Formatting)).
          type: string
          example: ',,1,,,,,,,3,,,,,,1,'
        titleFont:
          $ref: '#/components/schemas/CellDataItem/properties/labelFont'
        version:
          description: Widget version number.
          type: number
        viewMode:
          description: >
            Indicates the content layout. Must use a query parameter of level=2
            to see this information.
             * 1 - centered
             * 2 - left aligned
          type: number
          enum:
            - 1
            - 2
        width:
          description: Number of columns that the widget occupies on the dashboard.
          type: number
        xPosition:
          description: X-coordinate of widget's position on the dashboard.
          type: number
        yPosition:
          description: Y-coordinate of widget's position on the dashboard.
          type: number
    WidgetHyperlink:
      type: object
      properties:
        interactionType:
          description: >
            Specifies what happens when a user clicks the widget. The type will
            determine what other properties are needed.
             * DISTI_COPY - a distribution link, only available if org has distribution
            links enabled.
             * NONE - do nothing, no other attribute required.
             * SMARTSHEET_ITEM - open a Smartsheet item that is not the SOURCE_SHEET,
            must also have one of the following attributes:
                * dashboardId
                * folderId
                * reportId
                * sheetId
                * workspaceId
             * SOURCE_SHEET - open the container where the widget data comes from,
            no other attribute required.
             * WEB -  launch the URL, must also have url attribute.
          type: string
          enum:
            - DISTI_COPY
            - NONE
            - SMARTSHEET_ITEM
            - SOURCE_SHEET
            - WEB
        folderId:
          description: If interactionType = SMARTSHEET_ITEM this is the folder to open.
          type: number
        reportId:
          description: If interactionType = SMARTSHEET_ITEM this is the report to open.
          type: number
        sheetId:
          description: If interactionType = SMARTSHEET_ITEM this is the sheet to open.
          type: number
        sightId:
          description: If interactionType = SMARTSHEET_ITEM this is the dashboard to open.
          type: number
        url:
          description: If interactionType = WEB this is the URL to launch.
          type: string
        workspaceId:
          description: If interactionType = SMARTSHEET_ITEM this is the workspace to open.
          type: number
    Workspace:
      description: Can contain dashboards, folders, reports, sheets, and templates.
      type: object
      properties:
        id:
          description: Workspace Id.
          type: number
        name:
          description: Workspace name.
          type: string
        accessLevel:
          $ref: '#/components/schemas/Discussion/properties/accessLevel'
        permalink:
          description: URL that represents a direct link to the workspace in Smartsheet.
          type: string
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.smartsheet.com/b/authorize
          tokenUrl: https://api.smartsheet.com/2.0/token
          scopes:
            ADMIN_SHEETS: >-
              Modify sheet structure, including column definition, publish
              state, etc.
            ADMIN_SIGHTS: Modify dashboards structure.
            ADMIN_USERS: >-
              Add and remove users from your Smartsheet organization account;
              create groups and manage membership.
            ADMIN_WEBHOOKS: >-
              Create, delete, and update webhooks; get all webhooks; reset
              shared secret.
            ADMIN_WORKSPACES: Create and manage workspaces and folders, including sharing.
            CREATE_SHEETS: Create new sheets.
            CREATE_SIGHTS: Create new dashboards.
            DELETE_SHEETS: Delete sheets.
            DELETE_SIGHTS: Delete dashboards.
            READ_CONTACTS: Retrieve contacts.
            READ_EVENTS: Retrieve events.
            READ_SHEETS: >-
              Read all sheet data, including attachments, discussions, and cell
              data.
            READ_SIGHTS: Read all dashboards data.
            READ_USERS: >-
              Retrieve users and groups for your Smartsheet organization
              account.
            SHARE_SHEETS: Share sheets, including sending sheets as attachments.
            SHARE_SIGHTS: Share dashboards.
            WRITE_SHEETS: >-
              Insert and modify sheet data, including attachments, discussions,
              and cell data.
    APIToken:
      scheme: bearer
      type: http
      description: API Token
x-tagGroups:
  - name: Alternate Emails
    tags:
      - alternateEmailAddressDescription
      - alternateEmailAddressObjects
      - alternateEmailAddress
  - name: Attachments
    tags:
      - attachmentsDescription
      - attachmentsObjects
      - attachments
  - name: Automation Rules
    tags:
      - automationRulesDescription
      - automationRulesObjects
      - automationRules
      - automationRulesRelated
  - name: Cells
    tags:
      - cellsDescription
      - cellsObjects
      - cells
      - cellsRelated
  - name: Cell Images
    tags:
      - cellImagesDescription
      - cellImagesObjects
      - cellImages
  - name: Columns
    tags:
      - columnsDescription
      - columnsObjects
      - columns
      - columnsRelated
  - name: Comments
    tags:
      - commentsDescription
      - commentsObjects
      - comments
      - commentsRelated
  - name: Common Objects
    tags:
      - commonObjects
  - name: Contacts
    tags:
      - contactsDescription
      - contactsObjects
      - contacts
  - name: Cross-sheet References
    tags:
      - crossSheetReferencesDescription
      - crossSheetReferencesObjects
      - crossSheetReferences
  - name: Dashboards
    tags:
      - dashboardsDescription
      - dashboardsObjects
      - dashboards
  - name: Discussions
    tags:
      - discussionsDescription
      - discussionsObjects
      - discussions
      - discussionsRelated
  - name: Events
    tags:
      - eventsDescription
      - eventsObjects
      - events
  - name: Favorites
    tags:
      - favoritesDescription
      - favoritesObjects
      - favorites
  - name: Folders
    tags:
      - foldersDescription
      - foldersObjects
      - folders
  - name: Groups
    tags:
      - groupsDescription
      - groupsObjects
      - groups
  - name: Group Members
    tags:
      - groupMembersDescription
      - groupMembersObjects
      - groupMembers
  - name: Home
    tags:
      - homeDescription
      - homeObjects
      - home
      - homeRelated
  - name: Import
    tags:
      - importDescription
      - import
  - name: Proofs
    tags:
      - proofsDescription
      - proofsObjects
      - proofs
  - name: Reports
    tags:
      - reportsDescription
      - reportsObjects
      - reports
      - reportsRelated
  - name: Rows
    tags:
      - rowsDescription
      - rowsObjects
      - rows
      - rowsRelated
  - name: Search
    tags:
      - searchDescription
      - searchObjects
      - search
  - name: Send Via Email
    tags:
      - sendViaEmailDescription
      - sendViaEmailObjects
      - sendViaEmail
  - name: Server Information
    tags:
      - serverInfoDescription
      - serverInfoObjects
      - serverInfo
  - name: Sharing
    tags:
      - sharingDescription
      - sharingObjects
      - sharing
  - name: Sheet Summary
    tags:
      - sheetSummaryDescription
      - sheetSummaryObjects
      - sheetSummary
  - name: Sheets
    tags:
      - sheetsDescription
      - sheetsObjects
      - sheets
      - sheetsRelated
  - name: Templates
    tags:
      - templatesDescription
      - templatesObjects
      - templates
  - name: Token
    tags:
      - tokenDescription
      - tokenObjects
      - token
  - name: Update Requests
    tags:
      - updateRequestsDescription
      - updateRequestsObjects
      - updateRequests
  - name: Users
    tags:
      - usersDescription
      - usersObjects
      - users
  - name: Webhooks
    tags:
      - webhooksDescription
      - webhooksObjects
      - webhooks
  - name: Workspaces
    tags:
      - workspacesDescription
      - workspacesObjects
      - workspaces
      - workspacesRelated
